/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chefguru;

import dbconnection.DBConnection;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Random;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import reports_format.Guest_Information_Report;
import reports_format.Room_Information_Report;
import reports_format.Transaction_Report;

/**
 *
 * @author sanda
 */
public class AdminDashboard extends javax.swing.JFrame {

    /**
     * Creates new form CashierDashboard
     */
    //public static final String DATE_FORMAT_NOW = "dd MMM yyyy HH:mm:ss";
    public static String dateTime;
    public static String today;
    
    public static SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    
    public static String now() {
        Calendar cal = Calendar.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat("dd MMM yyyy");
        return sdf.format(cal.getTime());
    }
    
    public static String dateForUse() {
        Calendar cal = Calendar.getInstance();
        return dateFormat.format(cal.getTime());
    }
    
    public static String editUserId;
    public static String editRoomTypeId;
    public static String editDiscountId;
    public static String editRoomId;
    public static String editGuestId;
    public static String editCheckoutId;
    public static String editMessageId;
    
    Connection conn = null;
    PreparedStatement ps = null;
    CallableStatement cs = null;
    ResultSet rs = null;
    
    DBConnection obj = DBConnection.getDb();
    
    public AdminDashboard() {
        
        initComponents();
        
        this.setIconImage(new ImageIcon(getClass().getResource("/image/logo_small.png")).getImage());
        
        today = AdminDashboard.dateForUse();
        
        dateTime = "Date: "+AdminDashboard.now();
        date.setText(dateTime);
        welcomeName.setText("Welcome, "+Login.fullname);
        
        viewUserDetails();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dashboarddPane = new javax.swing.JPanel();
        pane = new javax.swing.JPanel();
        closeBtn = new javax.swing.JLabel();
        minimizeBtn = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        welcomeName = new javax.swing.JLabel();
        LayeredPane = new javax.swing.JLayeredPane();
        user = new javax.swing.JPanel();
        userTopic = new javax.swing.JLabel();
        userId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        userEmail = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        userPhone = new javax.swing.JTextField();
        userName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        userSaveBtn = new javax.swing.JButton();
        userUpdateBtn = new javax.swing.JButton();
        userDeleteBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        userChangePwdBtn = new javax.swing.JButton();
        userPassword = new javax.swing.JTextField();
        pwdLabel = new javax.swing.JLabel();
        userCancelBtn = new javax.swing.JButton();
        roomtype = new javax.swing.JPanel();
        userTopic6 = new javax.swing.JLabel();
        roomTypeId = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        roomTypeRate = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        roomTypeType = new javax.swing.JTextField();
        roomTypeSaveBtn = new javax.swing.JButton();
        roomTypeUpdateBtn = new javax.swing.JButton();
        roomTypeDeleteBtn = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        roomTypeTable = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        roomTypeDescription = new javax.swing.JTextArea();
        jLabel42 = new javax.swing.JLabel();
        roomTypeImage = new javax.swing.JTextField();
        roomTypeCancelBtn = new javax.swing.JButton();
        room = new javax.swing.JPanel();
        userTopic2 = new javax.swing.JLabel();
        roomId = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        roomSaveBtn = new javax.swing.JButton();
        roomUpdateBtn = new javax.swing.JButton();
        roomDeleteBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        roomTable = new javax.swing.JTable();
        roomType = new javax.swing.JComboBox<>();
        roomCancelBtn = new javax.swing.JButton();
        roomGetReport = new javax.swing.JButton();
        discount = new javax.swing.JPanel();
        userTopic1 = new javax.swing.JLabel();
        discountType = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        discountRate = new javax.swing.JTextField();
        discountSaveBtn = new javax.swing.JButton();
        discountUpdateBtn = new javax.swing.JButton();
        discountDeleteBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        discountTable = new javax.swing.JTable();
        discountId = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        discountCancelBtn = new javax.swing.JButton();
        guest = new javax.swing.JPanel();
        userTopic3 = new javax.swing.JLabel();
        guestGetReportBtn = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        guestTable = new javax.swing.JTable();
        transaction = new javax.swing.JPanel();
        transactionTopic = new javax.swing.JLabel();
        transactionGetReportBtn = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        transactionTable = new javax.swing.JTable();
        message = new javax.swing.JPanel();
        transactionTopic1 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        messageTable = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        messageMessage = new javax.swing.JTextArea();
        jLabel43 = new javax.swing.JLabel();
        messageHeading = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        messageEmail = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        messageReplyBtn = new javax.swing.JButton();
        messageCancelBtn = new javax.swing.JButton();
        hrLine = new javax.swing.JPanel();
        logoIcon = new javax.swing.JLabel();
        logoLabel = new javax.swing.JLabel();
        copyrights = new javax.swing.JLabel();
        userPanel = new javax.swing.JPanel();
        userLabel = new javax.swing.JLabel();
        userIcon = new javax.swing.JLabel();
        roomtypePanel = new javax.swing.JPanel();
        checkedOutIcon = new javax.swing.JLabel();
        checkedOutLabel = new javax.swing.JLabel();
        roomPanel = new javax.swing.JPanel();
        roomLabel = new javax.swing.JLabel();
        roomIcon = new javax.swing.JLabel();
        discountPanel = new javax.swing.JPanel();
        discountLabel = new javax.swing.JLabel();
        discountIcon = new javax.swing.JLabel();
        guestPanel = new javax.swing.JPanel();
        guestIcon = new javax.swing.JLabel();
        guestLabel = new javax.swing.JLabel();
        transactionPanel = new javax.swing.JPanel();
        reportLabel = new javax.swing.JLabel();
        reportIcon = new javax.swing.JLabel();
        messagePanel = new javax.swing.JPanel();
        checkedInIcon = new javax.swing.JLabel();
        checkedInLabel = new javax.swing.JLabel();
        logoutPanel = new javax.swing.JPanel();
        logoutLabel = new javax.swing.JLabel();
        logoutIcon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        dashboarddPane.setBackground(new java.awt.Color(102, 0, 0));

        pane.setBackground(new java.awt.Color(255,255,255,200));

        closeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/close_b.png"))); // NOI18N
        closeBtn.setToolTipText("Close");
        closeBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        closeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeBtnMouseClicked(evt);
            }
        });

        minimizeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/minimize_b.png"))); // NOI18N
        minimizeBtn.setToolTipText("Minimize");
        minimizeBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimizeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeBtnMouseClicked(evt);
            }
        });

        date.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        date.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        welcomeName.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        welcomeName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        LayeredPane.setBackground(new java.awt.Color(255, 255, 255));
        LayeredPane.setLayout(new java.awt.CardLayout());

        user.setBackground(new java.awt.Color(255, 255, 255));

        userTopic.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        userTopic.setForeground(new java.awt.Color(51, 51, 51));
        userTopic.setText("User Information");

        userId.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userIdActionPerformed(evt);
            }
        });
        userId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                userIdKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("ID :");

        userEmail.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                userEmailFocusLost(evt);
            }
        });
        userEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userEmailActionPerformed(evt);
            }
        });
        userEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                userEmailKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Name :");

        userPhone.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userPhoneActionPerformed(evt);
            }
        });
        userPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userPhoneKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                userPhoneKeyTyped(evt);
            }
        });

        userName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameActionPerformed(evt);
            }
        });
        userName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                userNameKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Email :");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Phone No :");

        userSaveBtn.setBackground(new java.awt.Color(0, 202, 78));
        userSaveBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userSaveBtn.setForeground(new java.awt.Color(255, 255, 255));
        userSaveBtn.setText("Save");
        userSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userSaveBtnActionPerformed(evt);
            }
        });

        userUpdateBtn.setBackground(new java.awt.Color(255, 189, 68));
        userUpdateBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userUpdateBtn.setForeground(new java.awt.Color(255, 255, 255));
        userUpdateBtn.setText("Update");
        userUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userUpdateBtnActionPerformed(evt);
            }
        });

        userDeleteBtn.setBackground(new java.awt.Color(255, 96, 92));
        userDeleteBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userDeleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        userDeleteBtn.setText("Delete");
        userDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userDeleteBtnActionPerformed(evt);
            }
        });

        userTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Name", "Email", "Phone No"
            }
        ));
        userTable.setRowHeight(20);
        userTable.setSelectionBackground(new java.awt.Color(102, 0, 0));
        userTable.setSelectionForeground(new java.awt.Color(255, 234, 231));
        userTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(userTable);

        userChangePwdBtn.setBackground(new java.awt.Color(255, 189, 68));
        userChangePwdBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userChangePwdBtn.setForeground(new java.awt.Color(255, 255, 255));
        userChangePwdBtn.setText("Change Password");
        userChangePwdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userChangePwdBtnActionPerformed(evt);
            }
        });

        userPassword.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userPasswordActionPerformed(evt);
            }
        });

        pwdLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pwdLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pwdLabel.setText("Password :");

        userCancelBtn.setBackground(new java.awt.Color(85, 85, 85));
        userCancelBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userCancelBtn.setForeground(new java.awt.Color(255, 255, 255));
        userCancelBtn.setText("Cancel");
        userCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userCancelBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout userLayout = new javax.swing.GroupLayout(user);
        user.setLayout(userLayout);
        userLayout.setHorizontalGroup(
            userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userLayout.createSequentialGroup()
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userLayout.createSequentialGroup()
                        .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(userLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(userTopic, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(userLayout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel6)
                                    .addComponent(pwdLabel)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(userEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(userPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(userId, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(userLayout.createSequentialGroup()
                                        .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(userPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(31, 31, 31)
                                        .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(userChangePwdBtn)
                                            .addGroup(userLayout.createSequentialGroup()
                                                .addComponent(userSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(userUpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(userDeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(userCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                        .addGap(0, 94, Short.MAX_VALUE))
                    .addGroup(userLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        userLayout.setVerticalGroup(
            userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userLayout.createSequentialGroup()
                .addComponent(userTopic)
                .addGap(30, 30, 30)
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(userSaveBtn)
                    .addComponent(userUpdateBtn)
                    .addComponent(userDeleteBtn)
                    .addComponent(userCancelBtn))
                .addGap(33, 33, 33)
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userChangePwdBtn)
                    .addComponent(pwdLabel)
                    .addComponent(userPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        LayeredPane.add(user, "card2");

        roomtype.setBackground(new java.awt.Color(255, 255, 255));

        userTopic6.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        userTopic6.setForeground(new java.awt.Color(51, 51, 51));
        userTopic6.setText("Room Type Information");

        roomTypeId.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roomTypeId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomTypeIdActionPerformed(evt);
            }
        });
        roomTypeId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                roomTypeIdKeyTyped(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel37.setText("ID :");

        roomTypeRate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roomTypeRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomTypeRateActionPerformed(evt);
            }
        });
        roomTypeRate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                roomTypeRateKeyTyped(evt);
            }
        });

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel39.setText("Room Type :");

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel40.setText("Description :");

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel41.setText("Rate :");

        roomTypeType.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roomTypeType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomTypeTypeActionPerformed(evt);
            }
        });
        roomTypeType.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                roomTypeTypeKeyTyped(evt);
            }
        });

        roomTypeSaveBtn.setBackground(new java.awt.Color(0, 202, 78));
        roomTypeSaveBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roomTypeSaveBtn.setForeground(new java.awt.Color(255, 255, 255));
        roomTypeSaveBtn.setText("Save");
        roomTypeSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomTypeSaveBtnActionPerformed(evt);
            }
        });

        roomTypeUpdateBtn.setBackground(new java.awt.Color(255, 189, 68));
        roomTypeUpdateBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roomTypeUpdateBtn.setForeground(new java.awt.Color(255, 255, 255));
        roomTypeUpdateBtn.setText("Update");
        roomTypeUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomTypeUpdateBtnActionPerformed(evt);
            }
        });

        roomTypeDeleteBtn.setBackground(new java.awt.Color(255, 96, 92));
        roomTypeDeleteBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roomTypeDeleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        roomTypeDeleteBtn.setText("Delete");
        roomTypeDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomTypeDeleteBtnActionPerformed(evt);
            }
        });

        roomTypeTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roomTypeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Room Type", "Description", "Room Rate ($)"
            }
        ));
        roomTypeTable.setRowHeight(20);
        roomTypeTable.setSelectionBackground(new java.awt.Color(102, 0, 0));
        roomTypeTable.setSelectionForeground(new java.awt.Color(255, 234, 231));
        roomTypeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roomTypeTableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(roomTypeTable);

        roomTypeDescription.setColumns(20);
        roomTypeDescription.setLineWrap(true);
        roomTypeDescription.setRows(5);
        jScrollPane5.setViewportView(roomTypeDescription);

        jLabel42.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel42.setText("Image :");

        roomTypeImage.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roomTypeImage.setText("room_type_default.jpg");
        roomTypeImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomTypeImageActionPerformed(evt);
            }
        });
        roomTypeImage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                roomTypeImageKeyTyped(evt);
            }
        });

        roomTypeCancelBtn.setBackground(new java.awt.Color(85, 85, 85));
        roomTypeCancelBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roomTypeCancelBtn.setForeground(new java.awt.Color(255, 255, 255));
        roomTypeCancelBtn.setText("Cancel");
        roomTypeCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomTypeCancelBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout roomtypeLayout = new javax.swing.GroupLayout(roomtype);
        roomtype.setLayout(roomtypeLayout);
        roomtypeLayout.setHorizontalGroup(
            roomtypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomtypeLayout.createSequentialGroup()
                .addGroup(roomtypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roomtypeLayout.createSequentialGroup()
                        .addGroup(roomtypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(roomtypeLayout.createSequentialGroup()
                                .addGap(122, 122, 122)
                                .addGroup(roomtypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel37)
                                    .addComponent(jLabel40)
                                    .addComponent(jLabel39)
                                    .addComponent(jLabel41)
                                    .addComponent(jLabel42))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(roomtypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(roomtypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(roomTypeId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                        .addComponent(roomTypeType, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(roomTypeRate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(roomtypeLayout.createSequentialGroup()
                                        .addComponent(roomTypeImage, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(42, 42, 42)
                                        .addComponent(roomTypeSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(roomTypeUpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(roomTypeDeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(roomTypeCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(roomtypeLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(userTopic6, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 76, Short.MAX_VALUE))
                    .addGroup(roomtypeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane6)))
                .addContainerGap())
        );
        roomtypeLayout.setVerticalGroup(
            roomtypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomtypeLayout.createSequentialGroup()
                .addComponent(userTopic6)
                .addGap(30, 30, 30)
                .addGroup(roomtypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomTypeId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel37))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(roomtypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(roomTypeType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(roomtypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel40)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(roomtypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel41)
                    .addComponent(roomTypeRate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(roomtypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomTypeImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roomTypeSaveBtn)
                    .addComponent(roomTypeUpdateBtn)
                    .addComponent(roomTypeDeleteBtn)
                    .addComponent(jLabel42)
                    .addComponent(roomTypeCancelBtn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                .addContainerGap())
        );

        LayeredPane.add(roomtype, "card2");

        room.setBackground(new java.awt.Color(255, 255, 255));

        userTopic2.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        userTopic2.setForeground(new java.awt.Color(51, 51, 51));
        userTopic2.setText("Room Information");

        roomId.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roomId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomIdActionPerformed(evt);
            }
        });
        roomId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                roomIdKeyTyped(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Room ID :");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Room Type :");

        roomSaveBtn.setBackground(new java.awt.Color(0, 202, 78));
        roomSaveBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roomSaveBtn.setForeground(new java.awt.Color(255, 255, 255));
        roomSaveBtn.setText("Save");
        roomSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomSaveBtnActionPerformed(evt);
            }
        });

        roomUpdateBtn.setBackground(new java.awt.Color(255, 189, 68));
        roomUpdateBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roomUpdateBtn.setForeground(new java.awt.Color(255, 255, 255));
        roomUpdateBtn.setText("Update");
        roomUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomUpdateBtnActionPerformed(evt);
            }
        });

        roomDeleteBtn.setBackground(new java.awt.Color(255, 96, 92));
        roomDeleteBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roomDeleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        roomDeleteBtn.setText("Delete");
        roomDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomDeleteBtnActionPerformed(evt);
            }
        });

        roomTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roomTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Id", "Room Type", "Status"
            }
        ));
        roomTable.setRowHeight(20);
        roomTable.setSelectionBackground(new java.awt.Color(102, 0, 0));
        roomTable.setSelectionForeground(new java.awt.Color(255, 234, 231));
        roomTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roomTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(roomTable);

        roomType.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        roomCancelBtn.setBackground(new java.awt.Color(85, 85, 85));
        roomCancelBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roomCancelBtn.setForeground(new java.awt.Color(255, 255, 255));
        roomCancelBtn.setText("Cancel");
        roomCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomCancelBtnActionPerformed(evt);
            }
        });

        roomGetReport.setBackground(new java.awt.Color(0, 202, 78));
        roomGetReport.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roomGetReport.setForeground(new java.awt.Color(255, 255, 255));
        roomGetReport.setText("Get Report");
        roomGetReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomGetReportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout roomLayout = new javax.swing.GroupLayout(room);
        room.setLayout(roomLayout);
        roomLayout.setHorizontalGroup(
            roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomLayout.createSequentialGroup()
                .addGroup(roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roomLayout.createSequentialGroup()
                        .addGroup(roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(roomLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(userTopic2, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(roomLayout.createSequentialGroup()
                                .addGap(122, 122, 122)
                                .addGroup(roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(roomId, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(roomLayout.createSequentialGroup()
                                        .addComponent(roomType, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)
                                        .addComponent(roomSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(roomUpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(roomDeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(roomCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 54, Short.MAX_VALUE))
                    .addGroup(roomLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3)))
                .addContainerGap())
            .addGroup(roomLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(roomGetReport)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        roomLayout.setVerticalGroup(
            roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomLayout.createSequentialGroup()
                .addComponent(userTopic2)
                .addGap(30, 30, 30)
                .addGroup(roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(roomType, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roomSaveBtn)
                    .addComponent(roomUpdateBtn)
                    .addComponent(roomDeleteBtn)
                    .addComponent(roomCancelBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(roomGetReport)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        LayeredPane.add(room, "card2");

        discount.setBackground(new java.awt.Color(255, 255, 255));

        userTopic1.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        userTopic1.setForeground(new java.awt.Color(51, 51, 51));
        userTopic1.setText("Discount Information");

        discountType.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        discountType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountTypeActionPerformed(evt);
            }
        });
        discountType.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                discountTypeKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Discount Type :");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Discount Rate (%) :");

        discountRate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        discountRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountRateActionPerformed(evt);
            }
        });
        discountRate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                discountRateKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                discountRateKeyTyped(evt);
            }
        });

        discountSaveBtn.setBackground(new java.awt.Color(0, 202, 78));
        discountSaveBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        discountSaveBtn.setForeground(new java.awt.Color(255, 255, 255));
        discountSaveBtn.setText("Save");
        discountSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountSaveBtnActionPerformed(evt);
            }
        });

        discountUpdateBtn.setBackground(new java.awt.Color(255, 189, 68));
        discountUpdateBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        discountUpdateBtn.setForeground(new java.awt.Color(255, 255, 255));
        discountUpdateBtn.setText("Update");
        discountUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountUpdateBtnActionPerformed(evt);
            }
        });

        discountDeleteBtn.setBackground(new java.awt.Color(255, 96, 92));
        discountDeleteBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        discountDeleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        discountDeleteBtn.setText("Delete");
        discountDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountDeleteBtnActionPerformed(evt);
            }
        });

        discountTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        discountTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Id", "Discount Type", "Discount Rate (%)"
            }
        ));
        discountTable.setRowHeight(20);
        discountTable.setSelectionBackground(new java.awt.Color(102, 0, 0));
        discountTable.setSelectionForeground(new java.awt.Color(255, 234, 231));
        discountTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                discountTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(discountTable);

        discountId.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        discountId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountIdActionPerformed(evt);
            }
        });
        discountId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                discountIdKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Id :");

        discountCancelBtn.setBackground(new java.awt.Color(85, 85, 85));
        discountCancelBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        discountCancelBtn.setForeground(new java.awt.Color(255, 255, 255));
        discountCancelBtn.setText("Cancel");
        discountCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountCancelBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout discountLayout = new javax.swing.GroupLayout(discount);
        discount.setLayout(discountLayout);
        discountLayout.setHorizontalGroup(
            discountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(discountLayout.createSequentialGroup()
                .addGroup(discountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(discountLayout.createSequentialGroup()
                        .addGroup(discountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(discountLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(userTopic1, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(discountLayout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addGroup(discountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(discountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(discountType, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(discountId, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(discountLayout.createSequentialGroup()
                                        .addComponent(discountRate, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)
                                        .addComponent(discountSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(discountUpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(discountDeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(discountCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 46, Short.MAX_VALUE))
                    .addGroup(discountLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2)))
                .addContainerGap())
        );
        discountLayout.setVerticalGroup(
            discountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(discountLayout.createSequentialGroup()
                .addComponent(userTopic1)
                .addGap(30, 30, 30)
                .addGroup(discountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(discountId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(discountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(discountType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(discountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(discountRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(discountSaveBtn)
                    .addComponent(discountUpdateBtn)
                    .addComponent(discountDeleteBtn)
                    .addComponent(jLabel8)
                    .addComponent(discountCancelBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        LayeredPane.add(discount, "card2");

        guest.setBackground(new java.awt.Color(255, 255, 255));

        userTopic3.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        userTopic3.setForeground(new java.awt.Color(51, 51, 51));
        userTopic3.setText("Guest Information");

        guestGetReportBtn.setBackground(new java.awt.Color(0, 202, 78));
        guestGetReportBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        guestGetReportBtn.setForeground(new java.awt.Color(255, 255, 255));
        guestGetReportBtn.setText("Get Report");
        guestGetReportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guestGetReportBtnActionPerformed(evt);
            }
        });

        guestTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        guestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Name", "Address", "Email", "Phone No"
            }
        ));
        guestTable.setRowHeight(20);
        guestTable.setSelectionBackground(new java.awt.Color(102, 0, 0));
        guestTable.setSelectionForeground(new java.awt.Color(255, 234, 231));
        guestTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guestTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(guestTable);

        javax.swing.GroupLayout guestLayout = new javax.swing.GroupLayout(guest);
        guest.setLayout(guestLayout);
        guestLayout.setHorizontalGroup(
            guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guestLayout.createSequentialGroup()
                .addGroup(guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(guestLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(userTopic3, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 405, Short.MAX_VALUE))
                    .addGroup(guestLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4)))
                .addContainerGap())
            .addGroup(guestLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(guestGetReportBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        guestLayout.setVerticalGroup(
            guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guestLayout.createSequentialGroup()
                .addComponent(userTopic3)
                .addGap(18, 18, 18)
                .addComponent(guestGetReportBtn)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
                .addContainerGap())
        );

        LayeredPane.add(guest, "card2");

        transaction.setBackground(new java.awt.Color(255, 255, 255));

        transactionTopic.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        transactionTopic.setForeground(new java.awt.Color(51, 51, 51));
        transactionTopic.setText("Transaction Information");

        transactionGetReportBtn.setBackground(new java.awt.Color(0, 202, 78));
        transactionGetReportBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        transactionGetReportBtn.setForeground(new java.awt.Color(255, 255, 255));
        transactionGetReportBtn.setText("Get Report");
        transactionGetReportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transactionGetReportBtnActionPerformed(evt);
            }
        });

        transactionTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        transactionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Bill Id", "Type", "Date", "Amount (Rs.)"
            }
        ));
        transactionTable.setRowHeight(20);
        transactionTable.setSelectionBackground(new java.awt.Color(102, 0, 0));
        transactionTable.setSelectionForeground(new java.awt.Color(255, 234, 231));
        transactionTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                transactionTableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(transactionTable);

        javax.swing.GroupLayout transactionLayout = new javax.swing.GroupLayout(transaction);
        transaction.setLayout(transactionLayout);
        transactionLayout.setHorizontalGroup(
            transactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transactionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(transactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 791, Short.MAX_VALUE)
                    .addGroup(transactionLayout.createSequentialGroup()
                        .addGroup(transactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(transactionTopic, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(transactionGetReportBtn))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        transactionLayout.setVerticalGroup(
            transactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transactionLayout.createSequentialGroup()
                .addComponent(transactionTopic)
                .addGap(18, 18, 18)
                .addComponent(transactionGetReportBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
                .addContainerGap())
        );

        LayeredPane.add(transaction, "card2");

        message.setBackground(new java.awt.Color(255, 255, 255));

        transactionTopic1.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        transactionTopic1.setForeground(new java.awt.Color(51, 51, 51));
        transactionTopic1.setText("Customer Message");

        messageTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        messageTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Name", "Email", "Phone No", "Message", "Received Time", "Is Replied"
            }
        ));
        messageTable.setRowHeight(20);
        messageTable.setSelectionBackground(new java.awt.Color(102, 0, 0));
        messageTable.setSelectionForeground(new java.awt.Color(255, 234, 231));
        messageTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                messageTableMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(messageTable);

        messageMessage.setColumns(20);
        messageMessage.setLineWrap(true);
        messageMessage.setRows(5);
        jScrollPane9.setViewportView(messageMessage);

        jLabel43.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel43.setText("Message :");

        messageHeading.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        messageHeading.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageHeadingActionPerformed(evt);
            }
        });
        messageHeading.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                messageHeadingKeyTyped(evt);
            }
        });

        jLabel44.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel44.setText("Heading :");

        messageEmail.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        messageEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageEmailActionPerformed(evt);
            }
        });
        messageEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                messageEmailKeyTyped(evt);
            }
        });

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel38.setText("Email :");

        messageReplyBtn.setBackground(new java.awt.Color(0, 202, 78));
        messageReplyBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        messageReplyBtn.setForeground(new java.awt.Color(255, 255, 255));
        messageReplyBtn.setText("Reply");
        messageReplyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageReplyBtnActionPerformed(evt);
            }
        });

        messageCancelBtn.setBackground(new java.awt.Color(85, 85, 85));
        messageCancelBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        messageCancelBtn.setForeground(new java.awt.Color(255, 255, 255));
        messageCancelBtn.setText("Cancel");
        messageCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageCancelBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout messageLayout = new javax.swing.GroupLayout(message);
        message.setLayout(messageLayout);
        messageLayout.setHorizontalGroup(
            messageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(messageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(messageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 791, Short.MAX_VALUE)
                    .addGroup(messageLayout.createSequentialGroup()
                        .addComponent(transactionTopic1, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(messageLayout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addGroup(messageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(messageLayout.createSequentialGroup()
                        .addComponent(messageReplyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(messageCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(messageLayout.createSequentialGroup()
                        .addGroup(messageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel38)
                            .addComponent(jLabel43)
                            .addComponent(jLabel44))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(messageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                            .addComponent(messageEmail)
                            .addComponent(messageHeading))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        messageLayout.setVerticalGroup(
            messageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(messageLayout.createSequentialGroup()
                .addComponent(transactionTopic1)
                .addGap(18, 18, 18)
                .addGroup(messageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(messageEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(messageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel44)
                    .addComponent(messageHeading, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(messageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel43)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(messageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(messageCancelBtn)
                    .addComponent(messageReplyBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        LayeredPane.add(message, "card2");

        javax.swing.GroupLayout paneLayout = new javax.swing.GroupLayout(pane);
        pane.setLayout(paneLayout);
        paneLayout.setHorizontalGroup(
            paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(welcomeName, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(minimizeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(LayeredPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        paneLayout.setVerticalGroup(
            paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneLayout.createSequentialGroup()
                .addGroup(paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(closeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(minimizeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(welcomeName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LayeredPane))
        );

        hrLine.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout hrLineLayout = new javax.swing.GroupLayout(hrLine);
        hrLine.setLayout(hrLineLayout);
        hrLineLayout.setHorizontalGroup(
            hrLineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        hrLineLayout.setVerticalGroup(
            hrLineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        logoIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logo_small.png"))); // NOI18N

        logoLabel.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 48)); // NOI18N
        logoLabel.setForeground(new java.awt.Color(255, 255, 255));
        logoLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        logoLabel.setText("HMS");

        copyrights.setForeground(new java.awt.Color(204, 204, 204));
        copyrights.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        copyrights.setText("©Team_Semicolon;");

        userPanel.setBackground(new java.awt.Color(102, 0, 0));
        userPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                userPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                userPanelMouseExited(evt);
            }
        });

        userLabel.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        userLabel.setForeground(new java.awt.Color(255, 255, 255));
        userLabel.setText("User");
        userLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        userIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/setting.png"))); // NOI18N
        userIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout userPanelLayout = new javax.swing.GroupLayout(userPanel);
        userPanel.setLayout(userPanelLayout);
        userPanelLayout.setHorizontalGroup(
            userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(userIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(userLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                .addContainerGap())
        );
        userPanelLayout.setVerticalGroup(
            userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(userLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(userIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        roomtypePanel.setBackground(new java.awt.Color(102, 0, 0));
        roomtypePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roomtypePanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                roomtypePanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                roomtypePanelMouseExited(evt);
            }
        });

        checkedOutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/checked.png"))); // NOI18N
        checkedOutIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        checkedOutLabel.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        checkedOutLabel.setForeground(new java.awt.Color(255, 255, 255));
        checkedOutLabel.setText("Room Type");
        checkedOutLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout roomtypePanelLayout = new javax.swing.GroupLayout(roomtypePanel);
        roomtypePanel.setLayout(roomtypePanelLayout);
        roomtypePanelLayout.setHorizontalGroup(
            roomtypePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomtypePanelLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(checkedOutIcon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkedOutLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                .addContainerGap())
        );
        roomtypePanelLayout.setVerticalGroup(
            roomtypePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(checkedOutIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(roomtypePanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(checkedOutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        roomPanel.setBackground(new java.awt.Color(102, 0, 0));
        roomPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roomPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                roomPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                roomPanelMouseExited(evt);
            }
        });

        roomLabel.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        roomLabel.setForeground(new java.awt.Color(255, 255, 255));
        roomLabel.setText("Room");
        roomLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        roomIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/room.png"))); // NOI18N
        roomIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout roomPanelLayout = new javax.swing.GroupLayout(roomPanel);
        roomPanel.setLayout(roomPanelLayout);
        roomPanelLayout.setHorizontalGroup(
            roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(roomIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(roomLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addContainerGap())
        );
        roomPanelLayout.setVerticalGroup(
            roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(roomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(roomIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        discountPanel.setBackground(new java.awt.Color(102, 0, 0));
        discountPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                discountPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                discountPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                discountPanelMouseExited(evt);
            }
        });

        discountLabel.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        discountLabel.setForeground(new java.awt.Color(255, 255, 255));
        discountLabel.setText("Discount");
        discountLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        discountIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/discount.png"))); // NOI18N
        discountIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout discountPanelLayout = new javax.swing.GroupLayout(discountPanel);
        discountPanel.setLayout(discountPanelLayout);
        discountPanelLayout.setHorizontalGroup(
            discountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(discountPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(discountIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(discountLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addContainerGap())
        );
        discountPanelLayout.setVerticalGroup(
            discountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(discountPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(discountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(discountIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        guestPanel.setBackground(new java.awt.Color(102, 0, 0));
        guestPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guestPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                guestPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                guestPanelMouseExited(evt);
            }
        });

        guestIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/guest.png"))); // NOI18N
        guestIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        guestLabel.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        guestLabel.setForeground(new java.awt.Color(255, 255, 255));
        guestLabel.setText("Guest");
        guestLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout guestPanelLayout = new javax.swing.GroupLayout(guestPanel);
        guestPanel.setLayout(guestPanelLayout);
        guestPanelLayout.setHorizontalGroup(
            guestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guestPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(guestIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(guestLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addContainerGap())
        );
        guestPanelLayout.setVerticalGroup(
            guestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guestPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(guestLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(guestIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        transactionPanel.setBackground(new java.awt.Color(102, 0, 0));
        transactionPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                transactionPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                transactionPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                transactionPanelMouseExited(evt);
            }
        });

        reportLabel.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        reportLabel.setForeground(new java.awt.Color(255, 255, 255));
        reportLabel.setText("Transaction");
        reportLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        reportIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/report.png"))); // NOI18N
        reportIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout transactionPanelLayout = new javax.swing.GroupLayout(transactionPanel);
        transactionPanel.setLayout(transactionPanelLayout);
        transactionPanelLayout.setHorizontalGroup(
            transactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transactionPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(reportIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(reportLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addContainerGap())
        );
        transactionPanelLayout.setVerticalGroup(
            transactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transactionPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(reportLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(reportIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        messagePanel.setBackground(new java.awt.Color(102, 0, 0));
        messagePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                messagePanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                messagePanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                messagePanelMouseExited(evt);
            }
        });

        checkedInIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/checked.png"))); // NOI18N
        checkedInIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        checkedInLabel.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        checkedInLabel.setForeground(new java.awt.Color(255, 255, 255));
        checkedInLabel.setText("Message");
        checkedInLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout messagePanelLayout = new javax.swing.GroupLayout(messagePanel);
        messagePanel.setLayout(messagePanelLayout);
        messagePanelLayout.setHorizontalGroup(
            messagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(messagePanelLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(checkedInIcon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkedInLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE))
        );
        messagePanelLayout.setVerticalGroup(
            messagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(checkedInIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(messagePanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(checkedInLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        logoutPanel.setBackground(new java.awt.Color(102, 0, 0));
        logoutPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logoutPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logoutPanelMouseExited(evt);
            }
        });

        logoutLabel.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        logoutLabel.setForeground(new java.awt.Color(255, 255, 255));
        logoutLabel.setText("Logout");
        logoutLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        logoutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logout.png"))); // NOI18N
        logoutIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout logoutPanelLayout = new javax.swing.GroupLayout(logoutPanel);
        logoutPanel.setLayout(logoutPanelLayout);
        logoutPanelLayout.setHorizontalGroup(
            logoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoutPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(logoutIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(logoutLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addContainerGap())
        );
        logoutPanelLayout.setVerticalGroup(
            logoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoutPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(logoutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(logoutIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout dashboarddPaneLayout = new javax.swing.GroupLayout(dashboarddPane);
        dashboarddPane.setLayout(dashboarddPaneLayout);
        dashboarddPaneLayout.setHorizontalGroup(
            dashboarddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashboarddPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dashboarddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hrLine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(copyrights, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(userPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(dashboarddPaneLayout.createSequentialGroup()
                        .addGroup(dashboarddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(dashboarddPaneLayout.createSequentialGroup()
                                .addComponent(logoIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(logoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(roomtypePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(roomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(discountPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(transactionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(logoutPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(guestPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(messagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );
        dashboarddPaneLayout.setVerticalGroup(
            dashboarddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashboarddPaneLayout.createSequentialGroup()
                .addGroup(dashboarddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(dashboarddPaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(dashboarddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(logoIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                            .addComponent(logoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hrLine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(userPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(roomtypePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(roomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(discountPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guestPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(transactionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(messagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(logoutPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(copyrights))
                    .addGroup(dashboarddPaneLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dashboarddPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dashboarddPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void closeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeBtnMouseClicked
        new Logout().setVisible(true);
    }//GEN-LAST:event_closeBtnMouseClicked

    private void minimizeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeBtnMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minimizeBtnMouseClicked

    private void messagePanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_messagePanelMouseEntered
        messagePanel.setBackground(new java.awt.Color(70, 0, 0));
        checkedInIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/checked_filled.png")));
    }//GEN-LAST:event_messagePanelMouseEntered

    private void messagePanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_messagePanelMouseExited
        messagePanel.setBackground(new java.awt.Color(102, 0, 0));
        checkedInIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/checked.png")));
    }//GEN-LAST:event_messagePanelMouseExited

    private void transactionPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_transactionPanelMouseEntered
        transactionPanel.setBackground(new java.awt.Color(70, 0, 0));
        reportIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/report_filled.png")));
    }//GEN-LAST:event_transactionPanelMouseEntered

    private void transactionPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_transactionPanelMouseExited
        transactionPanel.setBackground(new java.awt.Color(102, 0, 0));
        reportIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/report.png")));
    }//GEN-LAST:event_transactionPanelMouseExited

    private void guestPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guestPanelMouseEntered
        guestPanel.setBackground(new java.awt.Color(70, 0, 0));
        guestIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/guest_filled.png")));
    }//GEN-LAST:event_guestPanelMouseEntered

    private void guestPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guestPanelMouseExited
        guestPanel.setBackground(new java.awt.Color(102, 0, 0));
        guestIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/guest.png")));
    }//GEN-LAST:event_guestPanelMouseExited

    private void roomPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomPanelMouseEntered
        roomPanel.setBackground(new java.awt.Color(70, 0, 0));
        roomIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/room_filled.png")));
    }//GEN-LAST:event_roomPanelMouseEntered

    private void roomPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomPanelMouseExited
        roomPanel.setBackground(new java.awt.Color(102, 0, 0));
        roomIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/room.png")));
    }//GEN-LAST:event_roomPanelMouseExited

    private void discountPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_discountPanelMouseEntered
        discountPanel.setBackground(new java.awt.Color(70, 0, 0));
        discountIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/discount_filled.png")));
    }//GEN-LAST:event_discountPanelMouseEntered

    private void discountPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_discountPanelMouseExited
        discountPanel.setBackground(new java.awt.Color(102, 0, 0));
        discountIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/discount.png")));
    }//GEN-LAST:event_discountPanelMouseExited

    private void logoutPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutPanelMouseEntered
        logoutPanel.setBackground(new java.awt.Color(70, 0, 0));
        logoutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logout_filled.png")));
    }//GEN-LAST:event_logoutPanelMouseEntered

    private void logoutPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutPanelMouseExited
        logoutPanel.setBackground(new java.awt.Color(102, 0, 0));
        logoutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logout.png")));
    }//GEN-LAST:event_logoutPanelMouseExited

    private void userPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userPanelMouseEntered
        userPanel.setBackground(new java.awt.Color(70, 0, 0));
        userIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/setting_filled.png")));
    }//GEN-LAST:event_userPanelMouseEntered

    private void userPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userPanelMouseExited
        userPanel.setBackground(new java.awt.Color(102, 0, 0));
        userIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/setting.png")));
    }//GEN-LAST:event_userPanelMouseExited

    private void messagePanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_messagePanelMouseClicked
        panelDefault();
        message.setVisible(true);
                
        viewMessageDetails();        
    }//GEN-LAST:event_messagePanelMouseClicked

    private void guestPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guestPanelMouseClicked
        panelDefault();
        guest.setVisible(true);
        
        viewGuestDetails();
    }//GEN-LAST:event_guestPanelMouseClicked

    private void roomPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomPanelMouseClicked
        panelDefault();
        room.setVisible(true);
        
        viewRoomDetails();
    }//GEN-LAST:event_roomPanelMouseClicked

    private void discountPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_discountPanelMouseClicked
        panelDefault();
        discount.setVisible(true);
        
        viewDiscountDetails();
    }//GEN-LAST:event_discountPanelMouseClicked

    private void transactionPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_transactionPanelMouseClicked
        panelDefault();
        transaction.setVisible(true);
        
        viewTransactionDetails();
    }//GEN-LAST:event_transactionPanelMouseClicked

    private void userPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userPanelMouseClicked
        panelDefault();
        user.setVisible(true);
        
        viewUserDetails();
    }//GEN-LAST:event_userPanelMouseClicked

    private void logoutPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutPanelMouseClicked
        new Logout().setVisible(true);
    }//GEN-LAST:event_logoutPanelMouseClicked

    private void userIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userIdActionPerformed

    private void userEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userEmailActionPerformed

    private void userPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userPhoneActionPerformed

    private void userNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameActionPerformed

    private void userPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userPasswordActionPerformed

    private void userUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userUpdateBtnActionPerformed
        User user = new User();
        
        String id = this.userId.getText().trim();
        String name = this.userName.getText().trim();
        String email = this.userEmail.getText().trim();
        String phone = this.userPhone.getText().trim();
        //String password = this.password.getText().trim();
        
        if(id.isEmpty() || name.isEmpty() || email.isEmpty() || phone.isEmpty()){
            new ErrorMsg().showErr("Please fill all the fields...");
        } else {
            user.setId(id);
            user.setName(name);
            user.setEmail(email);
            user.setPhone(phone);
            //user.setPassword(password);

            user.updateUser(editUserId);
            viewUserDetails();
        }
    }//GEN-LAST:event_userUpdateBtnActionPerformed

    private void userDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userDeleteBtnActionPerformed
        
        conn = obj.connect();
        
        try {
            if(editUserId.isEmpty()){
                new ErrorMsg().showErr("Please select record...");
            } else {
                int a = JOptionPane.showConfirmDialog(null, "Are you sure ?");
                if(a==0){
                    try {
                        cs = conn.prepareCall("{call deleteUserDetails(?)}");
                        cs.setString("username", editUserId);
                        
                        if(cs.executeUpdate()==2){
                            viewUserDetails();
                            new ErrorMsg().showErr("Record deleted successfully...");
                        }
                    } catch (SQLException e) {
                        new ErrorMsg().showErr(e.getMessage());
                    }
                    editUserId = null;
                }
            }
        } catch (HeadlessException e) {
            new ErrorMsg().showErr("Please select record...");
        }
        
        conn = null;
    }//GEN-LAST:event_userDeleteBtnActionPerformed

    private void userTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userTableMouseClicked
        DefaultTableModel model = (DefaultTableModel) userTable.getModel();
        int row = userTable.getSelectedRow();

        editUserId = userTable.getValueAt(row, 0).toString();

        userId.setText(editUserId);
        userName.setText(userTable.getValueAt(row, 1).toString());
        userEmail.setText(userTable.getValueAt(row, 2).toString());
        userPhone.setText(userTable.getValueAt(row, 3).toString());

        //self deleting disabled
        if(!editUserId.equalsIgnoreCase(Login.id)){
            if(editUserId.substring(0, 3).equalsIgnoreCase("ADM")){
                userUpdateBtn.setVisible(false);
                userDeleteBtn.setVisible(false);
                userCancelBtn.setVisible(true);
            } else {
                userUpdateBtn.setVisible(true);
                userDeleteBtn.setVisible(true);
                userCancelBtn.setVisible(true);
            }
            userSaveBtn.setVisible(false);
            pwdLabel.setEnabled(false);
            userPassword.setEnabled(false);
            userChangePwdBtn.setEnabled(false);
        } else {
            userSaveBtn.setVisible(false);
            userUpdateBtn.setVisible(true);
            userDeleteBtn.setVisible(false);
            userCancelBtn.setVisible(true);
            pwdLabel.setEnabled(true);
            userPassword.setEnabled(true);
            userChangePwdBtn.setEnabled(true);
        }
    }//GEN-LAST:event_userTableMouseClicked

    private void userSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userSaveBtnActionPerformed
        User user = new User();
        
        String id = this.userId.getText().trim();
        String name = this.userName.getText().trim();
        String email = this.userEmail.getText().trim();
        String phone = this.userPhone.getText().trim();
        String password = String.valueOf(new Random().nextInt(1000));
       
        
        
        if(id.isEmpty() || name.isEmpty() || email.isEmpty() || phone.isEmpty()){
            new ErrorMsg().showErr("Please fill all the fields...");
        } else {
            user.setId(id);
            user.setName(name);
            user.setEmail(email);
            user.setPhone(phone);
            user.setPassword(password);

            user.createUser();
            viewUserDetails();
        }
    }//GEN-LAST:event_userSaveBtnActionPerformed

    private void userPhoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userPhoneKeyTyped
        char enter = evt.getKeyChar();
        
        if ((userPhone.getText().length() >= 10 ) || (!(Character.isDigit(enter)))){
            evt.consume();
        }
    }//GEN-LAST:event_userPhoneKeyTyped

    private void userPhoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userPhoneKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_userPhoneKeyPressed

    private void userIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userIdKeyTyped
        if ( userId.getText().length() >= 6 ){
            evt.consume();
        }
    }//GEN-LAST:event_userIdKeyTyped

    private void userChangePwdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userChangePwdBtnActionPerformed
        User user = new User();
        
        String password = this.userPassword.getText().trim();
        
        if(password.isEmpty()){
            new ErrorMsg().showErr("Please enter password...");
        } else {
            user.setPassword(password);
            user.setEmail(this.userEmail.getText().trim());

            user.changePassword(editUserId);
            viewUserDetails();
        }
    }//GEN-LAST:event_userChangePwdBtnActionPerformed

    private void discountTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_discountTypeActionPerformed

    private void discountTypeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountTypeKeyTyped
        if (discountType.getText().length() >= 20){
            evt.consume();
        }
    }//GEN-LAST:event_discountTypeKeyTyped

    private void discountRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_discountRateActionPerformed

    private void discountSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountSaveBtnActionPerformed
        Discount discount = new Discount();
        
        String id = this.discountId.getText().trim();
        String type = this.discountType.getText().trim();
        String rate = this.discountRate.getText().trim();
        
        if(id.isEmpty() || type.isEmpty() || rate.isEmpty()){
            new ErrorMsg().showErr("Please fill all the fields...");
        } else {
            discount.setId(id);
            discount.setType(type);
            discount.setRate(rate);

            discount.createDiscount();
            viewDiscountDetails();
        }
    }//GEN-LAST:event_discountSaveBtnActionPerformed

    private void discountUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountUpdateBtnActionPerformed
        Discount discount = new Discount();
        
        String id = this.discountId.getText().trim();
        String type = this.discountType.getText().trim();
        String rate = this.discountRate.getText().trim();
        
        if(id.isEmpty() || type.isEmpty() || rate.isEmpty()){
            new ErrorMsg().showErr("Please fill all the fields...");
        } else {
            discount.setId(id);
            discount.setType(type);
            discount.setRate(rate);

            discount.updateDiscount(editDiscountId);
            viewDiscountDetails();
        }
    }//GEN-LAST:event_discountUpdateBtnActionPerformed

    private void discountDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountDeleteBtnActionPerformed
        conn = obj.connect();
        
        try {
            if(editDiscountId.isEmpty()){
                new ErrorMsg().showErr("Please select record...");
            } else {
                int a = JOptionPane.showConfirmDialog(null, "Are you sure ?");
                if(a==0){
                    try {
                        cs = conn.prepareCall("{call deleteDiscountDetails(?)}");
                        cs.setString("dId", editDiscountId);
                        
                        if(cs.executeUpdate()==1){
                            viewDiscountDetails();
                            new ErrorMsg().showErr("Record deleted successfully...");
                        }
                    } catch (SQLException e) {
                        new ErrorMsg().showErr(e.getMessage());
                    }
                    editDiscountId = null;
                }
            }
        } catch (HeadlessException e) {
            new ErrorMsg().showErr("Please select record...");
        }
        
        conn = null;
    }//GEN-LAST:event_discountDeleteBtnActionPerformed

    private void discountTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_discountTableMouseClicked
        DefaultTableModel model = (DefaultTableModel) userTable.getModel();
        int row = discountTable.getSelectedRow();

        editDiscountId = discountTable.getValueAt(row, 0).toString();

        discountId.setText(editDiscountId);
        discountType.setText(discountTable.getValueAt(row, 1).toString());
        discountRate.setText(discountTable.getValueAt(row, 2).toString());

        discountSaveBtn.setVisible(false);
        discountUpdateBtn.setVisible(true);
        discountDeleteBtn.setVisible(true);
        discountCancelBtn.setVisible(true);
    }//GEN-LAST:event_discountTableMouseClicked

    private void discountIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_discountIdActionPerformed

    private void discountIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountIdKeyTyped
        char enter = evt.getKeyChar();
        
        if ((!(Character.isDigit(enter)))){
            evt.consume();
        }
    }//GEN-LAST:event_discountIdKeyTyped

    private void discountRateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountRateKeyTyped
        char enter = evt.getKeyChar();
        
        if ((discountRate.getText().length() >= 3 ) || (!(Character.isDigit(enter)))){
            evt.consume();
        }
    }//GEN-LAST:event_discountRateKeyTyped

    private void discountRateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountRateKeyPressed
        
    }//GEN-LAST:event_discountRateKeyPressed

    private void roomIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomIdActionPerformed

    private void roomIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_roomIdKeyTyped
        char enter = evt.getKeyChar();
        
        if ((!(Character.isDigit(enter)))){
            evt.consume();
        }
    }//GEN-LAST:event_roomIdKeyTyped

    private void roomSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomSaveBtnActionPerformed
        Room room = new Room();
        
        String roomId = this.roomId.getText().trim();
        String roomType = this.roomType.getSelectedItem().toString();
        
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{call `getRoomTypeId`(?)}");
            cs.setString("rType", roomType);
            rs = cs.executeQuery();

            while(rs.next()){
                roomType = rs.getString("id");
            }

        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
            //JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
        conn = null;
        
        if(roomId.isEmpty()){
            new ErrorMsg().showErr("Please fill all the fields...");
        } else {
            room.setRoomId(roomId);
            room.setRoomType(roomType);

            room.createRoom();
            viewRoomDetails();
        }
    }//GEN-LAST:event_roomSaveBtnActionPerformed

    private void roomUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomUpdateBtnActionPerformed
        Room room = new Room();
        
        String roomId = this.roomId.getText().trim();
        String roomType = this.roomType.getSelectedItem().toString();
        
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{call `getRoomTypeId`(?)}");
            cs.setString("rType", roomType);
            rs = cs.executeQuery();

            while(rs.next()){
                roomType = rs.getString("id");
            }

        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
            //JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
        conn = null;
        
        if(roomId.isEmpty()){
            new ErrorMsg().showErr("Please fill all the fields...");
        } else {
            room.setRoomId(roomId);
            room.setRoomType(roomType);

            room.updateRoom(editRoomId);
            viewRoomDetails();
        }
    }//GEN-LAST:event_roomUpdateBtnActionPerformed

    private void roomDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomDeleteBtnActionPerformed
        conn = obj.connect();
        
        try {
            if(editRoomId.isEmpty()){
                new ErrorMsg().showErr("Please select record...");
            } else {
                int a = JOptionPane.showConfirmDialog(null, "Are you sure ?");
                if(a==0){
                    try {
                        cs = conn.prepareCall("{call deleteRoomDetails(?)}");
                        cs.setString("rId", editRoomId);
                        
                        if(cs.executeUpdate()==1){
                            viewRoomDetails();
                            new ErrorMsg().showErr("Record deleted successfully...");
                        }
                    } catch (SQLException e) {
                        new ErrorMsg().showErr(e.getMessage());
                    }
                    editRoomId = null;
                }
            }
        } catch (HeadlessException e) {
            new ErrorMsg().showErr("Please select record...");
        }
        
        conn = null;
    }//GEN-LAST:event_roomDeleteBtnActionPerformed

    private void roomTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomTableMouseClicked
        int row = roomTable.getSelectedRow();

        editRoomId = roomTable.getValueAt(row, 0).toString();

        roomId.setText(editRoomId);
        roomType.setSelectedItem(roomTable.getValueAt(row, 1).toString());

        roomSaveBtn.setVisible(false);
        roomUpdateBtn.setVisible(true);
        roomDeleteBtn.setVisible(true);
        roomCancelBtn.setVisible(true);
    }//GEN-LAST:event_roomTableMouseClicked

    private void guestTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guestTableMouseClicked
        DefaultTableModel model = (DefaultTableModel) guestTable.getModel();
        int row = guestTable.getSelectedRow();

        editGuestId = guestTable.getValueAt(row, 0).toString();
        
    }//GEN-LAST:event_guestTableMouseClicked

    private void userNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userNameKeyTyped
        if (userName.getText().length() >= 50){
            evt.consume();
        }
    }//GEN-LAST:event_userNameKeyTyped

    private void userEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userEmailKeyTyped
        if (userEmail.getText().length() >= 100){
            evt.consume();
        }
    }//GEN-LAST:event_userEmailKeyTyped

    private void userEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userEmailFocusLost
        if (userEmail.getText().length() != 0){
            if (!(Pattern.matches("^[a-zA-Z0-9]+[@]{1}+[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+$", userEmail.getText()))) {
                JOptionPane.showMessageDialog(null, "Please enter a valid email", "Error", JOptionPane.ERROR_MESSAGE);
                userEmail.requestFocus();
            }
        }
    }//GEN-LAST:event_userEmailFocusLost

    private void roomtypePanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomtypePanelMouseExited
        roomtypePanel.setBackground(new java.awt.Color(102, 0, 0));
        checkedOutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/checked.png")));
    }//GEN-LAST:event_roomtypePanelMouseExited

    private void roomtypePanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomtypePanelMouseEntered
        roomtypePanel.setBackground(new java.awt.Color(70, 0, 0));
        checkedOutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/checked_filled.png")));
    }//GEN-LAST:event_roomtypePanelMouseEntered

    private void roomtypePanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomtypePanelMouseClicked
        panelDefault();
        roomtype.setVisible(true);

        viewRoomTypeDetails();
    }//GEN-LAST:event_roomtypePanelMouseClicked

    private void userCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userCancelBtnActionPerformed
        panelDefault();
        user.setVisible(true);
        
        viewUserDetails();
    }//GEN-LAST:event_userCancelBtnActionPerformed

    private void roomTypeIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomTypeIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomTypeIdActionPerformed

    private void roomTypeIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_roomTypeIdKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_roomTypeIdKeyTyped

    private void roomTypeRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomTypeRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomTypeRateActionPerformed

    private void roomTypeRateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_roomTypeRateKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_roomTypeRateKeyTyped

    private void roomTypeTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomTypeTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomTypeTypeActionPerformed

    private void roomTypeTypeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_roomTypeTypeKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_roomTypeTypeKeyTyped

    private void roomTypeSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomTypeSaveBtnActionPerformed
        Roomtype roomtype1 = new Roomtype();
        
        String id = this.roomTypeId.getText().trim();
        String roomType = this.roomTypeType.getText().trim();
        String description = this.roomTypeDescription.getText().trim();
        String rate = this.roomTypeRate.getText().trim();
        String image = this.roomTypeImage.getText().trim();
        
        if(id.isEmpty() || roomType.isEmpty() || description.isEmpty() || rate.isEmpty() || image.isEmpty()){
            new ErrorMsg().showErr("Please fill all the fields...");
        } else {
            roomtype1.setId(id);
            roomtype1.setRoomType(roomType);
            roomtype1.setDescription(description);
            roomtype1.setRate(rate);
            roomtype1.setImage(image);

            roomtype1.createRoomType();
            viewRoomTypeDetails();
        }
    }//GEN-LAST:event_roomTypeSaveBtnActionPerformed

    private void roomTypeUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomTypeUpdateBtnActionPerformed
        Roomtype roomtype1 = new Roomtype();
        
        String roomType = this.roomTypeType.getText().trim();
        String description = this.roomTypeDescription.getText().trim();
        String rate = this.roomTypeRate.getText().trim();
        String image = this.roomTypeImage.getText().trim();
        
        if(roomType.isEmpty() || description.isEmpty() || rate.isEmpty()){
            new ErrorMsg().showErr("Please fill all the fields...");
        } else {
            roomtype1.setRoomType(roomType);
            roomtype1.setDescription(description);
            roomtype1.setRate(rate);
            roomtype1.setImage(image);

            roomtype1.updateRoomType(editRoomTypeId);
            viewRoomTypeDetails();
        }
    }//GEN-LAST:event_roomTypeUpdateBtnActionPerformed

    private void roomTypeDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomTypeDeleteBtnActionPerformed
        conn = obj.connect();
        
        try {
            if(editRoomTypeId.isEmpty()){
                new ErrorMsg().showErr("Please select record...");
            } else {
                int a = JOptionPane.showConfirmDialog(null, "Are you sure ?");
                if(a==0){
                    try {
                        cs = conn.prepareCall("{call deleteRoomTypeDetails(?)}");
                        cs.setString("rId", editRoomTypeId);
                        
                        if(cs.executeUpdate()==1){
                            viewRoomTypeDetails();
                            new ErrorMsg().showErr("Record deleted successfully...");
                        }
                    } catch (SQLException e) {
                        new ErrorMsg().showErr(e.getMessage());
                    }
                    editRoomTypeId = null;
                }
            }
        } catch (HeadlessException e) {
            new ErrorMsg().showErr("Please select record...");
        }
        
        conn = null;
    }//GEN-LAST:event_roomTypeDeleteBtnActionPerformed

    private void roomTypeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomTypeTableMouseClicked
        
        roomTypeImage.setEnabled(false);
        
        DefaultTableModel model = (DefaultTableModel) roomTypeTable.getModel();
        int row = roomTypeTable.getSelectedRow();

        editRoomTypeId = roomTypeTable.getValueAt(row, 0).toString();

        roomTypeId.setText(editRoomTypeId);
        roomTypeType.setText(roomTypeTable.getValueAt(row, 1).toString());
        roomTypeDescription.setText(roomTypeTable.getValueAt(row, 2).toString());
        roomTypeRate.setText(roomTypeTable.getValueAt(row, 3).toString());

        roomTypeSaveBtn.setVisible(false);
        roomTypeUpdateBtn.setVisible(true);
        roomTypeDeleteBtn.setVisible(true);
        roomTypeCancelBtn.setVisible(true);
    }//GEN-LAST:event_roomTypeTableMouseClicked

    private void roomTypeImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomTypeImageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomTypeImageActionPerformed

    private void roomTypeImageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_roomTypeImageKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_roomTypeImageKeyTyped

    private void roomTypeCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomTypeCancelBtnActionPerformed
        panelDefault();
        roomtype.setVisible(true);
        
        viewRoomTypeDetails();
    }//GEN-LAST:event_roomTypeCancelBtnActionPerformed

    private void roomCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomCancelBtnActionPerformed
        panelDefault();
        room.setVisible(true);
        
        viewRoomDetails();
    }//GEN-LAST:event_roomCancelBtnActionPerformed

    private void discountCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountCancelBtnActionPerformed
        panelDefault();
        discount.setVisible(true);
        
        viewDiscountDetails();
    }//GEN-LAST:event_discountCancelBtnActionPerformed

    private void transactionTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_transactionTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_transactionTableMouseClicked

    private void messageTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_messageTableMouseClicked
        messageEmail.setText(null);
        messageHeading.setText(null);
        messageMessage.setText(null);
        
        int row = messageTable.getSelectedRow();

        editMessageId = messageTable.getValueAt(row, 0).toString();

        messageEmail.setText(messageTable.getValueAt(row, 2).toString());
        
        messageReplyBtn.setVisible(true);
        messageCancelBtn.setVisible(true);
    }//GEN-LAST:event_messageTableMouseClicked

    private void messageHeadingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageHeadingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_messageHeadingActionPerformed

    private void messageHeadingKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_messageHeadingKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_messageHeadingKeyTyped

    private void messageEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_messageEmailActionPerformed

    private void messageEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_messageEmailKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_messageEmailKeyTyped

    private void messageReplyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageReplyBtnActionPerformed
        Message message = new Message();
        
        String email = this.messageEmail.getText().trim();
        String heading = this.messageHeading.getText().trim();
        String messageContent = this.messageMessage.getText().trim();
        
        if(email.isEmpty() || heading.isEmpty() || messageContent.isEmpty()){
            new ErrorMsg().showErr("Please fill all the fields...");
        } else {
            message.setId(Integer.valueOf(editMessageId));
            message.setEmail(email);
            message.setHeading(heading);
            message.setMessage(messageContent);

            message.sendReplyEmail();
            viewMessageDetails();
        }
    }//GEN-LAST:event_messageReplyBtnActionPerformed

    private void messageCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageCancelBtnActionPerformed
        panelDefault();
        message.setVisible(true);
        
        viewMessageDetails();
    }//GEN-LAST:event_messageCancelBtnActionPerformed

    private void guestGetReportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guestGetReportBtnActionPerformed
        Guest_Information_Report guest_Information_Report = new Guest_Information_Report();
        
        guest_Information_Report.setVisible(true);
    }//GEN-LAST:event_guestGetReportBtnActionPerformed

    private void roomGetReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomGetReportActionPerformed
        Room_Information_Report room_Information_Report = new Room_Information_Report();
        
        room_Information_Report.setVisible(true);
    }//GEN-LAST:event_roomGetReportActionPerformed

    private void transactionGetReportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transactionGetReportBtnActionPerformed
        Transaction_Report transaction_Report = new Transaction_Report();
        
        transaction_Report.setVisible(true);
    }//GEN-LAST:event_transactionGetReportBtnActionPerformed

    private void panelDefault(){
        message.setVisible(false);
        roomtype.setVisible(false);
        guest.setVisible(false);
        room.setVisible(false);
        discount.setVisible(false);
        transaction.setVisible(false);
        user.setVisible(false);
    }
    
    public void viewUserDetails(){
        
        conn = obj.connect();
        
        //cashier no need next user id
        if(Login.role.equalsIgnoreCase("cashier")){
            userId.setText(null);
        } else {
            String lastId = "CSR000";

            try {
                String sql = "CALL `lastId`()";
                ps = conn.prepareCall(sql);
                rs = ps.executeQuery();

                while(rs.next()){
                    lastId = rs.getString("id");
                }

            } catch (SQLException e) {
                new ErrorMsg().showErr(e.getMessage());
                //JOptionPane.showMessageDialog(null, e.getMessage());
            }

            int nextId = Integer.valueOf(lastId.substring(3, 6))+1;

            userId.setText("CSR"+String.format("%03d", nextId));
        }
            
        userName.setText(null);
        userEmail.setText(null);
        userPhone.setText(null);
        userPassword.setText(null);
        
        //cashier cannot create user profile
        if(Login.role.equalsIgnoreCase("cashier")){
            userSaveBtn.setVisible(false);
        } else {
            userSaveBtn.setVisible(true);
        }
        
        userUpdateBtn.setVisible(false);
        userDeleteBtn.setVisible(false);
        userCancelBtn.setVisible(false);
        
        pwdLabel.setEnabled(false);
        userPassword.setEnabled(false);
        userChangePwdBtn.setEnabled(false);
        
        if(Login.role.equalsIgnoreCase("admin")){
            try {
                cs = conn.prepareCall("{CALL `viewUserDetails`()}");
                rs = cs.executeQuery();

                userTable.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
                new ErrorMsg().showErr(e.getMessage());
                //JOptionPane.showMessageDialog(null, e.getMessage());
            }
        } else {
            try {
                cs = conn.prepareCall("{CALL `viewSelfDetails`(?)}");
                cs.setString("username", Login.id);
                rs = cs.executeQuery();

                userTable.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
                new ErrorMsg().showErr(e.getMessage());
                //JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
        
        conn = null;
        
    }
    
    public void viewDiscountDetails(){
        
        conn = obj.connect();
        
        String lastId = "0";

        try {
            String sql = "CALL `lastDiscountId`()";
            ps = conn.prepareCall(sql);
            rs = ps.executeQuery();

            while(rs.next()){
                lastId = rs.getString("id");
            }

        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
            //JOptionPane.showMessageDialog(null, e.getMessage());
        }

        int nextId = Integer.valueOf(lastId)+1;

        discountId.setText(String.format("%d", nextId));
        discountType.setText(null);
        discountRate.setText(null);
        
        discountSaveBtn.setVisible(true);
        discountUpdateBtn.setVisible(false);
        discountDeleteBtn.setVisible(false);
        discountCancelBtn.setVisible(false);
        
        try {
                cs = conn.prepareCall("{CALL `viewDiscountDetails`()}");
                rs = cs.executeQuery();

                discountTable.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
                new ErrorMsg().showErr(e.getMessage());
                //JOptionPane.showMessageDialog(null, e.getMessage());
            }
        
        conn = null;
        
    }
    
    public void viewRoomTypeDetails(){
        
        roomTypeImage.setEnabled(true);
        
        conn = obj.connect();
        
        String lastId = "T00";

        try {
            String sql = "CALL `lastRoomTypeId`()";
            ps = conn.prepareCall(sql);
            rs = ps.executeQuery();

            while(rs.next()){
                lastId = rs.getString("id");
            }

        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
            //JOptionPane.showMessageDialog(null, e.getMessage());
        }

        int nextId = Integer.valueOf(lastId.substring(1, 3))+1;

        roomTypeId.setText("T"+String.format("%02d", nextId));
        
        roomTypeType.setText(null);
        roomTypeDescription.setText(null);
        roomTypeRate.setText(null);
        roomTypeImage.setText(null);
        
        roomTypeSaveBtn.setVisible(true);
        roomTypeUpdateBtn.setVisible(false);
        roomTypeDeleteBtn.setVisible(false);
        roomTypeCancelBtn.setVisible(false);
        
        try {
                cs = conn.prepareCall("{CALL `viewRoomTypeDetails`()}");
                rs = cs.executeQuery();

                roomTypeTable.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
                new ErrorMsg().showErr(e.getMessage());
                //JOptionPane.showMessageDialog(null, e.getMessage());
            }
        
        conn = null;
        
    }
    
    public void viewRoomDetails(){
        
        comboBoxRoomType();
        
        conn = obj.connect();
        
        String lastId = "0";

        try {
            String sql = "CALL `lastRoomId`()";
            ps = conn.prepareCall(sql);
            rs = ps.executeQuery();

            while(rs.next()){
                lastId = rs.getString("id");
            }

        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
            //JOptionPane.showMessageDialog(null, e.getMessage());
        }

        int nextId = Integer.valueOf(lastId)+1;

        roomId.setText(String.format("%d", nextId));
        roomType.setSelectedIndex(0);
        
        roomSaveBtn.setVisible(true);
        roomUpdateBtn.setVisible(false);
        roomDeleteBtn.setVisible(false);
        roomCancelBtn.setVisible(false);
        
        try {
                cs = conn.prepareCall("{CALL `viewRoomDetails`()}");
                rs = cs.executeQuery();

                roomTable.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
                new ErrorMsg().showErr(e.getMessage());
                //JOptionPane.showMessageDialog(null, e.getMessage());
            }
        
        conn = null;
        
    }
    
    public void viewGuestDetails(){
        
        conn = obj.connect();
        
        try {
                cs = conn.prepareCall("{CALL `viewGuestDetails`()}");
                rs = cs.executeQuery();

                guestTable.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
                new ErrorMsg().showErr(e.getMessage());
                //JOptionPane.showMessageDialog(null, e.getMessage());
            }
        
        conn = null;
        
    }
    
    public void viewTransactionDetails(){
        
        conn = obj.connect();
        
        try {
                cs = conn.prepareCall("{CALL `viewTransactionDetails`()}");
                rs = cs.executeQuery();

                transactionTable.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
                new ErrorMsg().showErr(e.getMessage());
                //JOptionPane.showMessageDialog(null, e.getMessage());
            }
        
        conn = null;
        
    }
    
    public void viewMessageDetails(){
        
        messageEmail.setText(null);
        messageHeading.setText(null);
        messageMessage.setText(null);
        
        conn = obj.connect();
        
        messageReplyBtn.setVisible(false);
        messageCancelBtn.setVisible(false);
        
        try {
                cs = conn.prepareCall("{CALL `viewMessageDetails`()}");
                rs = cs.executeQuery();

                messageTable.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
                new ErrorMsg().showErr(e.getMessage());
                //JOptionPane.showMessageDialog(null, e.getMessage());
            }
        
        conn = null;
        
    }
    
    public void comboBoxRoomType(){
        
        try {
            roomType.removeAllItems();
        } catch (Exception e) {
        }
        
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{CALL `roomTypeDetails`()}");
            rs = cs.executeQuery();
            
            while(rs.next()){
                roomType.addItem(rs.getString("type"));
            }
            
        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
        }
        
        conn = null;
    }
    
    /*public void comboBoxCheckOutRoomID(){
        
        try {
            checkoutRoomId.removeAllItems();
            checkoutRoomId.addItem("");
        } catch (Exception e) {
        }
        
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{CALL `checkoutRoomId`()}");
            rs = cs.executeQuery();
            
            while(rs.next()){
                checkoutRoomId.addItem(rs.getString("id"));
            }
            
        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
        }
        
        conn = null;
    }*/
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLayeredPane LayeredPane;
    private javax.swing.JLabel checkedInIcon;
    private javax.swing.JLabel checkedInLabel;
    private javax.swing.JLabel checkedOutIcon;
    private javax.swing.JLabel checkedOutLabel;
    private javax.swing.JLabel closeBtn;
    private javax.swing.JLabel copyrights;
    private javax.swing.JPanel dashboarddPane;
    private static javax.swing.JLabel date;
    private javax.swing.JPanel discount;
    private javax.swing.JButton discountCancelBtn;
    private javax.swing.JButton discountDeleteBtn;
    private javax.swing.JLabel discountIcon;
    private javax.swing.JTextField discountId;
    private javax.swing.JLabel discountLabel;
    private javax.swing.JPanel discountPanel;
    private javax.swing.JTextField discountRate;
    private javax.swing.JButton discountSaveBtn;
    private javax.swing.JTable discountTable;
    private javax.swing.JTextField discountType;
    private javax.swing.JButton discountUpdateBtn;
    private javax.swing.JPanel guest;
    private javax.swing.JButton guestGetReportBtn;
    private javax.swing.JLabel guestIcon;
    private javax.swing.JLabel guestLabel;
    private javax.swing.JPanel guestPanel;
    private javax.swing.JTable guestTable;
    private javax.swing.JPanel hrLine;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JLabel logoIcon;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JLabel logoutIcon;
    private javax.swing.JLabel logoutLabel;
    private javax.swing.JPanel logoutPanel;
    private javax.swing.JPanel message;
    private javax.swing.JButton messageCancelBtn;
    private javax.swing.JTextField messageEmail;
    private javax.swing.JTextField messageHeading;
    private javax.swing.JTextArea messageMessage;
    private javax.swing.JPanel messagePanel;
    private javax.swing.JButton messageReplyBtn;
    private javax.swing.JTable messageTable;
    private javax.swing.JLabel minimizeBtn;
    private javax.swing.JPanel pane;
    private javax.swing.JLabel pwdLabel;
    private javax.swing.JLabel reportIcon;
    private javax.swing.JLabel reportLabel;
    private javax.swing.JPanel room;
    private javax.swing.JButton roomCancelBtn;
    private javax.swing.JButton roomDeleteBtn;
    private javax.swing.JButton roomGetReport;
    private javax.swing.JLabel roomIcon;
    private javax.swing.JTextField roomId;
    private javax.swing.JLabel roomLabel;
    private javax.swing.JPanel roomPanel;
    private javax.swing.JButton roomSaveBtn;
    private javax.swing.JTable roomTable;
    private javax.swing.JComboBox<String> roomType;
    private javax.swing.JButton roomTypeCancelBtn;
    private javax.swing.JButton roomTypeDeleteBtn;
    private javax.swing.JTextArea roomTypeDescription;
    private javax.swing.JTextField roomTypeId;
    private javax.swing.JTextField roomTypeImage;
    private javax.swing.JTextField roomTypeRate;
    private javax.swing.JButton roomTypeSaveBtn;
    private javax.swing.JTable roomTypeTable;
    private javax.swing.JTextField roomTypeType;
    private javax.swing.JButton roomTypeUpdateBtn;
    private javax.swing.JButton roomUpdateBtn;
    private javax.swing.JPanel roomtype;
    private javax.swing.JPanel roomtypePanel;
    private javax.swing.JPanel transaction;
    private javax.swing.JButton transactionGetReportBtn;
    private javax.swing.JPanel transactionPanel;
    private javax.swing.JTable transactionTable;
    private javax.swing.JLabel transactionTopic;
    private javax.swing.JLabel transactionTopic1;
    private javax.swing.JPanel user;
    private javax.swing.JButton userCancelBtn;
    private javax.swing.JButton userChangePwdBtn;
    private javax.swing.JButton userDeleteBtn;
    private javax.swing.JTextField userEmail;
    private javax.swing.JLabel userIcon;
    private javax.swing.JTextField userId;
    private javax.swing.JLabel userLabel;
    private javax.swing.JTextField userName;
    private javax.swing.JPanel userPanel;
    private javax.swing.JTextField userPassword;
    private javax.swing.JTextField userPhone;
    private javax.swing.JButton userSaveBtn;
    private javax.swing.JTable userTable;
    private javax.swing.JLabel userTopic;
    private javax.swing.JLabel userTopic1;
    private javax.swing.JLabel userTopic2;
    private javax.swing.JLabel userTopic3;
    private javax.swing.JLabel userTopic6;
    private javax.swing.JButton userUpdateBtn;
    private javax.swing.JLabel welcomeName;
    // End of variables declaration//GEN-END:variables
}
