/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chefguru;

import dbconnection.DBConnection;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import reports_format.Checkout_Invoice;
import reports_format.Food_Bill;

/**
 *
 * @author sanda
 */
public class CashierDashboard extends javax.swing.JFrame {

    /**
     * Creates new form CashierDashboard
     */
    //public static final String DATE_FORMAT_NOW = "dd MMM yyyy HH:mm:ss";
    public static String dateTime;
    public static String today;
    
    public static SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    
    public static String now() {
        Calendar cal = Calendar.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat("dd MMM yyyy");
        return sdf.format(cal.getTime());
    }
    
    public static String dateForUse() {
        Calendar cal = Calendar.getInstance();
        return dateFormat.format(cal.getTime());
    }
    
    public static String dateForReport() {
        Calendar cal = Calendar.getInstance();
        return new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(cal.getTime());
    }
    
    public static String editUserId;
    public static String editBookingId;
    public static String editRoomId;
    public static String editGuestId;
    public static String editCheckoutId;
    
    Connection conn = null;
    PreparedStatement ps = null;
    CallableStatement cs = null;
    ResultSet rs = null;
    
    DBConnection obj = DBConnection.getDb();
    
    public CashierDashboard() {
        
        initComponents();
        
        today = CashierDashboard.dateForUse();
        
        dateTime = "Date: "+CashierDashboard.now();
        date.setText(dateTime);
        welcomeName.setText("Welcome, "+Login.fullname);
        
        viewCheckinDetails();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dashboarddPane = new javax.swing.JPanel();
        pane = new javax.swing.JPanel();
        closeBtn = new javax.swing.JLabel();
        minimizeBtn = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        welcomeName = new javax.swing.JLabel();
        LayeredPane = new javax.swing.JLayeredPane();
        checkIn = new javax.swing.JPanel();
        userTopic4 = new javax.swing.JLabel();
        checkinRoomRate = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        checkinSaveBtn = new javax.swing.JButton();
        checkinCancelBtn = new javax.swing.JButton();
        checkinRoomId = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        checkinRoomType = new javax.swing.JTextField();
        checkinCheckInDate = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        checkinNoOfDays = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        checkinDiscountRate = new javax.swing.JTextField();
        checkinDiscountType = new javax.swing.JComboBox<>();
        jLabel28 = new javax.swing.JLabel();
        checkinCheckOutDate = new com.toedter.calendar.JDateChooser();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        checkinAdvancePayment = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        checkinSubTotal = new javax.swing.JTextField();
        checkinTotalBalance = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        checkinPendingBalance = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        checkinGuestId = new javax.swing.JComboBox<>();
        jScrollPane8 = new javax.swing.JScrollPane();
        checkinTable = new javax.swing.JTable();
        checkout = new javax.swing.JPanel();
        userTopic6 = new javax.swing.JLabel();
        checkoutTabbedPane = new javax.swing.JTabbedPane();
        checkoutByGuest = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        checkoutByGuestCheckOutBtn = new javax.swing.JButton();
        jLabel46 = new javax.swing.JLabel();
        checkoutByGuestAdvancePayment = new javax.swing.JTextField();
        checkoutByGuestTotalBalance = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        checkoutByGuestPendingBalance = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        checkoutByGuestGuestId = new javax.swing.JTextField();
        checkoutByGuestCash = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        checkoutByGuestChange = new javax.swing.JTextField();
        jLabel54 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        checkoutByGuestTable = new javax.swing.JTable();
        checkoutByGuestRoomId = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        checkoutByRoom = new javax.swing.JPanel();
        checkoutByRoomId = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        checkoutByRoomCheckOutBtn = new javax.swing.JButton();
        checkoutByRoomDeleteBtn = new javax.swing.JButton();
        checkoutByRoomCheckInDate = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        checkoutByRoomAdvancePayment = new javax.swing.JTextField();
        checkoutByRoomTotalBalance = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        checkoutByRoomPendingBalance = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        checkoutByRoomGuestId = new javax.swing.JTextField();
        checkoutByRoomCheckOutDate = new javax.swing.JTextField();
        checkoutByRoomCash = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        checkoutByRoomChange = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        checkoutByRoomTable = new javax.swing.JTable();
        checkoutByRoomRoomId = new javax.swing.JTextField();
        guest = new javax.swing.JPanel();
        userTopic3 = new javax.swing.JLabel();
        guestId = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        guestAddress = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        guestEmail = new javax.swing.JTextField();
        guestFName = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        guestSaveBtn = new javax.swing.JButton();
        guestUpdateBtn = new javax.swing.JButton();
        guestDeleteBtn = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        guestTable = new javax.swing.JTable();
        guestPhone = new javax.swing.JTextField();
        pwdLabel1 = new javax.swing.JLabel();
        guestCancelBtn = new javax.swing.JButton();
        room = new javax.swing.JPanel();
        userTopic2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        roomTable = new javax.swing.JTable();
        booking = new javax.swing.JPanel();
        userTopic1 = new javax.swing.JLabel();
        bookingCheckInBtn = new javax.swing.JButton();
        bookingCancelBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        bookingTable = new javax.swing.JTable();
        pwdLabel2 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        bookingMessage = new javax.swing.JTextArea();
        food = new javax.swing.JPanel();
        foodTopic = new javax.swing.JLabel();
        updateBill = new javax.swing.JPanel();
        reportTopic1 = new javax.swing.JLabel();
        foodRoomId = new javax.swing.JComboBox<>();
        jLabel25 = new javax.swing.JLabel();
        foodUpdateBillAmount = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        foodUpdateBillCancelBtn = new javax.swing.JButton();
        foodUpdateBillSaveBtn = new javax.swing.JButton();
        newBill = new javax.swing.JPanel();
        reportTopic2 = new javax.swing.JLabel();
        foodNewBillCancelBtn = new javax.swing.JButton();
        foodNewBillSaveBtn = new javax.swing.JButton();
        foodNewBillAmount = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        foodNewBillCash = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        foodNewBillChange = new javax.swing.JTextField();
        user = new javax.swing.JPanel();
        userTopic = new javax.swing.JLabel();
        userId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        userEmail = new javax.swing.JTextField();
        userPhone = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        userName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        userSaveBtn = new javax.swing.JButton();
        userUpdateBtn = new javax.swing.JButton();
        userDeleteBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        userChangePwdBtn = new javax.swing.JButton();
        userPassword = new javax.swing.JTextField();
        pwdLabel = new javax.swing.JLabel();
        userCancelBtn = new javax.swing.JButton();
        hrLine = new javax.swing.JPanel();
        logoIcon = new javax.swing.JLabel();
        logoLabel = new javax.swing.JLabel();
        copyrights = new javax.swing.JLabel();
        checkInPanel = new javax.swing.JPanel();
        checkedInIcon = new javax.swing.JLabel();
        checkedInLabel = new javax.swing.JLabel();
        checkOutPanel = new javax.swing.JPanel();
        checkedOutIcon = new javax.swing.JLabel();
        checkedOutLabel = new javax.swing.JLabel();
        guestPanel = new javax.swing.JPanel();
        guestIcon = new javax.swing.JLabel();
        guestLabel = new javax.swing.JLabel();
        roomPanel = new javax.swing.JPanel();
        roomLabel = new javax.swing.JLabel();
        roomIcon = new javax.swing.JLabel();
        bookingPanel = new javax.swing.JPanel();
        discountLabel = new javax.swing.JLabel();
        discountIcon = new javax.swing.JLabel();
        foodPanel = new javax.swing.JPanel();
        reportLabel = new javax.swing.JLabel();
        reportIcon = new javax.swing.JLabel();
        userPanel = new javax.swing.JPanel();
        userLabel = new javax.swing.JLabel();
        userIcon = new javax.swing.JLabel();
        logoutPanel = new javax.swing.JPanel();
        logoutLabel = new javax.swing.JLabel();
        logoutIcon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        dashboarddPane.setBackground(new java.awt.Color(102, 0, 0));

        pane.setBackground(new java.awt.Color(255,255,255,200));

        closeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/close_b.png"))); // NOI18N
        closeBtn.setToolTipText("Close");
        closeBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        closeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeBtnMouseClicked(evt);
            }
        });

        minimizeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/minimize_b.png"))); // NOI18N
        minimizeBtn.setToolTipText("Minimize");
        minimizeBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimizeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeBtnMouseClicked(evt);
            }
        });

        date.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        date.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        welcomeName.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        welcomeName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        LayeredPane.setBackground(new java.awt.Color(255, 255, 255));
        LayeredPane.setLayout(new java.awt.CardLayout());

        checkIn.setBackground(new java.awt.Color(255, 255, 255));

        userTopic4.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        userTopic4.setForeground(new java.awt.Color(51, 51, 51));
        userTopic4.setText("Check In Information");

        checkinRoomRate.setEditable(false);
        checkinRoomRate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkinRoomRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinRoomRateActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText("Guest ID :");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setText("Room ID :");

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel22.setText("Room Rate :");

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel23.setText("Check in Date :");

        checkinSaveBtn.setBackground(new java.awt.Color(0, 202, 78));
        checkinSaveBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkinSaveBtn.setForeground(new java.awt.Color(255, 255, 255));
        checkinSaveBtn.setText("Save");
        checkinSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinSaveBtnActionPerformed(evt);
            }
        });

        checkinCancelBtn.setBackground(new java.awt.Color(85, 85, 85));
        checkinCancelBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkinCancelBtn.setForeground(new java.awt.Color(255, 255, 255));
        checkinCancelBtn.setText("Cancel");
        checkinCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinCancelBtnActionPerformed(evt);
            }
        });

        checkinRoomId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinRoomIdActionPerformed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel24.setText("Room Type :");

        checkinRoomType.setEditable(false);
        checkinRoomType.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkinRoomType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinRoomTypeActionPerformed(evt);
            }
        });

        checkinCheckInDate.setEditable(false);
        checkinCheckInDate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkinCheckInDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinCheckInDateActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel26.setText("No of Days :");

        checkinNoOfDays.setEditable(false);
        checkinNoOfDays.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkinNoOfDays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinNoOfDaysActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel27.setText("Discount Type :");

        checkinDiscountRate.setEditable(false);
        checkinDiscountRate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkinDiscountRate.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        checkinDiscountRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinDiscountRateActionPerformed(evt);
            }
        });
        checkinDiscountRate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkinDiscountRateKeyTyped(evt);
            }
        });

        checkinDiscountType.setEnabled(false);
        checkinDiscountType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinDiscountTypeActionPerformed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel28.setText("Check out Date :");

        checkinCheckOutDate.setDateFormatString("yyyy-MM-dd");
        checkinCheckOutDate.setEnabled(false);
        checkinCheckOutDate.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                checkinCheckOutDatePropertyChange(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel29.setText("Discount Rate :");

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel30.setText("Advance Payment :");

        checkinAdvancePayment.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkinAdvancePayment.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        checkinAdvancePayment.setEnabled(false);
        checkinAdvancePayment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                checkinAdvancePaymentKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkinAdvancePaymentKeyTyped(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel31.setText("Sub Total :");

        checkinSubTotal.setEditable(false);
        checkinSubTotal.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkinSubTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        checkinSubTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinSubTotalActionPerformed(evt);
            }
        });

        checkinTotalBalance.setEditable(false);
        checkinTotalBalance.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkinTotalBalance.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        checkinTotalBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinTotalBalanceActionPerformed(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel32.setText("Total Balance :");

        checkinPendingBalance.setEditable(false);
        checkinPendingBalance.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkinPendingBalance.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        checkinPendingBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinPendingBalanceActionPerformed(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel33.setText("Pending Balance :");

        checkinGuestId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinGuestIdActionPerformed(evt);
            }
        });

        checkinTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkinTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Guest ID", "Room ID", "CheckIn Date", "CheckOut Date", "Discount Id", "Advance Payment"
            }
        ));
        checkinTable.setRowHeight(20);
        checkinTable.setSelectionBackground(new java.awt.Color(102, 0, 0));
        checkinTable.setSelectionForeground(new java.awt.Color(255, 234, 231));
        checkinTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkinTableMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(checkinTable);

        javax.swing.GroupLayout checkInLayout = new javax.swing.GroupLayout(checkIn);
        checkIn.setLayout(checkInLayout);
        checkInLayout.setHorizontalGroup(
            checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkInLayout.createSequentialGroup()
                .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(checkInLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(userTopic4, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(checkInLayout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel21)
                            .addComponent(jLabel20)
                            .addComponent(jLabel23)
                            .addComponent(jLabel27)
                            .addComponent(jLabel32)
                            .addComponent(jLabel31)
                            .addComponent(jLabel26))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkinNoOfDays, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(checkInLayout.createSequentialGroup()
                                    .addComponent(checkinSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(checkinCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(checkInLayout.createSequentialGroup()
                                    .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(checkinDiscountType, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(checkinRoomRate, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(checkinRoomId, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(checkinCheckInDate, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(checkinGuestId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(checkinSubTotal)
                                        .addComponent(checkinTotalBalance))
                                    .addGap(34, 34, 34)
                                    .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel24)
                                        .addComponent(jLabel28)
                                        .addComponent(jLabel29)
                                        .addComponent(jLabel33)
                                        .addComponent(jLabel30))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(checkinAdvancePayment, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(checkinRoomType)
                                            .addComponent(checkinDiscountRate)
                                            .addComponent(checkinCheckOutDate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(checkinPendingBalance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                .addGap(74, 152, Short.MAX_VALUE))
            .addGroup(checkInLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8)
                .addContainerGap())
        );
        checkInLayout.setVerticalGroup(
            checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkInLayout.createSequentialGroup()
                .addComponent(userTopic4)
                .addGap(28, 28, 28)
                .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkinGuestId, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkinRoomId, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel24)
                    .addComponent(checkinRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkinRoomRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(11, 11, 11)
                .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel23)
                        .addComponent(checkinCheckInDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel28))
                    .addComponent(checkinCheckOutDate, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(checkinNoOfDays, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(checkinDiscountType, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkinDiscountRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkinSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31)
                    .addComponent(checkinAdvancePayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel32)
                    .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(checkinTotalBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(checkinPendingBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel33)))
                .addGap(18, 18, 18)
                .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkinSaveBtn)
                    .addComponent(checkinCancelBtn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                .addContainerGap())
        );

        LayeredPane.add(checkIn, "card2");

        checkout.setBackground(new java.awt.Color(255, 255, 255));

        userTopic6.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        userTopic6.setForeground(new java.awt.Color(51, 51, 51));
        userTopic6.setText("Check Out Information");

        checkoutTabbedPane.setBackground(new java.awt.Color(255, 255, 255));
        checkoutTabbedPane.setForeground(new java.awt.Color(102, 0, 0));
        checkoutTabbedPane.setFont(new java.awt.Font("Cambria Math", 1, 12)); // NOI18N
        checkoutTabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                checkoutTabbedPaneStateChanged(evt);
            }
        });

        checkoutByGuest.setBackground(new java.awt.Color(255, 255, 255));

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel39.setText("Guest ID :");

        checkoutByGuestCheckOutBtn.setBackground(new java.awt.Color(0, 202, 78));
        checkoutByGuestCheckOutBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkoutByGuestCheckOutBtn.setForeground(new java.awt.Color(255, 255, 255));
        checkoutByGuestCheckOutBtn.setText("CheckOut");
        checkoutByGuestCheckOutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutByGuestCheckOutBtnActionPerformed(evt);
            }
        });

        jLabel46.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel46.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel46.setText("Advance Payment :");

        checkoutByGuestAdvancePayment.setEditable(false);
        checkoutByGuestAdvancePayment.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkoutByGuestAdvancePayment.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        checkoutByGuestAdvancePayment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                checkoutByGuestAdvancePaymentKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkoutByGuestAdvancePaymentKeyTyped(evt);
            }
        });

        checkoutByGuestTotalBalance.setEditable(false);
        checkoutByGuestTotalBalance.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkoutByGuestTotalBalance.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        checkoutByGuestTotalBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutByGuestTotalBalanceActionPerformed(evt);
            }
        });

        jLabel51.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel51.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel51.setText("Total Balance :");

        checkoutByGuestPendingBalance.setEditable(false);
        checkoutByGuestPendingBalance.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkoutByGuestPendingBalance.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        checkoutByGuestPendingBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutByGuestPendingBalanceActionPerformed(evt);
            }
        });

        jLabel52.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel52.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel52.setText("Pending Balance :");

        checkoutByGuestGuestId.setEditable(false);
        checkoutByGuestGuestId.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkoutByGuestGuestId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutByGuestGuestIdActionPerformed(evt);
            }
        });
        checkoutByGuestGuestId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkoutByGuestGuestIdKeyTyped(evt);
            }
        });

        checkoutByGuestCash.setEditable(false);
        checkoutByGuestCash.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkoutByGuestCash.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        checkoutByGuestCash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutByGuestCashActionPerformed(evt);
            }
        });
        checkoutByGuestCash.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                checkoutByGuestCashKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkoutByGuestCashKeyTyped(evt);
            }
        });

        jLabel53.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel53.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel53.setText("Cash :");

        checkoutByGuestChange.setEditable(false);
        checkoutByGuestChange.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkoutByGuestChange.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        checkoutByGuestChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutByGuestChangeActionPerformed(evt);
            }
        });

        jLabel54.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel54.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel54.setText("Change :");

        checkoutByGuestTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkoutByGuestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Guest ID", "Room IDs", "Total of Advance Payments"
            }
        ));
        checkoutByGuestTable.setRowHeight(20);
        checkoutByGuestTable.setSelectionBackground(new java.awt.Color(102, 0, 0));
        checkoutByGuestTable.setSelectionForeground(new java.awt.Color(255, 234, 231));
        checkoutByGuestTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkoutByGuestTableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(checkoutByGuestTable);

        checkoutByGuestRoomId.setEditable(false);
        checkoutByGuestRoomId.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkoutByGuestRoomId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutByGuestRoomIdActionPerformed(evt);
            }
        });
        checkoutByGuestRoomId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkoutByGuestRoomIdKeyTyped(evt);
            }
        });

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel40.setText("Room IDs :");

        javax.swing.GroupLayout checkoutByGuestLayout = new javax.swing.GroupLayout(checkoutByGuest);
        checkoutByGuest.setLayout(checkoutByGuestLayout);
        checkoutByGuestLayout.setHorizontalGroup(
            checkoutByGuestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkoutByGuestLayout.createSequentialGroup()
                .addGroup(checkoutByGuestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(checkoutByGuestLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane7))
                    .addGroup(checkoutByGuestLayout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addGroup(checkoutByGuestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(checkoutByGuestLayout.createSequentialGroup()
                                .addComponent(jLabel40)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(checkoutByGuestRoomId, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(checkoutByGuestLayout.createSequentialGroup()
                                .addGroup(checkoutByGuestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(checkoutByGuestLayout.createSequentialGroup()
                                        .addComponent(jLabel39)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(checkoutByGuestGuestId, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(checkoutByGuestLayout.createSequentialGroup()
                                        .addComponent(jLabel51)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(checkoutByGuestTotalBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(checkoutByGuestLayout.createSequentialGroup()
                                        .addComponent(jLabel52)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(checkoutByGuestPendingBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(checkoutByGuestLayout.createSequentialGroup()
                                        .addComponent(jLabel53)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(checkoutByGuestCash, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(checkoutByGuestLayout.createSequentialGroup()
                                        .addComponent(jLabel54)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(checkoutByGuestChange, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(checkoutByGuestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(checkoutByGuestLayout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addComponent(jLabel46)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(checkoutByGuestAdvancePayment, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(checkoutByGuestLayout.createSequentialGroup()
                                        .addGap(68, 68, 68)
                                        .addComponent(checkoutByGuestCheckOutBtn)))))
                        .addGap(0, 145, Short.MAX_VALUE)))
                .addContainerGap())
        );
        checkoutByGuestLayout.setVerticalGroup(
            checkoutByGuestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkoutByGuestLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(checkoutByGuestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkoutByGuestGuestId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39)
                    .addComponent(checkoutByGuestRoomId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(checkoutByGuestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkoutByGuestTotalBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel51)
                    .addComponent(jLabel46)
                    .addComponent(checkoutByGuestAdvancePayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(checkoutByGuestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel52)
                    .addComponent(checkoutByGuestPendingBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(checkoutByGuestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkoutByGuestCash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel53))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(checkoutByGuestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkoutByGuestChange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel54)
                    .addComponent(checkoutByGuestCheckOutBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        checkoutTabbedPane.addTab("By Guest Id", checkoutByGuest);

        checkoutByRoom.setBackground(new java.awt.Color(255, 255, 255));

        checkoutByRoomId.setEditable(false);
        checkoutByRoomId.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkoutByRoomId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutByRoomIdActionPerformed(evt);
            }
        });
        checkoutByRoomId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkoutByRoomIdKeyTyped(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel34.setText("Room ID :");

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel35.setText("Guest ID :");

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel36.setText("No :");

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel38.setText("Check in Date :");

        checkoutByRoomCheckOutBtn.setBackground(new java.awt.Color(0, 202, 78));
        checkoutByRoomCheckOutBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkoutByRoomCheckOutBtn.setForeground(new java.awt.Color(255, 255, 255));
        checkoutByRoomCheckOutBtn.setText("CheckOut");
        checkoutByRoomCheckOutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutByRoomCheckOutBtnActionPerformed(evt);
            }
        });

        checkoutByRoomDeleteBtn.setBackground(new java.awt.Color(255, 96, 92));
        checkoutByRoomDeleteBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkoutByRoomDeleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        checkoutByRoomDeleteBtn.setText("Delete");
        checkoutByRoomDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutByRoomDeleteBtnActionPerformed(evt);
            }
        });

        checkoutByRoomCheckInDate.setEditable(false);
        checkoutByRoomCheckInDate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkoutByRoomCheckInDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutByRoomCheckInDateActionPerformed(evt);
            }
        });

        jLabel43.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel43.setText("Check out Date :");

        jLabel45.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel45.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel45.setText("Advance Payment :");

        checkoutByRoomAdvancePayment.setEditable(false);
        checkoutByRoomAdvancePayment.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkoutByRoomAdvancePayment.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        checkoutByRoomAdvancePayment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                checkoutByRoomAdvancePaymentKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkoutByRoomAdvancePaymentKeyTyped(evt);
            }
        });

        checkoutByRoomTotalBalance.setEditable(false);
        checkoutByRoomTotalBalance.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkoutByRoomTotalBalance.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        checkoutByRoomTotalBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutByRoomTotalBalanceActionPerformed(evt);
            }
        });

        jLabel47.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel47.setText("Total Balance :");

        checkoutByRoomPendingBalance.setEditable(false);
        checkoutByRoomPendingBalance.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkoutByRoomPendingBalance.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        checkoutByRoomPendingBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutByRoomPendingBalanceActionPerformed(evt);
            }
        });

        jLabel48.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel48.setText("Pending Balance :");

        checkoutByRoomGuestId.setEditable(false);
        checkoutByRoomGuestId.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkoutByRoomGuestId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutByRoomGuestIdActionPerformed(evt);
            }
        });
        checkoutByRoomGuestId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkoutByRoomGuestIdKeyTyped(evt);
            }
        });

        checkoutByRoomCheckOutDate.setEditable(false);
        checkoutByRoomCheckOutDate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkoutByRoomCheckOutDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutByRoomCheckOutDateActionPerformed(evt);
            }
        });
        checkoutByRoomCheckOutDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkoutByRoomCheckOutDateKeyTyped(evt);
            }
        });

        checkoutByRoomCash.setEditable(false);
        checkoutByRoomCash.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkoutByRoomCash.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        checkoutByRoomCash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutByRoomCashActionPerformed(evt);
            }
        });
        checkoutByRoomCash.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                checkoutByRoomCashKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkoutByRoomCashKeyTyped(evt);
            }
        });

        jLabel49.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel49.setText("Cash :");

        checkoutByRoomChange.setEditable(false);
        checkoutByRoomChange.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkoutByRoomChange.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        checkoutByRoomChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutByRoomChangeActionPerformed(evt);
            }
        });

        jLabel50.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel50.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel50.setText("Change :");

        checkoutByRoomTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkoutByRoomTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "No", "Room ID", "Guest ID", "CheckIn Date", "CheckOut Date", "Advance Payment"
            }
        ));
        checkoutByRoomTable.setRowHeight(20);
        checkoutByRoomTable.setSelectionBackground(new java.awt.Color(102, 0, 0));
        checkoutByRoomTable.setSelectionForeground(new java.awt.Color(255, 234, 231));
        checkoutByRoomTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkoutByRoomTableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(checkoutByRoomTable);

        checkoutByRoomRoomId.setEditable(false);
        checkoutByRoomRoomId.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkoutByRoomRoomId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutByRoomRoomIdActionPerformed(evt);
            }
        });
        checkoutByRoomRoomId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkoutByRoomRoomIdKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout checkoutByRoomLayout = new javax.swing.GroupLayout(checkoutByRoom);
        checkoutByRoom.setLayout(checkoutByRoomLayout);
        checkoutByRoomLayout.setHorizontalGroup(
            checkoutByRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkoutByRoomLayout.createSequentialGroup()
                .addGroup(checkoutByRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(checkoutByRoomLayout.createSequentialGroup()
                        .addGroup(checkoutByRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(checkoutByRoomLayout.createSequentialGroup()
                                .addGap(111, 111, 111)
                                .addGroup(checkoutByRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel34)
                                    .addComponent(jLabel38)
                                    .addComponent(jLabel36))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(checkoutByRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(checkoutByRoomLayout.createSequentialGroup()
                                        .addComponent(checkoutByRoomCheckInDate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(47, 47, 47)
                                        .addGroup(checkoutByRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel43)
                                            .addComponent(jLabel35))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(checkoutByRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(checkoutByRoomCheckOutDate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(checkoutByRoomGuestId, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(checkoutByRoomRoomId, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkoutByRoomId, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, checkoutByRoomLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(checkoutByRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel47)
                                    .addComponent(jLabel48)
                                    .addComponent(jLabel49)
                                    .addComponent(jLabel50))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(checkoutByRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(checkoutByRoomTotalBalance)
                                    .addComponent(checkoutByRoomPendingBalance)
                                    .addComponent(checkoutByRoomCash, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkoutByRoomChange, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34)
                                .addGroup(checkoutByRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(checkoutByRoomLayout.createSequentialGroup()
                                        .addComponent(jLabel45)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(checkoutByRoomAdvancePayment, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(checkoutByRoomLayout.createSequentialGroup()
                                        .addComponent(checkoutByRoomCheckOutBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(checkoutByRoomDeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 140, Short.MAX_VALUE))
                    .addGroup(checkoutByRoomLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane5)))
                .addContainerGap())
        );
        checkoutByRoomLayout.setVerticalGroup(
            checkoutByRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkoutByRoomLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(checkoutByRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel36)
                    .addComponent(checkoutByRoomId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(checkoutByRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkoutByRoomGuestId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35)
                    .addComponent(jLabel34)
                    .addComponent(checkoutByRoomRoomId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(checkoutByRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkoutByRoomCheckInDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38)
                    .addComponent(jLabel43)
                    .addComponent(checkoutByRoomCheckOutDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(checkoutByRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkoutByRoomTotalBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel47)
                    .addComponent(checkoutByRoomAdvancePayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel45))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(checkoutByRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkoutByRoomPendingBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel48))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(checkoutByRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkoutByRoomCash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel49))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(checkoutByRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkoutByRoomChange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel50)
                    .addComponent(checkoutByRoomCheckOutBtn)
                    .addComponent(checkoutByRoomDeleteBtn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                .addContainerGap())
        );

        checkoutTabbedPane.addTab("By Room Id", checkoutByRoom);

        javax.swing.GroupLayout checkoutLayout = new javax.swing.GroupLayout(checkout);
        checkout.setLayout(checkoutLayout);
        checkoutLayout.setHorizontalGroup(
            checkoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkoutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(userTopic6, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(checkoutTabbedPane)
        );
        checkoutLayout.setVerticalGroup(
            checkoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkoutLayout.createSequentialGroup()
                .addComponent(userTopic6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkoutTabbedPane))
        );

        LayeredPane.add(checkout, "card2");

        guest.setBackground(new java.awt.Color(255, 255, 255));

        userTopic3.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        userTopic3.setForeground(new java.awt.Color(51, 51, 51));
        userTopic3.setText("Guest Information");

        guestId.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        guestId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guestIdActionPerformed(evt);
            }
        });
        guestId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                guestIdKeyTyped(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Id :");

        guestAddress.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        guestAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guestAddressActionPerformed(evt);
            }
        });
        guestAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                guestAddressKeyTyped(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Name :");

        guestEmail.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        guestEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                guestEmailFocusLost(evt);
            }
        });
        guestEmail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                guestEmailMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                guestEmailMouseReleased(evt);
            }
        });
        guestEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guestEmailActionPerformed(evt);
            }
        });
        guestEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                guestEmailKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                guestEmailKeyTyped(evt);
            }
        });

        guestFName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        guestFName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guestFNameActionPerformed(evt);
            }
        });
        guestFName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                guestFNameKeyTyped(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Address :");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("Email :");

        guestSaveBtn.setBackground(new java.awt.Color(0, 202, 78));
        guestSaveBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        guestSaveBtn.setForeground(new java.awt.Color(255, 255, 255));
        guestSaveBtn.setText("Save");
        guestSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guestSaveBtnActionPerformed(evt);
            }
        });

        guestUpdateBtn.setBackground(new java.awt.Color(255, 189, 68));
        guestUpdateBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        guestUpdateBtn.setForeground(new java.awt.Color(255, 255, 255));
        guestUpdateBtn.setText("Update");
        guestUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guestUpdateBtnActionPerformed(evt);
            }
        });

        guestDeleteBtn.setBackground(new java.awt.Color(255, 96, 92));
        guestDeleteBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        guestDeleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        guestDeleteBtn.setText("Delete");
        guestDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guestDeleteBtnActionPerformed(evt);
            }
        });

        guestTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        guestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Name", "Address", "Email", "Phone No"
            }
        ));
        guestTable.setRowHeight(20);
        guestTable.setSelectionBackground(new java.awt.Color(102, 0, 0));
        guestTable.setSelectionForeground(new java.awt.Color(255, 234, 231));
        guestTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guestTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(guestTable);

        guestPhone.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        guestPhone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                guestPhoneFocusLost(evt);
            }
        });
        guestPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guestPhoneActionPerformed(evt);
            }
        });
        guestPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                guestPhoneKeyTyped(evt);
            }
        });

        pwdLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pwdLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pwdLabel1.setText("Phone No :");

        guestCancelBtn.setBackground(new java.awt.Color(85, 85, 85));
        guestCancelBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        guestCancelBtn.setForeground(new java.awt.Color(255, 255, 255));
        guestCancelBtn.setText("Cancel");
        guestCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guestCancelBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout guestLayout = new javax.swing.GroupLayout(guest);
        guest.setLayout(guestLayout);
        guestLayout.setHorizontalGroup(
            guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guestLayout.createSequentialGroup()
                .addGroup(guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(guestLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(userTopic3, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(guestLayout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addGroup(guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15))
                        .addGap(21, 21, 21)
                        .addGroup(guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(guestId, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(guestFName, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(guestLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 791, Short.MAX_VALUE)
                            .addGroup(guestLayout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addGroup(guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel18)
                                    .addComponent(pwdLabel1))
                                .addGap(21, 21, 21)
                                .addGroup(guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(guestEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(guestAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(guestLayout.createSequentialGroup()
                                        .addComponent(guestPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(guestSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(guestUpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(11, 11, 11)
                                        .addComponent(guestDeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(guestCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        guestLayout.setVerticalGroup(
            guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guestLayout.createSequentialGroup()
                .addComponent(userTopic3)
                .addGap(30, 30, 30)
                .addGroup(guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guestId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guestFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guestAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guestEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(guestPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(guestDeleteBtn)
                        .addComponent(guestSaveBtn)
                        .addComponent(guestUpdateBtn)
                        .addComponent(guestCancelBtn))
                    .addComponent(pwdLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(44, 44, 44)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                .addContainerGap())
        );

        LayeredPane.add(guest, "card2");

        room.setBackground(new java.awt.Color(255, 255, 255));

        userTopic2.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        userTopic2.setForeground(new java.awt.Color(51, 51, 51));
        userTopic2.setText("Room Information");

        roomTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roomTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Id", "Room Type", "Status"
            }
        ));
        roomTable.setRowHeight(20);
        roomTable.setSelectionBackground(new java.awt.Color(102, 0, 0));
        roomTable.setSelectionForeground(new java.awt.Color(255, 234, 231));
        jScrollPane3.setViewportView(roomTable);

        javax.swing.GroupLayout roomLayout = new javax.swing.GroupLayout(room);
        room.setLayout(roomLayout);
        roomLayout.setHorizontalGroup(
            roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roomLayout.createSequentialGroup()
                        .addComponent(userTopic2, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 405, Short.MAX_VALUE))
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        roomLayout.setVerticalGroup(
            roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomLayout.createSequentialGroup()
                .addComponent(userTopic2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
                .addContainerGap())
        );

        LayeredPane.add(room, "card2");

        booking.setBackground(new java.awt.Color(255, 255, 255));

        userTopic1.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        userTopic1.setForeground(new java.awt.Color(51, 51, 51));
        userTopic1.setText("Booking Information");

        bookingCheckInBtn.setBackground(new java.awt.Color(0, 202, 78));
        bookingCheckInBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bookingCheckInBtn.setForeground(new java.awt.Color(255, 255, 255));
        bookingCheckInBtn.setText("Check In");
        bookingCheckInBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingCheckInBtnActionPerformed(evt);
            }
        });

        bookingCancelBtn.setBackground(new java.awt.Color(255, 189, 68));
        bookingCancelBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bookingCancelBtn.setForeground(new java.awt.Color(255, 255, 255));
        bookingCancelBtn.setText("Cancel");
        bookingCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingCancelBtnActionPerformed(evt);
            }
        });

        bookingTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bookingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Name", "Email", "Phone", "Check In Date", "No of Room", "Message"
            }
        ));
        bookingTable.setRowHeight(20);
        bookingTable.setSelectionBackground(new java.awt.Color(102, 0, 0));
        bookingTable.setSelectionForeground(new java.awt.Color(255, 234, 231));
        bookingTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookingTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(bookingTable);

        pwdLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pwdLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pwdLabel2.setText("Message :");

        bookingMessage.setColumns(20);
        bookingMessage.setLineWrap(true);
        bookingMessage.setRows(5);
        jScrollPane6.setViewportView(bookingMessage);

        javax.swing.GroupLayout bookingLayout = new javax.swing.GroupLayout(booking);
        booking.setLayout(bookingLayout);
        bookingLayout.setHorizontalGroup(
            bookingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookingLayout.createSequentialGroup()
                .addGroup(bookingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bookingLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 791, Short.MAX_VALUE))
                    .addGroup(bookingLayout.createSequentialGroup()
                        .addGroup(bookingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bookingLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(userTopic1, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(bookingLayout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(bookingCheckInBtn)
                                .addGap(18, 18, 18)
                                .addComponent(bookingCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(bookingLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pwdLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(111, 111, 111))
        );
        bookingLayout.setVerticalGroup(
            bookingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookingLayout.createSequentialGroup()
                .addComponent(userTopic1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bookingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookingCheckInBtn)
                    .addComponent(bookingCancelBtn))
                .addGap(18, 18, 18)
                .addGroup(bookingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pwdLabel2)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
                .addContainerGap())
        );

        LayeredPane.add(booking, "card2");

        food.setBackground(new java.awt.Color(255, 255, 255));

        foodTopic.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        foodTopic.setForeground(new java.awt.Color(51, 51, 51));
        foodTopic.setText("Food Billing");

        updateBill.setBackground(new java.awt.Color(255, 255, 255));
        updateBill.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 0, 0)));

        reportTopic1.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        reportTopic1.setForeground(new java.awt.Color(51, 51, 51));
        reportTopic1.setText("Update Bill");

        foodRoomId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foodRoomIdActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel25.setText("Room ID :");

        foodUpdateBillAmount.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        foodUpdateBillAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        foodUpdateBillAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foodUpdateBillAmountActionPerformed(evt);
            }
        });
        foodUpdateBillAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                foodUpdateBillAmountKeyTyped(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel37.setText("Amount :");

        foodUpdateBillCancelBtn.setBackground(new java.awt.Color(85, 85, 85));
        foodUpdateBillCancelBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        foodUpdateBillCancelBtn.setForeground(new java.awt.Color(255, 255, 255));
        foodUpdateBillCancelBtn.setText("Cancel");
        foodUpdateBillCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foodUpdateBillCancelBtnActionPerformed(evt);
            }
        });

        foodUpdateBillSaveBtn.setBackground(new java.awt.Color(0, 202, 78));
        foodUpdateBillSaveBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        foodUpdateBillSaveBtn.setForeground(new java.awt.Color(255, 255, 255));
        foodUpdateBillSaveBtn.setText("Save");
        foodUpdateBillSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foodUpdateBillSaveBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout updateBillLayout = new javax.swing.GroupLayout(updateBill);
        updateBill.setLayout(updateBillLayout);
        updateBillLayout.setHorizontalGroup(
            updateBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateBillLayout.createSequentialGroup()
                .addComponent(reportTopic1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(updateBillLayout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addGroup(updateBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(updateBillLayout.createSequentialGroup()
                        .addComponent(foodUpdateBillSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(foodUpdateBillCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(updateBillLayout.createSequentialGroup()
                        .addGroup(updateBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel37)
                            .addComponent(jLabel25))
                        .addGap(18, 18, 18)
                        .addGroup(updateBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(foodRoomId, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(foodUpdateBillAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        updateBillLayout.setVerticalGroup(
            updateBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateBillLayout.createSequentialGroup()
                .addComponent(reportTopic1)
                .addGap(51, 51, 51)
                .addGroup(updateBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateBillLayout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addGap(19, 19, 19)
                        .addComponent(jLabel37))
                    .addGroup(updateBillLayout.createSequentialGroup()
                        .addComponent(foodRoomId, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(foodUpdateBillAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(updateBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(foodUpdateBillCancelBtn)
                    .addComponent(foodUpdateBillSaveBtn))
                .addContainerGap(83, Short.MAX_VALUE))
        );

        newBill.setBackground(new java.awt.Color(255, 255, 255));
        newBill.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 0, 0)));

        reportTopic2.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        reportTopic2.setForeground(new java.awt.Color(51, 51, 51));
        reportTopic2.setText("New Bill");

        foodNewBillCancelBtn.setBackground(new java.awt.Color(85, 85, 85));
        foodNewBillCancelBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        foodNewBillCancelBtn.setForeground(new java.awt.Color(255, 255, 255));
        foodNewBillCancelBtn.setText("Cancel");
        foodNewBillCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foodNewBillCancelBtnActionPerformed(evt);
            }
        });

        foodNewBillSaveBtn.setBackground(new java.awt.Color(0, 202, 78));
        foodNewBillSaveBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        foodNewBillSaveBtn.setForeground(new java.awt.Color(255, 255, 255));
        foodNewBillSaveBtn.setText("Save");
        foodNewBillSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foodNewBillSaveBtnActionPerformed(evt);
            }
        });

        foodNewBillAmount.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        foodNewBillAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        foodNewBillAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foodNewBillAmountActionPerformed(evt);
            }
        });
        foodNewBillAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                foodNewBillAmountKeyTyped(evt);
            }
        });

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel41.setText("Amount :");

        jLabel42.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel42.setText("Cash :");

        foodNewBillCash.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        foodNewBillCash.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        foodNewBillCash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foodNewBillCashActionPerformed(evt);
            }
        });
        foodNewBillCash.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                foodNewBillCashKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                foodNewBillCashKeyTyped(evt);
            }
        });

        jLabel44.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel44.setText("Change :");

        foodNewBillChange.setEditable(false);
        foodNewBillChange.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        foodNewBillChange.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        foodNewBillChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foodNewBillChangeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newBillLayout = new javax.swing.GroupLayout(newBill);
        newBill.setLayout(newBillLayout);
        newBillLayout.setHorizontalGroup(
            newBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newBillLayout.createSequentialGroup()
                .addComponent(reportTopic2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(newBillLayout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addGroup(newBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(newBillLayout.createSequentialGroup()
                        .addComponent(jLabel44)
                        .addGap(18, 18, 18)
                        .addComponent(foodNewBillChange, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(newBillLayout.createSequentialGroup()
                        .addComponent(jLabel42)
                        .addGap(18, 18, 18)
                        .addComponent(foodNewBillCash, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(newBillLayout.createSequentialGroup()
                        .addComponent(foodNewBillSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(foodNewBillCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(newBillLayout.createSequentialGroup()
                        .addComponent(jLabel41)
                        .addGap(18, 18, 18)
                        .addComponent(foodNewBillAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        newBillLayout.setVerticalGroup(
            newBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newBillLayout.createSequentialGroup()
                .addComponent(reportTopic2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addGroup(newBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newBillLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel41))
                    .addComponent(foodNewBillAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(newBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newBillLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel42))
                    .addComponent(foodNewBillCash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(newBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newBillLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel44))
                    .addComponent(foodNewBillChange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(newBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(foodNewBillCancelBtn)
                    .addComponent(foodNewBillSaveBtn))
                .addGap(73, 73, 73))
        );

        javax.swing.GroupLayout foodLayout = new javax.swing.GroupLayout(food);
        food.setLayout(foodLayout);
        foodLayout.setHorizontalGroup(
            foodLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(foodLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(foodLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(foodLayout.createSequentialGroup()
                        .addComponent(foodTopic, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 405, Short.MAX_VALUE))
                    .addComponent(updateBill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(newBill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        foodLayout.setVerticalGroup(
            foodLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(foodLayout.createSequentialGroup()
                .addComponent(foodTopic)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(updateBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(newBill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        LayeredPane.add(food, "card2");

        user.setBackground(new java.awt.Color(255, 255, 255));

        userTopic.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        userTopic.setForeground(new java.awt.Color(51, 51, 51));
        userTopic.setText("Account Setting");

        userId.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userIdActionPerformed(evt);
            }
        });
        userId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                userIdKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Id :");

        userEmail.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                userEmailFocusLost(evt);
            }
        });
        userEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userEmailActionPerformed(evt);
            }
        });
        userEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                userEmailKeyTyped(evt);
            }
        });

        userPhone.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userPhoneActionPerformed(evt);
            }
        });
        userPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userPhoneKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                userPhoneKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Name :");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Email :");

        userName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameActionPerformed(evt);
            }
        });
        userName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                userNameKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Phone No :");

        userSaveBtn.setBackground(new java.awt.Color(0, 202, 78));
        userSaveBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userSaveBtn.setForeground(new java.awt.Color(255, 255, 255));
        userSaveBtn.setText("Save");
        userSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userSaveBtnActionPerformed(evt);
            }
        });

        userUpdateBtn.setBackground(new java.awt.Color(255, 189, 68));
        userUpdateBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userUpdateBtn.setForeground(new java.awt.Color(255, 255, 255));
        userUpdateBtn.setText("Update");
        userUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userUpdateBtnActionPerformed(evt);
            }
        });

        userDeleteBtn.setBackground(new java.awt.Color(255, 96, 92));
        userDeleteBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userDeleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        userDeleteBtn.setText("Delete");
        userDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userDeleteBtnActionPerformed(evt);
            }
        });

        userTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Name", "Email", "Phone No"
            }
        ));
        userTable.setRowHeight(20);
        userTable.setSelectionBackground(new java.awt.Color(102, 0, 0));
        userTable.setSelectionForeground(new java.awt.Color(255, 234, 231));
        userTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(userTable);

        userChangePwdBtn.setBackground(new java.awt.Color(255, 189, 68));
        userChangePwdBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userChangePwdBtn.setForeground(new java.awt.Color(255, 255, 255));
        userChangePwdBtn.setText("Change Password");
        userChangePwdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userChangePwdBtnActionPerformed(evt);
            }
        });

        userPassword.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userPasswordActionPerformed(evt);
            }
        });

        pwdLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pwdLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pwdLabel.setText("Password :");

        userCancelBtn.setBackground(new java.awt.Color(85, 85, 85));
        userCancelBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userCancelBtn.setForeground(new java.awt.Color(255, 255, 255));
        userCancelBtn.setText("Cancel");
        userCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userCancelBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout userLayout = new javax.swing.GroupLayout(user);
        user.setLayout(userLayout);
        userLayout.setHorizontalGroup(
            userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userLayout.createSequentialGroup()
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userLayout.createSequentialGroup()
                        .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(userLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(userTopic, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(userLayout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(pwdLabel)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(userPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(userId, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(userEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(userLayout.createSequentialGroup()
                                        .addComponent(userPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)
                                        .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(userChangePwdBtn)
                                            .addGroup(userLayout.createSequentialGroup()
                                                .addComponent(userSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(userUpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(userDeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(userCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                        .addGap(0, 94, Short.MAX_VALUE))
                    .addGroup(userLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        userLayout.setVerticalGroup(
            userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userLayout.createSequentialGroup()
                .addComponent(userTopic)
                .addGap(30, 30, 30)
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(userSaveBtn)
                    .addComponent(userUpdateBtn)
                    .addComponent(userDeleteBtn)
                    .addComponent(userCancelBtn))
                .addGap(31, 31, 31)
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pwdLabel)
                    .addComponent(userChangePwdBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        LayeredPane.add(user, "card2");

        javax.swing.GroupLayout paneLayout = new javax.swing.GroupLayout(pane);
        pane.setLayout(paneLayout);
        paneLayout.setHorizontalGroup(
            paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(welcomeName, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(minimizeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(LayeredPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        paneLayout.setVerticalGroup(
            paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneLayout.createSequentialGroup()
                .addGroup(paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(closeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(minimizeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(welcomeName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LayeredPane))
        );

        hrLine.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout hrLineLayout = new javax.swing.GroupLayout(hrLine);
        hrLine.setLayout(hrLineLayout);
        hrLineLayout.setHorizontalGroup(
            hrLineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        hrLineLayout.setVerticalGroup(
            hrLineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        logoIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logo_small.png"))); // NOI18N

        logoLabel.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 48)); // NOI18N
        logoLabel.setForeground(new java.awt.Color(255, 255, 255));
        logoLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        logoLabel.setText("HMS");

        copyrights.setForeground(new java.awt.Color(204, 204, 204));
        copyrights.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        copyrights.setText("©Team_Semicolon;");

        checkInPanel.setBackground(new java.awt.Color(102, 0, 0));
        checkInPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkInPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                checkInPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                checkInPanelMouseExited(evt);
            }
        });

        checkedInIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/checked.png"))); // NOI18N
        checkedInIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        checkedInLabel.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        checkedInLabel.setForeground(new java.awt.Color(255, 255, 255));
        checkedInLabel.setText("Check In");
        checkedInLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout checkInPanelLayout = new javax.swing.GroupLayout(checkInPanel);
        checkInPanel.setLayout(checkInPanelLayout);
        checkInPanelLayout.setHorizontalGroup(
            checkInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkInPanelLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(checkedInIcon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkedInLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        checkInPanelLayout.setVerticalGroup(
            checkInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(checkedInIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(checkInPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(checkedInLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        checkOutPanel.setBackground(new java.awt.Color(102, 0, 0));
        checkOutPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkOutPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                checkOutPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                checkOutPanelMouseExited(evt);
            }
        });

        checkedOutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/checked.png"))); // NOI18N
        checkedOutIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        checkedOutLabel.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        checkedOutLabel.setForeground(new java.awt.Color(255, 255, 255));
        checkedOutLabel.setText("Check Out");
        checkedOutLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout checkOutPanelLayout = new javax.swing.GroupLayout(checkOutPanel);
        checkOutPanel.setLayout(checkOutPanelLayout);
        checkOutPanelLayout.setHorizontalGroup(
            checkOutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkOutPanelLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(checkedOutIcon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkedOutLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                .addContainerGap())
        );
        checkOutPanelLayout.setVerticalGroup(
            checkOutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(checkedOutIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(checkOutPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(checkedOutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        guestPanel.setBackground(new java.awt.Color(102, 0, 0));
        guestPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guestPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                guestPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                guestPanelMouseExited(evt);
            }
        });

        guestIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/guest.png"))); // NOI18N
        guestIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        guestLabel.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        guestLabel.setForeground(new java.awt.Color(255, 255, 255));
        guestLabel.setText("Guest");
        guestLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout guestPanelLayout = new javax.swing.GroupLayout(guestPanel);
        guestPanel.setLayout(guestPanelLayout);
        guestPanelLayout.setHorizontalGroup(
            guestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guestPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(guestIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(guestLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addContainerGap())
        );
        guestPanelLayout.setVerticalGroup(
            guestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guestPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(guestLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(guestIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        roomPanel.setBackground(new java.awt.Color(102, 0, 0));
        roomPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roomPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                roomPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                roomPanelMouseExited(evt);
            }
        });

        roomLabel.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        roomLabel.setForeground(new java.awt.Color(255, 255, 255));
        roomLabel.setText("Room");
        roomLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        roomIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/room.png"))); // NOI18N
        roomIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout roomPanelLayout = new javax.swing.GroupLayout(roomPanel);
        roomPanel.setLayout(roomPanelLayout);
        roomPanelLayout.setHorizontalGroup(
            roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(roomIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(roomLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addContainerGap())
        );
        roomPanelLayout.setVerticalGroup(
            roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(roomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(roomIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        bookingPanel.setBackground(new java.awt.Color(102, 0, 0));
        bookingPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookingPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bookingPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bookingPanelMouseExited(evt);
            }
        });

        discountLabel.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        discountLabel.setForeground(new java.awt.Color(255, 255, 255));
        discountLabel.setText("Booking");
        discountLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        discountIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/discount.png"))); // NOI18N
        discountIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout bookingPanelLayout = new javax.swing.GroupLayout(bookingPanel);
        bookingPanel.setLayout(bookingPanelLayout);
        bookingPanelLayout.setHorizontalGroup(
            bookingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookingPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(discountIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(discountLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addContainerGap())
        );
        bookingPanelLayout.setVerticalGroup(
            bookingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookingPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(discountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(discountIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        foodPanel.setBackground(new java.awt.Color(102, 0, 0));
        foodPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                foodPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                foodPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                foodPanelMouseExited(evt);
            }
        });

        reportLabel.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        reportLabel.setForeground(new java.awt.Color(255, 255, 255));
        reportLabel.setText("Food");
        reportLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        reportIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/report.png"))); // NOI18N
        reportIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout foodPanelLayout = new javax.swing.GroupLayout(foodPanel);
        foodPanel.setLayout(foodPanelLayout);
        foodPanelLayout.setHorizontalGroup(
            foodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(foodPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(reportIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(reportLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addContainerGap())
        );
        foodPanelLayout.setVerticalGroup(
            foodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(foodPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(reportLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(reportIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        userPanel.setBackground(new java.awt.Color(102, 0, 0));
        userPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                userPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                userPanelMouseExited(evt);
            }
        });

        userLabel.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        userLabel.setForeground(new java.awt.Color(255, 255, 255));
        userLabel.setText("User");
        userLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        userIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/setting.png"))); // NOI18N
        userIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout userPanelLayout = new javax.swing.GroupLayout(userPanel);
        userPanel.setLayout(userPanelLayout);
        userPanelLayout.setHorizontalGroup(
            userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(userIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(userLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addContainerGap())
        );
        userPanelLayout.setVerticalGroup(
            userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(userLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(userIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        logoutPanel.setBackground(new java.awt.Color(102, 0, 0));
        logoutPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logoutPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logoutPanelMouseExited(evt);
            }
        });

        logoutLabel.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        logoutLabel.setForeground(new java.awt.Color(255, 255, 255));
        logoutLabel.setText("Logout");
        logoutLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        logoutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logout.png"))); // NOI18N
        logoutIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout logoutPanelLayout = new javax.swing.GroupLayout(logoutPanel);
        logoutPanel.setLayout(logoutPanelLayout);
        logoutPanelLayout.setHorizontalGroup(
            logoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoutPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(logoutIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(logoutLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addContainerGap())
        );
        logoutPanelLayout.setVerticalGroup(
            logoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoutPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(logoutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(logoutIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout dashboarddPaneLayout = new javax.swing.GroupLayout(dashboarddPane);
        dashboarddPane.setLayout(dashboarddPaneLayout);
        dashboarddPaneLayout.setHorizontalGroup(
            dashboarddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashboarddPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dashboarddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hrLine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(copyrights, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(checkInPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(dashboarddPaneLayout.createSequentialGroup()
                        .addGroup(dashboarddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(dashboarddPaneLayout.createSequentialGroup()
                                .addComponent(logoIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(logoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(checkOutPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(guestPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(roomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bookingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(foodPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(userPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(logoutPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );
        dashboarddPaneLayout.setVerticalGroup(
            dashboarddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashboarddPaneLayout.createSequentialGroup()
                .addGroup(dashboarddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(dashboarddPaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(dashboarddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(logoIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                            .addComponent(logoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hrLine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(checkInPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkOutPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guestPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(roomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bookingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(foodPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(userPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(logoutPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(copyrights))
                    .addGroup(dashboarddPaneLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dashboarddPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dashboarddPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void closeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeBtnMouseClicked
        new Logout().setVisible(true);
    }//GEN-LAST:event_closeBtnMouseClicked

    private void minimizeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeBtnMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minimizeBtnMouseClicked

    private void checkInPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkInPanelMouseEntered
        checkInPanel.setBackground(new java.awt.Color(70, 0, 0));
        checkedInIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/checked_filled.png")));
    }//GEN-LAST:event_checkInPanelMouseEntered

    private void checkInPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkInPanelMouseExited
        checkInPanel.setBackground(new java.awt.Color(102, 0, 0));
        checkedInIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/checked.png")));
    }//GEN-LAST:event_checkInPanelMouseExited

    private void foodPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foodPanelMouseEntered
        foodPanel.setBackground(new java.awt.Color(70, 0, 0));
        reportIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/report_filled.png")));
    }//GEN-LAST:event_foodPanelMouseEntered

    private void foodPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foodPanelMouseExited
        foodPanel.setBackground(new java.awt.Color(102, 0, 0));
        reportIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/report.png")));
    }//GEN-LAST:event_foodPanelMouseExited

    private void checkOutPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkOutPanelMouseEntered
        checkOutPanel.setBackground(new java.awt.Color(70, 0, 0));
        checkedOutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/checked_filled.png")));
    }//GEN-LAST:event_checkOutPanelMouseEntered

    private void checkOutPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkOutPanelMouseExited
        checkOutPanel.setBackground(new java.awt.Color(102, 0, 0));
        checkedOutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/checked.png")));
    }//GEN-LAST:event_checkOutPanelMouseExited

    private void guestPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guestPanelMouseEntered
        guestPanel.setBackground(new java.awt.Color(70, 0, 0));
        guestIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/guest_filled.png")));
    }//GEN-LAST:event_guestPanelMouseEntered

    private void guestPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guestPanelMouseExited
        guestPanel.setBackground(new java.awt.Color(102, 0, 0));
        guestIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/guest.png")));
    }//GEN-LAST:event_guestPanelMouseExited

    private void roomPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomPanelMouseEntered
        roomPanel.setBackground(new java.awt.Color(70, 0, 0));
        roomIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/room_filled.png")));
    }//GEN-LAST:event_roomPanelMouseEntered

    private void roomPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomPanelMouseExited
        roomPanel.setBackground(new java.awt.Color(102, 0, 0));
        roomIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/room.png")));
    }//GEN-LAST:event_roomPanelMouseExited

    private void bookingPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookingPanelMouseEntered
        bookingPanel.setBackground(new java.awt.Color(70, 0, 0));
        discountIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/discount_filled.png")));
    }//GEN-LAST:event_bookingPanelMouseEntered

    private void bookingPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookingPanelMouseExited
        bookingPanel.setBackground(new java.awt.Color(102, 0, 0));
        discountIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/discount.png")));
    }//GEN-LAST:event_bookingPanelMouseExited

    private void logoutPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutPanelMouseEntered
        logoutPanel.setBackground(new java.awt.Color(70, 0, 0));
        logoutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logout_filled.png")));
    }//GEN-LAST:event_logoutPanelMouseEntered

    private void logoutPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutPanelMouseExited
        logoutPanel.setBackground(new java.awt.Color(102, 0, 0));
        logoutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logout.png")));
    }//GEN-LAST:event_logoutPanelMouseExited

    private void userPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userPanelMouseEntered
        userPanel.setBackground(new java.awt.Color(70, 0, 0));
        userIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/setting_filled.png")));
    }//GEN-LAST:event_userPanelMouseEntered

    private void userPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userPanelMouseExited
        userPanel.setBackground(new java.awt.Color(102, 0, 0));
        userIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/setting.png")));
    }//GEN-LAST:event_userPanelMouseExited

    private void checkInPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkInPanelMouseClicked
        panelDefault();
        checkIn.setVisible(true);
                
        viewCheckinDetails();        
    }//GEN-LAST:event_checkInPanelMouseClicked

    private void checkOutPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkOutPanelMouseClicked
        panelDefault();
        checkout.setVisible(true);
        
        viewCheckoutDetailsByGuest();
        viewCheckoutDetailsByRoom();
    }//GEN-LAST:event_checkOutPanelMouseClicked

    private void guestPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guestPanelMouseClicked
        panelDefault();
        guest.setVisible(true);
        
        viewGuestDetails();
    }//GEN-LAST:event_guestPanelMouseClicked

    private void roomPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomPanelMouseClicked
        panelDefault();
        room.setVisible(true);
        
        viewRoomDetails();
    }//GEN-LAST:event_roomPanelMouseClicked

    private void bookingPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookingPanelMouseClicked
        panelDefault();
        booking.setVisible(true);
        
        viewBookingDetails();
    }//GEN-LAST:event_bookingPanelMouseClicked

    private void foodPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foodPanelMouseClicked
        panelDefault();
        food.setVisible(true);
        
        viewFoodDetails();
    }//GEN-LAST:event_foodPanelMouseClicked

    private void userPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userPanelMouseClicked
        panelDefault();
        user.setVisible(true);
        
        viewUserDetails();
    }//GEN-LAST:event_userPanelMouseClicked

    private void logoutPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutPanelMouseClicked
        new Logout().setVisible(true);
    }//GEN-LAST:event_logoutPanelMouseClicked

    private void userIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userIdActionPerformed

    private void userEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userEmailActionPerformed

    private void userPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userPhoneActionPerformed

    private void userNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameActionPerformed

    private void userPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userPasswordActionPerformed

    private void userUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userUpdateBtnActionPerformed
        User user = new User();
        
        String id = this.userId.getText().trim();
        String name = this.userName.getText().trim();
        String email = this.userEmail.getText().trim();
        String phone = this.userPhone.getText().trim();
        //String password = this.password.getText().trim();
        
        if(id.isEmpty() || name.isEmpty() || email.isEmpty() || phone.isEmpty()){
            new ErrorMsg().showErr("Please fill all the fields...");
        } else {
            user.setId(id);
            user.setName(name);
            user.setEmail(email);
            user.setPhone(phone);
            //user.setPassword(password);

            user.updateUser(editUserId);
            viewUserDetails();
        }
    }//GEN-LAST:event_userUpdateBtnActionPerformed

    private void userDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userDeleteBtnActionPerformed
        
        conn = obj.connect();
        
        try {
            if(editUserId.isEmpty()){
                new ErrorMsg().showErr("Please select record...");
            } else {
                int a = JOptionPane.showConfirmDialog(null, "Are you sure ?");
                if(a==0){
                    try {
                        cs = conn.prepareCall("{call deleteUserDetails(?)}");
                        cs.setString("username", editUserId);
                        
                        if(cs.executeUpdate()==2){
                            viewUserDetails();
                            new ErrorMsg().showErr("Record deleted successfully...");
                        }
                    } catch (SQLException e) {
                        new ErrorMsg().showErr(e.getMessage());
                    }
                    editUserId = null;
                }
            }
        } catch (HeadlessException e) {
            new ErrorMsg().showErr("Please select record...");
        }
        
        conn = null;
    }//GEN-LAST:event_userDeleteBtnActionPerformed

    private void userTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userTableMouseClicked
        DefaultTableModel model = (DefaultTableModel) userTable.getModel();
        int row = userTable.getSelectedRow();

        editUserId = userTable.getValueAt(row, 0).toString();

        userId.setText(editUserId);
        userName.setText(userTable.getValueAt(row, 1).toString());
        userEmail.setText(userTable.getValueAt(row, 2).toString());
        userPhone.setText(userTable.getValueAt(row, 3).toString());

        //self deleting disabled
        if(!editUserId.equalsIgnoreCase(Login.id)){
            if(editUserId.substring(0, 3).equalsIgnoreCase("ADM")){
                userUpdateBtn.setVisible(false);
                userDeleteBtn.setVisible(false);
            } else {
                userUpdateBtn.setVisible(true);
                userDeleteBtn.setVisible(true);
            }
            userSaveBtn.setVisible(false);
            userCancelBtn.setVisible(true);
            
            pwdLabel.setEnabled(false);
            userPassword.setEnabled(false);
            userChangePwdBtn.setEnabled(false);
        } else {
            userSaveBtn.setVisible(false);
            userUpdateBtn.setVisible(true);
            userDeleteBtn.setVisible(false);
            userCancelBtn.setVisible(true);
            
            pwdLabel.setEnabled(true);
            userPassword.setEnabled(true);
            userChangePwdBtn.setEnabled(true);
        }
    }//GEN-LAST:event_userTableMouseClicked

    private void userSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userSaveBtnActionPerformed
        User user = new User();
        
        String id = this.userId.getText().trim();
        String name = this.userName.getText().trim();
        String email = this.userEmail.getText().trim();
        String phone = this.userPhone.getText().trim();
        String password = "123";
        
        if(id.isEmpty() || name.isEmpty() || email.isEmpty() || phone.isEmpty()){
            new ErrorMsg().showErr("Please fill all the fields...");
        } else {
            user.setId(id);
            user.setName(name);
            user.setEmail(email);
            user.setPhone(phone);
            user.setPassword(password);

            user.createUser();
            viewUserDetails();
        }
    }//GEN-LAST:event_userSaveBtnActionPerformed

    private void userPhoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userPhoneKeyTyped
        char enter = evt.getKeyChar();
        
        if ((userPhone.getText().length() >= 10 ) || (!(Character.isDigit(enter)))){
            evt.consume();
        }
    }//GEN-LAST:event_userPhoneKeyTyped

    private void userPhoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userPhoneKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_userPhoneKeyPressed

    private void userIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userIdKeyTyped
        if ( userId.getText().length() >= 6 ){
            evt.consume();
        }
    }//GEN-LAST:event_userIdKeyTyped

    private void userChangePwdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userChangePwdBtnActionPerformed
        User user = new User();
        
        String password = this.userPassword.getText().trim();
        
        if(password.isEmpty()){
            new ErrorMsg().showErr("Please enter password...");
        } else {
            user.setPassword(password);

            user.changePassword(editUserId);
            viewUserDetails();
        }
    }//GEN-LAST:event_userChangePwdBtnActionPerformed

    private void bookingCheckInBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingCheckInBtnActionPerformed
        Booking booking = new Booking();
        
        if(editBookingId.isEmpty()){
            new ErrorMsg().showErr("Please select record...");
        } else {
            booking.setId(editBookingId);
            
            booking.checkingBooking();
        }
        
        editBookingId = null;
    }//GEN-LAST:event_bookingCheckInBtnActionPerformed

    private void bookingCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingCancelBtnActionPerformed
        Booking booking = new Booking();
        
        if(editBookingId.isEmpty()){
            new ErrorMsg().showErr("Please select record...");
        } else {
            booking.setId(editBookingId);

            booking.cancelBooking();
            viewBookingDetails();
        }
        
        editBookingId = null;
    }//GEN-LAST:event_bookingCancelBtnActionPerformed

    private void bookingTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookingTableMouseClicked
        DefaultTableModel model = (DefaultTableModel) userTable.getModel();
        int row = bookingTable.getSelectedRow();

        editBookingId = bookingTable.getValueAt(row, 0).toString();

        bookingMessage.setText(bookingTable.getValueAt(row, 6).toString());

        bookingCheckInBtn.setVisible(true);
        bookingCancelBtn.setVisible(true);
    }//GEN-LAST:event_bookingTableMouseClicked

    private void guestIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guestIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_guestIdActionPerformed

    private void guestIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_guestIdKeyTyped
        if (guestId.getText().length() >= 12){
            evt.consume();
        }
    }//GEN-LAST:event_guestIdKeyTyped

    private void guestAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guestAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_guestAddressActionPerformed

    private void guestEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guestEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_guestEmailActionPerformed

    private void guestEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_guestEmailKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_guestEmailKeyPressed

    private void guestEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_guestEmailKeyTyped
        if (guestEmail.getText().length() >= 100){
            evt.consume();
        }
    }//GEN-LAST:event_guestEmailKeyTyped

    private void guestFNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guestFNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_guestFNameActionPerformed

    private void guestSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guestSaveBtnActionPerformed
        Guest guest = new Guest();
        
        conn = obj.connect();
        
        String lastId = "0";

        try {
            String sql = "CALL `lastGuestNo`()";
            ps = conn.prepareCall(sql);
            rs = ps.executeQuery();

            while(rs.next()){
                lastId = rs.getString("no");
            }

        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
            //JOptionPane.showMessageDialog(null, e.getMessage());
        }

        int nextId = Integer.valueOf(lastId)+1;
        
        String id = this.guestId.getText().trim();
        String name = this.guestFName.getText().trim();
        String address = this.guestAddress.getText().trim();
        String email = this.guestEmail.getText().trim();
        String phone = this.guestPhone.getText().trim();
        
        if(id.isEmpty() || name.isEmpty() || address.isEmpty() || email.isEmpty() || phone.isEmpty()){
            new ErrorMsg().showErr("Please fill all the fields...");
        } else {
            guest.setNo(nextId);
            guest.setId(id);
            guest.setName(name);
            guest.setAddress(address);
            guest.setEmail(email);
            guest.setPhone(phone);

            guest.createGuest();
            viewGuestDetails();
        }
    }//GEN-LAST:event_guestSaveBtnActionPerformed

    private void guestUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guestUpdateBtnActionPerformed
        Guest guest = new Guest();
        
        String name = this.guestFName.getText().trim();
        String address = this.guestAddress.getText().trim();
        String email = this.guestEmail.getText().trim();
        String phone = this.guestPhone.getText().trim();
        
        if(name.isEmpty() || address.isEmpty() || email.isEmpty() || phone.isEmpty()){
            new ErrorMsg().showErr("Please fill all the fields...");
        } else {
            guest.setId(editGuestId);
            guest.setName(name);
            guest.setAddress(address);
            guest.setEmail(email);
            guest.setPhone(phone);

            guest.updateGuest(editGuestId);
            viewGuestDetails();
        }
    }//GEN-LAST:event_guestUpdateBtnActionPerformed

    private void guestDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guestDeleteBtnActionPerformed
        conn = obj.connect();
        
        try {
            if(editGuestId.isEmpty()){
                new ErrorMsg().showErr("Please select record...");
            } else {
                int a = JOptionPane.showConfirmDialog(null, "Are you sure ?");
                if(a==0){
                    try {
                        cs = conn.prepareCall("{call deleteGuestDetails(?)}");
                        cs.setString("gId", editGuestId);
                        
                        if(cs.executeUpdate()==1){
                            viewGuestDetails();
                            new ErrorMsg().showErr("Record deleted successfully...");
                        }
                    } catch (SQLException e) {
                        new ErrorMsg().showErr(e.getMessage());
                    }
                    editGuestId = null;
                }
            }
        } catch (HeadlessException e) {
            new ErrorMsg().showErr("Please select record...");
        }
        
        conn = null;
    }//GEN-LAST:event_guestDeleteBtnActionPerformed

    private void guestTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guestTableMouseClicked
        DefaultTableModel model = (DefaultTableModel) guestTable.getModel();
        int row = guestTable.getSelectedRow();

        editGuestId = guestTable.getValueAt(row, 0).toString();

        guestId.setText(editGuestId);
        guestFName.setText(guestTable.getValueAt(row, 1).toString());
        guestAddress.setText(guestTable.getValueAt(row, 2).toString());
        guestEmail.setText(guestTable.getValueAt(row, 3).toString());
        guestPhone.setText(guestTable.getValueAt(row, 4).toString());

        guestSaveBtn.setVisible(false);
        guestUpdateBtn.setVisible(true);
        guestDeleteBtn.setVisible(true);
        guestCancelBtn.setVisible(true);
    }//GEN-LAST:event_guestTableMouseClicked

    private void guestPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guestPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_guestPhoneActionPerformed

    private void checkinRoomRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinRoomRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkinRoomRateActionPerformed

    private void checkinSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinSaveBtnActionPerformed
        CheckIn checkIn = new CheckIn();
        
        conn = obj.connect();
        
        String lastId = "0";

        try {
            String sql = "CALL `lastCheckInId`()";
            ps = conn.prepareCall(sql);
            rs = ps.executeQuery();

            while(rs.next()){
                lastId = rs.getString("id");
            }

        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
            //JOptionPane.showMessageDialog(null, e.getMessage());
        }

        int nextId = Integer.valueOf(lastId)+1;

        String guestId = checkinGuestId.getSelectedItem().toString().trim();
        String roomId = checkinRoomId.getSelectedItem().toString().trim();
        String checkInDate = checkinCheckInDate.getText().trim().trim();
        String checkOutDate = dateFormat.format(checkinCheckOutDate.getDate()).toString().trim();
        String discountId = checkinDiscountType.getSelectedItem().toString().trim();
        
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{call `getDiscountIdByType`(?)}");
            cs.setString("dType", discountId);
            rs = cs.executeQuery();

            while(rs.next()){
                discountId = rs.getString("id");
            }

        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
            //JOptionPane.showMessageDialog(null, e.getMessage());
        }
                
        if(discountId.isEmpty()){
            discountId = "0";
        }
        
        conn = null;
        
        String advancePayment = checkinAdvancePayment.getText().trim();
        
        if(guestId.isEmpty() || roomId.isEmpty() || checkInDate.isEmpty() || checkOutDate.isEmpty() || advancePayment.isEmpty()){
            new ErrorMsg().showErr("Please fill all the fields...");
        } else {
            checkIn.setId(String.format("%d", nextId));
            checkIn.setGuestId(guestId);
            checkIn.setRoomId(roomId);
            checkIn.setCheckInDate(checkInDate);
            checkIn.setCheckOutDate(checkOutDate);
            checkIn.setDiscountId(discountId);
            checkIn.setAdvancePayment(advancePayment);

            checkIn.createCheckIn();
            viewCheckinDetails();
        }
    }//GEN-LAST:event_checkinSaveBtnActionPerformed

    private void checkinCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinCancelBtnActionPerformed
        panelDefault();
        checkIn.setVisible(true);
        
        viewCheckinDetails();
    }//GEN-LAST:event_checkinCancelBtnActionPerformed

    private void userNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userNameKeyTyped
        if (userName.getText().length() >= 20){
            evt.consume();
        }
    }//GEN-LAST:event_userNameKeyTyped

    private void userEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userEmailKeyTyped
        if (userEmail.getText().length() >= 100){
            evt.consume();
        }
    }//GEN-LAST:event_userEmailKeyTyped

    private void guestFNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_guestFNameKeyTyped
        if (guestFName.getText().length() >= 20){
            evt.consume();
        }
    }//GEN-LAST:event_guestFNameKeyTyped

    private void guestAddressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_guestAddressKeyTyped
        if (guestAddress.getText().length() >= 200){
            evt.consume();
        }
    }//GEN-LAST:event_guestAddressKeyTyped

    private void guestPhoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_guestPhoneKeyTyped
        char enter = evt.getKeyChar();
        
        if ((guestPhone.getText().length() >= 10 ) || (!(Character.isDigit(enter)))){
            evt.consume();
        }
    }//GEN-LAST:event_guestPhoneKeyTyped

    private void guestEmailMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guestEmailMouseReleased
        
    }//GEN-LAST:event_guestEmailMouseReleased

    private void guestEmailMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guestEmailMouseExited
        
    }//GEN-LAST:event_guestEmailMouseExited

    private void guestEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_guestEmailFocusLost
        if (guestEmail.getText().length() != 0){
            if (!(Pattern.matches("^[a-zA-Z0-9]+[@]{1}+[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+$", guestEmail.getText()))) {
                JOptionPane.showMessageDialog(null, "Please enter a valid email", "Error", JOptionPane.ERROR_MESSAGE);
                guestEmail.requestFocus();
            }
        }
    }//GEN-LAST:event_guestEmailFocusLost

    private void userEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userEmailFocusLost
        if (userEmail.getText().length() != 0){
            if (!(Pattern.matches("^[a-zA-Z0-9]+[@]{1}+[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+$", userEmail.getText()))) {
                JOptionPane.showMessageDialog(null, "Please enter a valid email", "Error", JOptionPane.ERROR_MESSAGE);
                userEmail.requestFocus();
            }
        }
    }//GEN-LAST:event_userEmailFocusLost

    private void checkinRoomTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinRoomTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkinRoomTypeActionPerformed

    private void checkinNoOfDaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinNoOfDaysActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkinNoOfDaysActionPerformed

    private void checkinDiscountRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinDiscountRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkinDiscountRateActionPerformed

    private void checkinSubTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinSubTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkinSubTotalActionPerformed

    private void checkinTotalBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinTotalBalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkinTotalBalanceActionPerformed

    private void checkinPendingBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinPendingBalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkinPendingBalanceActionPerformed

    private void checkinRoomIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinRoomIdActionPerformed
        viewCheckinRoomDetails();
    }//GEN-LAST:event_checkinRoomIdActionPerformed

    private void checkinCheckOutDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_checkinCheckOutDatePropertyChange
        
        try {
            Date startDate = dateFormat.parse(dateFormat.format(dateFormat.parse(today)));
            Date endDate = dateFormat.parse(dateFormat.format(checkinCheckOutDate.getDate()));
            
            long diff = endDate.getTime() - startDate.getTime();
            
            int diffDays = (int) (diff / (24 * 60 * 60 * 1000));
            
            if(diffDays > 0){
                checkinNoOfDays.setText(String.valueOf(diffDays));
                calculateBillStep1();
                
                checkinAdvancePayment.setEnabled(true);
                checkinDiscountType.setEnabled(true);
            } else {
                checkinCheckOutDate.setDate(null);
                checkinNoOfDays.setText(null);
                
                checkinAdvancePayment.setEnabled(false);
                checkinDiscountType.setEnabled(false);
                
                new ErrorMsg().showErr("Please enter a date after today...");
            }
            
        } catch (Exception e) {
        }

    }//GEN-LAST:event_checkinCheckOutDatePropertyChange

    private void checkinCheckInDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinCheckInDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkinCheckInDateActionPerformed

    private void checkinDiscountTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinDiscountTypeActionPerformed
        viewCheckinDiscountDetails();
    }//GEN-LAST:event_checkinDiscountTypeActionPerformed

    private void checkinAdvancePaymentKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkinAdvancePaymentKeyTyped
        char enter = evt.getKeyChar();

        if (!(Character.isDigit(enter))){
            evt.consume();
        }
    }//GEN-LAST:event_checkinAdvancePaymentKeyTyped

    private void checkinAdvancePaymentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkinAdvancePaymentKeyReleased
        try {
            if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
                if(checkinAdvancePayment.getText().length() != 0){
                    calculateBillStep2();
                } else {
                    checkinPendingBalance.setText(null);
                }
            } else {
                calculateBillStep2();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_checkinAdvancePaymentKeyReleased

    private void checkinDiscountRateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkinDiscountRateKeyTyped
        
    }//GEN-LAST:event_checkinDiscountRateKeyTyped

    private void guestPhoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_guestPhoneFocusLost
        
    }//GEN-LAST:event_guestPhoneFocusLost

    private void checkinGuestIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinGuestIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkinGuestIdActionPerformed

    private void checkoutByRoomIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutByRoomIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutByRoomIdActionPerformed

    private void checkoutByRoomIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkoutByRoomIdKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutByRoomIdKeyTyped

    private void checkoutByRoomCheckOutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutByRoomCheckOutBtnActionPerformed
        conn = obj.connect();
        
        try {
            if(editCheckoutId.isEmpty()){
                new ErrorMsg().showErr("Please select record...");
            } else {
                if(checkoutByRoomCash.getText().isEmpty()){
                    new ErrorMsg().showErr("Please fill all the fields...");
                } else {
                    try {
                        cs = conn.prepareCall("{call createCheckoutByRoomDetails(?,?)}");
                        cs.setString("rId", editCheckoutId);
                        cs.setFloat("pendingAmount", Float.valueOf(checkoutByRoomPendingBalance.getText().toString()));

                        cs.executeUpdate();
                        
                        String ttl_balance = checkoutByRoomTotalBalance.getText().toString();
                        String pendi_balance = checkoutByRoomPendingBalance.getText().toString();
                        String csh = checkoutByRoomCash.getText().toString();
                        String cng = checkoutByRoomChange.getText().toString();
                        
                        viewCheckoutDetailsByRoom();
                        new ErrorMsg().showErr("Successfully...");
                                                
                        Checkout_Invoice checkout_Invoice = new Checkout_Invoice(editCheckoutId, ttl_balance, pendi_balance, csh, cng);
                        checkout_Invoice.setVisible(true);
                        
                    } catch (SQLException e) {
                        new ErrorMsg().showErr(e.getMessage());
                    }
                    editCheckoutId = null;
                }
            }
        } catch (HeadlessException e) {
            new ErrorMsg().showErr("Please select record...");
        }
        
        conn = null;
    }//GEN-LAST:event_checkoutByRoomCheckOutBtnActionPerformed

    private void checkoutByRoomDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutByRoomDeleteBtnActionPerformed
        conn = obj.connect();
        
        try {
            if(editCheckoutId.isEmpty()){
                new ErrorMsg().showErr("Please select record...");
            } else {
                int a = JOptionPane.showConfirmDialog(null, "Are you sure ?");
                if(a==0){
                    try {
                        cs = conn.prepareCall("{call deleteCheckoutDetails(?)}");
                        cs.setString("rId", editCheckoutId);
                        
                        cs.executeUpdate();
                        
                        viewCheckoutDetailsByRoom();
                        new ErrorMsg().showErr("Record deleted successfully...");
                    } catch (SQLException e) {
                        new ErrorMsg().showErr(e.getMessage());
                    }
                    editCheckoutId = null;
                }
            }
        } catch (HeadlessException e) {
            new ErrorMsg().showErr("Please select record...");
        }
        
        conn = null;
    }//GEN-LAST:event_checkoutByRoomDeleteBtnActionPerformed

    private void checkoutByRoomCheckInDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutByRoomCheckInDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutByRoomCheckInDateActionPerformed

    private void checkoutByRoomAdvancePaymentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkoutByRoomAdvancePaymentKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutByRoomAdvancePaymentKeyReleased

    private void checkoutByRoomAdvancePaymentKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkoutByRoomAdvancePaymentKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutByRoomAdvancePaymentKeyTyped

    private void checkoutByRoomTotalBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutByRoomTotalBalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutByRoomTotalBalanceActionPerformed

    private void checkoutByRoomPendingBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutByRoomPendingBalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutByRoomPendingBalanceActionPerformed

    private void checkoutByRoomGuestIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutByRoomGuestIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutByRoomGuestIdActionPerformed

    private void checkoutByRoomGuestIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkoutByRoomGuestIdKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutByRoomGuestIdKeyTyped

    private void checkoutByRoomCheckOutDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutByRoomCheckOutDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutByRoomCheckOutDateActionPerformed

    private void checkoutByRoomCheckOutDateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkoutByRoomCheckOutDateKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutByRoomCheckOutDateKeyTyped

    private void checkoutByRoomCashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutByRoomCashActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutByRoomCashActionPerformed

    private void checkoutByRoomChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutByRoomChangeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutByRoomChangeActionPerformed

    private void checkoutByRoomTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkoutByRoomTableMouseClicked
        
        int row = checkoutByRoomTable.getSelectedRow();

        editCheckoutId = checkoutByRoomTable.getValueAt(row, 1).toString();

        checkoutByRoomId.setText(checkoutByRoomTable.getValueAt(row, 0).toString());
        checkoutByRoomRoomId.setText(editCheckoutId);
        checkoutByRoomGuestId.setText(checkoutByRoomTable.getValueAt(row, 2).toString());
        checkoutByRoomCheckInDate.setText(checkoutByRoomTable.getValueAt(row, 3).toString());
        checkoutByRoomCheckOutDate.setText(checkoutByRoomTable.getValueAt(row, 4).toString());
        checkoutByRoomAdvancePayment.setText(checkoutByRoomTable.getValueAt(row, 5).toString());
        
        checkoutByRoomTotalBalance.setText(String.valueOf(calculateCheckoutTotalBalanceByRoom(Integer.valueOf(editCheckoutId))));
        checkoutByRoomPendingBalance.setText(String.valueOf(Float.valueOf(checkoutByRoomTotalBalance.getText().toString())-Float.valueOf(checkoutByRoomTable.getValueAt(row, 5).toString())));
        
        checkoutByRoomCash.setText(null);
        checkoutByRoomChange.setText(null);
        
        checkoutByRoomCash.setEditable(true);

        checkoutByRoomCheckOutBtn.setVisible(true);
        checkoutByRoomDeleteBtn.setVisible(true);
    }//GEN-LAST:event_checkoutByRoomTableMouseClicked

    private void checkoutByRoomRoomIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutByRoomRoomIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutByRoomRoomIdActionPerformed

    private void checkoutByRoomRoomIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkoutByRoomRoomIdKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutByRoomRoomIdKeyTyped

    private void checkoutByRoomCashKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkoutByRoomCashKeyReleased
        try {
            if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
                if(checkoutByRoomCash.getText().length() != 0){
                    calculateCheckoutByRoomChange();
                } else {
                    checkoutByRoomChange.setText(null);
                }
            } else {
                calculateCheckoutByRoomChange();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_checkoutByRoomCashKeyReleased

    private void checkoutByRoomCashKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkoutByRoomCashKeyTyped
        char enter = evt.getKeyChar();

        if (!(Character.isDigit(enter))){
            evt.consume();
        }
    }//GEN-LAST:event_checkoutByRoomCashKeyTyped

    private void guestCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guestCancelBtnActionPerformed
        panelDefault();
        guest.setVisible(true);
        
        viewGuestDetails();
    }//GEN-LAST:event_guestCancelBtnActionPerformed

    private void userCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userCancelBtnActionPerformed
        panelDefault();
        user.setVisible(true);
        
        viewUserDetails();
    }//GEN-LAST:event_userCancelBtnActionPerformed

    private void checkoutByGuestCheckOutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutByGuestCheckOutBtnActionPerformed
        conn = obj.connect();
        
        try {
            if(editCheckoutId.isEmpty()){
                new ErrorMsg().showErr("Please select record...");
            } else {
                if(checkoutByGuestCash.getText().isEmpty()){
                    new ErrorMsg().showErr("Please fill all the fields...");
                } else {
                    try {
                        cs = conn.prepareCall("{call createCheckoutByGuestDetails(?,?)}");
                        cs.setString("gId", editCheckoutId);
                        cs.setFloat("pendingAmount", Float.valueOf(checkoutByGuestPendingBalance.getText().toString()));

                        cs.executeUpdate();
                        
                        String rm_id = checkoutByGuestRoomId.getText().toString();
                        String ttl_balance = checkoutByGuestTotalBalance.getText().toString();
                        String pendi_balance = checkoutByGuestPendingBalance.getText().toString();
                        String csh = checkoutByGuestCash.getText().toString();
                        String cng = checkoutByGuestChange.getText().toString();
                        
                        viewCheckoutDetailsByGuest();
                        new ErrorMsg().showErr("Successfully...");
                                                
                        Checkout_Invoice checkout_Invoice = new Checkout_Invoice(rm_id, ttl_balance, pendi_balance, csh, cng);
                        checkout_Invoice.setVisible(true);
                        
                    } catch (SQLException e) {
                        new ErrorMsg().showErr(e.getMessage());
                    }
                    editCheckoutId = null;
                }
            }
        } catch (HeadlessException e) {
            new ErrorMsg().showErr("Please select record...");
        }
        
        conn = null;
    }//GEN-LAST:event_checkoutByGuestCheckOutBtnActionPerformed

    private void checkoutByGuestAdvancePaymentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkoutByGuestAdvancePaymentKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutByGuestAdvancePaymentKeyReleased

    private void checkoutByGuestAdvancePaymentKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkoutByGuestAdvancePaymentKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutByGuestAdvancePaymentKeyTyped

    private void checkoutByGuestTotalBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutByGuestTotalBalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutByGuestTotalBalanceActionPerformed

    private void checkoutByGuestPendingBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutByGuestPendingBalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutByGuestPendingBalanceActionPerformed

    private void checkoutByGuestGuestIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutByGuestGuestIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutByGuestGuestIdActionPerformed

    private void checkoutByGuestGuestIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkoutByGuestGuestIdKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutByGuestGuestIdKeyTyped

    private void checkoutByGuestCashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutByGuestCashActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutByGuestCashActionPerformed

    private void checkoutByGuestCashKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkoutByGuestCashKeyReleased
        try {
            if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
                if(checkoutByGuestCash.getText().length() != 0){
                    calculateCheckoutByGuestChange();
                } else {
                    checkoutByGuestChange.setText(null);
                }
            } else {
                calculateCheckoutByGuestChange();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_checkoutByGuestCashKeyReleased

    private void checkoutByGuestCashKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkoutByGuestCashKeyTyped
        char enter = evt.getKeyChar();

        if (!(Character.isDigit(enter))){
            evt.consume();
        }
    }//GEN-LAST:event_checkoutByGuestCashKeyTyped

    private void checkoutByGuestChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutByGuestChangeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutByGuestChangeActionPerformed

    private void checkoutByGuestTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkoutByGuestTableMouseClicked
        
        int row = checkoutByGuestTable.getSelectedRow();

        try {
            editCheckoutId = checkoutByGuestTable.getValueAt(row, 0).toString();
        } catch (Exception e) {
            row = -1;
        }
            
        if(row != -1) {

            checkoutByGuestGuestId.setText(editCheckoutId);
            checkoutByGuestRoomId.setText(checkoutByGuestTable.getValueAt(row, 1).toString());
            checkoutByGuestAdvancePayment.setText(checkoutByGuestTable.getValueAt(row, 2).toString());
            
            checkoutByGuestTotalBalance.setText(String.valueOf(calculateCheckoutTotalBalanceByGuest(editCheckoutId)));
            checkoutByGuestPendingBalance.setText(String.valueOf(Float.valueOf(checkoutByGuestTotalBalance.getText())-Float.valueOf(checkoutByGuestTable.getValueAt(row, 2).toString())));

            checkoutByGuestCash.setText(null);
            checkoutByGuestChange.setText(null);

            checkoutByGuestCash.setEditable(true);

            checkoutByGuestCheckOutBtn.setVisible(true);
        }
    }//GEN-LAST:event_checkoutByGuestTableMouseClicked

    private void checkoutTabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_checkoutTabbedPaneStateChanged
        viewCheckoutDetailsByRoom();
        viewCheckoutDetailsByGuest();
    }//GEN-LAST:event_checkoutTabbedPaneStateChanged

    private void checkoutByGuestRoomIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutByGuestRoomIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutByGuestRoomIdActionPerformed

    private void checkoutByGuestRoomIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkoutByGuestRoomIdKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutByGuestRoomIdKeyTyped

    private void checkinTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkinTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_checkinTableMouseClicked

    private void foodRoomIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foodRoomIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_foodRoomIdActionPerformed

    private void foodUpdateBillAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foodUpdateBillAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_foodUpdateBillAmountActionPerformed

    private void foodUpdateBillCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foodUpdateBillCancelBtnActionPerformed
        comboBoxFoodRoomId();
        
        foodRoomId.setSelectedIndex(0);
        foodUpdateBillAmount.setText(null);
    }//GEN-LAST:event_foodUpdateBillCancelBtnActionPerformed

    private void foodUpdateBillSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foodUpdateBillSaveBtnActionPerformed
        
        String food_room_id = foodRoomId.getSelectedItem().toString();
        String food_amount = foodUpdateBillAmount.getText().toString();
        
        conn = obj.connect();
        
        try {
            if(food_room_id.isEmpty() || food_amount.isEmpty()){
                new ErrorMsg().showErr("Please fill all the fields...");
            } else {
                try {
                    cs = conn.prepareCall("{call updateFoodBill(?,?)}");
                    cs.setString("roomId", food_room_id);
                    cs.setFloat("foodAmount", Float.valueOf(food_amount));

                    cs.executeUpdate();
                    
                    viewFoodDetails();
                    
                    new ErrorMsg().showErr("Successfully...");

                } catch (SQLException e) {
                    new ErrorMsg().showErr(e.getMessage());
                }
            }
        } catch (HeadlessException e) {
            new ErrorMsg().showErr(e.getMessage());
        }
        
        conn = null;
    }//GEN-LAST:event_foodUpdateBillSaveBtnActionPerformed

    private void foodNewBillCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foodNewBillCancelBtnActionPerformed
        foodNewBillAmount.setText(null);
        foodNewBillCash.setText(null);
        foodNewBillChange.setText(null);
    }//GEN-LAST:event_foodNewBillCancelBtnActionPerformed

    private void foodNewBillSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foodNewBillSaveBtnActionPerformed
        
        String food_amount = foodNewBillAmount.getText().toString();
        String food_cash = foodNewBillCash.getText().toString();
        String food_change = foodNewBillChange.getText().toString();
        
        conn = obj.connect();
        
        if(food_amount.isEmpty()){
                new ErrorMsg().showErr("Please fill all the fields...");
            } else {
                try {
                    cs = conn.prepareCall("{call newFoodBill(?)}");
                    cs.setFloat("foodAmount", Float.valueOf(food_amount));

                    cs.executeUpdate();

                    viewFoodDetails();
                    new ErrorMsg().showErr("Successfully...");

                    Food_Bill food_Bill = new Food_Bill(food_amount, food_cash, food_change);
                    food_Bill.setVisible(true);

                } catch (SQLException e) {
                    new ErrorMsg().showErr(e.getMessage());
                }
            }
        
        conn = null;
    }//GEN-LAST:event_foodNewBillSaveBtnActionPerformed

    private void foodNewBillAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foodNewBillAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_foodNewBillAmountActionPerformed

    private void foodNewBillCashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foodNewBillCashActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_foodNewBillCashActionPerformed

    private void foodNewBillChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foodNewBillChangeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_foodNewBillChangeActionPerformed

    private void foodNewBillCashKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_foodNewBillCashKeyReleased
        try {
            if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
                if(foodNewBillCash.getText().length() != 0){
                    calculateFoodNewBillChange();
                } else {
                    foodNewBillChange.setText(null);
                }
            } else {
                calculateFoodNewBillChange();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_foodNewBillCashKeyReleased

    private void foodNewBillCashKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_foodNewBillCashKeyTyped
        char enter = evt.getKeyChar();

        if (!(Character.isDigit(enter))){
            evt.consume();
        }
    }//GEN-LAST:event_foodNewBillCashKeyTyped

    private void foodUpdateBillAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_foodUpdateBillAmountKeyTyped
        char enter = evt.getKeyChar();

        if (!(Character.isDigit(enter))){
            evt.consume();
        }
    }//GEN-LAST:event_foodUpdateBillAmountKeyTyped

    private void foodNewBillAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_foodNewBillAmountKeyTyped
        char enter = evt.getKeyChar();

        if (!(Character.isDigit(enter))){
            evt.consume();
        }
    }//GEN-LAST:event_foodNewBillAmountKeyTyped

    private void panelDefault(){
        checkIn.setVisible(false);
        checkout.setVisible(false);
        guest.setVisible(false);
        room.setVisible(false);
        booking.setVisible(false);
        food.setVisible(false);
        user.setVisible(false);
    }
    
    public void viewUserDetails(){
        
        conn = obj.connect();
        
        //cashier no need next user id
        if(Login.role.equalsIgnoreCase("cashier")){
            userId.setText(null);
        } else {
            String lastId = "CSR000";

            try {
                String sql = "CALL `lastId`()";
                ps = conn.prepareCall(sql);
                rs = ps.executeQuery();

                while(rs.next()){
                    lastId = rs.getString("id");
                }

            } catch (SQLException e) {
                new ErrorMsg().showErr(e.getMessage());
                //JOptionPane.showMessageDialog(null, e.getMessage());
            }

            int nextId = Integer.valueOf(lastId.substring(3, 6))+1;

            userId.setText("CSR"+String.format("%03d", nextId));
        }
            
        userName.setText(null);
        userEmail.setText(null);
        userPhone.setText(null);
        userPassword.setText(null);
        
        //cashier cannot create user profile
        if(Login.role.equalsIgnoreCase("cashier")){
            userSaveBtn.setVisible(false);
        } else {
            userSaveBtn.setVisible(true);
        }
        
        userUpdateBtn.setVisible(false);
        userDeleteBtn.setVisible(false);
        userCancelBtn.setVisible(false);
        
        pwdLabel.setEnabled(false);
        userPassword.setEnabled(false);
        userChangePwdBtn.setEnabled(false);
        
        if(Login.role.equalsIgnoreCase("admin")){
            try {
                cs = conn.prepareCall("{CALL `viewUserDetails`()}");
                rs = cs.executeQuery();

                userTable.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
                new ErrorMsg().showErr(e.getMessage());
                //JOptionPane.showMessageDialog(null, e.getMessage());
            }
        } else {
            try {
                cs = conn.prepareCall("{CALL `viewSelfDetails`(?)}");
                cs.setString("username", Login.id);
                rs = cs.executeQuery();

                userTable.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
                new ErrorMsg().showErr(e.getMessage());
                //JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
        
        conn = null;
        
    }
    
    public void viewBookingDetails(){
        
        cancelAutoTimeoutBooking();
        
        conn = obj.connect();
        
        bookingMessage.setText(null);
        
        bookingCheckInBtn.setVisible(false);
        bookingCancelBtn.setVisible(false);
        
        try {
                cs = conn.prepareCall("{CALL `viewBookingDetails`()}");
                rs = cs.executeQuery();

                bookingTable.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
                new ErrorMsg().showErr(e.getMessage());
                //JOptionPane.showMessageDialog(null, e.getMessage());
            }
        
        conn = null;
        
    }
    
    public void cancelAutoTimeoutBooking(){
        conn = obj.connect();
            
        try {
            cs = conn.prepareCall("{call cancelAutoTimeoutBooking()}");
            cs.executeUpdate();
           
        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
        }

        conn = null;
    }
    
    public void viewFoodDetails(){
        
        comboBoxFoodRoomId();
        
        foodRoomId.setSelectedIndex(0);
        foodUpdateBillAmount.setText(null);
        
        foodNewBillAmount.setText(null);
        foodNewBillCash.setText(null);
        foodNewBillChange.setText(null);
        
    }
    
    public void viewRoomDetails(){
        
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{CALL `viewRoomDetails`()}");
            rs = cs.executeQuery();

            roomTable.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
            //JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
        conn = null;
        
    }
    
    public void viewGuestDetails(){
        
        conn = obj.connect();
        
        guestId.setText(null);
        guestFName.setText(null);
        guestAddress.setText(null);
        guestEmail.setText(null);
        guestPhone.setText(null);
        
        guestSaveBtn.setVisible(true);
        guestUpdateBtn.setVisible(false);
        guestDeleteBtn.setVisible(false);
        guestCancelBtn.setVisible(false);
        
        try {
                cs = conn.prepareCall("{CALL `viewGuestDetails`()}");
                rs = cs.executeQuery();

                guestTable.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
                new ErrorMsg().showErr(e.getMessage());
                //JOptionPane.showMessageDialog(null, e.getMessage());
            }
        
        conn = null;
        
    }
    
    public void viewCheckinDetails(){
        
        comboBoxCheckInRoomID();
        comboBoxCheckInGuestId();
        comboBoxCheckInDiscountType();
        
        checkinGuestId.setSelectedIndex(0);
        checkinRoomId.setSelectedIndex(0);
        checkinRoomType.setText(null);
        checkinRoomRate.setText(null);
        checkinCheckInDate.setText(dateForReport());
        checkinCheckOutDate.setDate(null);
        checkinCheckOutDate.setEnabled(false);
        checkinNoOfDays.setText(null);
        checkinDiscountType.setSelectedIndex(0);
        checkinDiscountType.setEnabled(false);
        checkinDiscountRate.setText(null);
        checkinSubTotal.setText(null);
        checkinAdvancePayment.setText(null);
        checkinAdvancePayment.setEnabled(false);
        checkinTotalBalance.setText(null);
        checkinPendingBalance.setText(null);
        
        checkinSaveBtn.setVisible(true);
        checkinCancelBtn.setVisible(false);
        
        conn = obj.connect();
        
        try {
                cs = conn.prepareCall("{CALL `viewCheckinDetails`()}");
                rs = cs.executeQuery();

                checkinTable.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
                new ErrorMsg().showErr(e.getMessage());
                //JOptionPane.showMessageDialog(null, e.getMessage());
            }
        
        conn = null;
        
    }
    
    public void comboBoxCheckInGuestId(){
        
        try {
            checkinGuestId.removeAllItems();
            checkinGuestId.addItem("");
        } catch (Exception e) {
        }
        
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{CALL `viewGuestDetails`()}");
            rs = cs.executeQuery();
            
            while(rs.next()){
                checkinGuestId.addItem(rs.getString("Id"));
            }
            
        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
        }
        
        conn = null;
    }
    
    public void comboBoxCheckInRoomID(){
        
        try {
            checkinRoomId.removeAllItems();
            checkinRoomId.addItem("");
        } catch (Exception e) {
        }
        
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{CALL `roomDetailsById`()}");
            rs = cs.executeQuery();
            
            while(rs.next()){
                checkinRoomId.addItem(rs.getString("id"));
                //checkinRoomId.addItem(rs.getString("id") + " - " + rs.getString("type"));
            }
            
        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
        }
        
        conn = null;
    }
    
    public void comboBoxCheckInDiscountType(){
        
        try {
            checkinDiscountType.removeAllItems();
            checkinDiscountType.addItem("");
        } catch (Exception e) {
        }
        
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{CALL `discountDetailsByType`()}");
            rs = cs.executeQuery();
            
            while(rs.next()){
                checkinDiscountType.addItem(rs.getString("type"));
            }
            
        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
        }
        
        conn = null;
    }
    
    public void comboBoxFoodRoomId(){
        
        try {
            foodRoomId.removeAllItems();
            foodRoomId.addItem("");
        } catch (Exception e) {
        }
        
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{CALL `roomIdForFood`()}");
            rs = cs.executeQuery();
            
            while(rs.next()){
                foodRoomId.addItem(rs.getString("id"));
            }
            
        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
        }
        
        conn = null;
    }
    
    /*public void comboBoxCheckOutRoomID(){
        
        try {
            checkoutRoomId.removeAllItems();
            checkoutRoomId.addItem("");
        } catch (Exception e) {
        }
        
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{CALL `checkoutRoomId`()}");
            rs = cs.executeQuery();
            
            while(rs.next()){
                checkoutRoomId.addItem(rs.getString("id"));
            }
            
        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
        }
        
        conn = null;
    }*/
    
    public void viewCheckinRoomDetails() {
        
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{CALL `roomDetailsById`()}");
            rs = cs.executeQuery();
            
            while(rs.next()){
                if(checkinRoomId.getSelectedItem().toString().equals(rs.getString("id"))){
                    checkinRoomType.setText(rs.getString("type"));
                    checkinRoomRate.setText(rs.getString("rate"));
                    
                    checkinCheckOutDate.setEnabled(true);
                    
                    break;
                } else {
                    checkinRoomType.setText(null);
                    checkinRoomRate.setText(null);
                    
                    checkinCheckOutDate.setEnabled(false);
                }
            }
            
        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
        }
        
        conn = null;
        
    }
    
    public void viewCheckinDiscountDetails() {
                
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{CALL `discountDetailsByType`()}");
            rs = cs.executeQuery();
            
            while(rs.next()){
                if(checkinDiscountType.getSelectedItem().toString().equals(rs.getString("type"))){
                    
                    float discountRate = Float.valueOf(rs.getString("rate"));
                    float subTotal = Float.valueOf(checkinSubTotal.getText());
        
                    discountRate = subTotal*discountRate/100;
                    
                    checkinDiscountRate.setText(String.valueOf(discountRate));
                    
                    subTotal = subTotal - discountRate;
                    
                    checkinTotalBalance.setText(String.valueOf(subTotal));
                    if(checkinPendingBalance.getText().length() > 0){
                        checkinPendingBalance.setText(String.valueOf(Integer.valueOf(checkinPendingBalance.getText())-discountRate));
                    }
                    
                    break;
                } else {
                    checkinDiscountRate.setText(null);
                    checkinTotalBalance.setText(checkinSubTotal.getText());
                }
            }
            
        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
        }
        
        conn = null;
        
    }
    
    public float calculateCheckoutTotalBalanceByGuest(String checkoutGuestId) {
        float roomAmount = 0;
        float totalRoomAmount = 0;
        float foodAmount = 0;
        float discountRate = 0;
        
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{CALL `sumFoodAmountByGuest`(?)}");
            cs.setString("guestId", checkoutGuestId);
            rs = cs.executeQuery();
            
            while(rs.next()){
                try {
                    foodAmount = Float.valueOf(rs.getString("foodAmount"));
                } catch (Exception e) {
                }
            }
            
        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
        }
        
        conn = null;
        
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{CALL `sumRoomAmountByGuest`(?)}");
            cs.setString("guestId", checkoutGuestId);
            rs = cs.executeQuery();
            
            while(rs.next()){
                roomAmount = Float.valueOf(rs.getString("roomAmount"));
                discountRate = Float.valueOf(rs.getString("discountRate"));
                
                if(discountRate != 0) {
                    roomAmount = roomAmount*(100-discountRate)/100;
                }
                
                totalRoomAmount+=roomAmount;
            }
            
        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
        }
                
        conn = null;
        
        //totalBalance = totalRoomAmount+foodAmount
        return totalRoomAmount+foodAmount;
    }
    
    public float calculateCheckoutTotalBalanceByRoom(int checkoutRoomId) {
        float roomAmount = 0;
        float foodAmount = 0;
        float discountRate = 0;
        
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{CALL `sumFoodAmountByRoom`(?)}");
            cs.setInt("roomId", checkoutRoomId);
            rs = cs.executeQuery();
            
            while(rs.next()){
                try {
                    foodAmount = Float.valueOf(rs.getString("foodAmount"));
                } catch (Exception e) {
                }
            }
            
        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
        }
        
        conn = null;
        
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{CALL `sumRoomAmountByRoom`(?)}");
            cs.setInt("roomId", checkoutRoomId);
            rs = cs.executeQuery();
            
            while(rs.next()){
                roomAmount = Float.valueOf(rs.getString("roomAmount"));
                discountRate = Float.valueOf(rs.getString("discountRate"));
            }
            
        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
        }
        
        conn = null;
        
        if(discountRate != 1) {
            roomAmount = roomAmount*(100-discountRate)/100;
        }
        
        //totalBalance = roomAmount+foodAmount
        return roomAmount+foodAmount;
    }
    
    public void calculateBillStep1() {
        
        float roomrate = Float.valueOf(checkinRoomRate.getText());        
        int noOfDays = Integer.parseInt(checkinNoOfDays.getText());
        
        float subTotal = roomrate * noOfDays;
        float totalBalance = subTotal;
        
        checkinSubTotal.setText(String.valueOf(subTotal));
        checkinTotalBalance.setText(String.valueOf(totalBalance));
    }
    
    public void calculateBillStep2() {
        try {
            if (Float.valueOf(checkinTotalBalance.getText()) < Float.valueOf(checkinAdvancePayment.getText())){
                checkinAdvancePayment.setText(checkinAdvancePayment.getText().substring(0,checkinAdvancePayment.getText().length()-1));
            } else {
                float totalBalance = Float.valueOf(checkinTotalBalance.getText());        
                float advancePayment;

                if(checkinAdvancePayment.getText().length() <= 0){
                    advancePayment = 0;
                } else {
                    advancePayment = Integer.parseInt(checkinAdvancePayment.getText());
                }

                float pendingBalance = totalBalance - advancePayment;

                checkinPendingBalance.setText(String.valueOf(pendingBalance));
            }
        } catch (Exception e) {
            checkinAdvancePayment.setText(checkinAdvancePayment.getText().substring(0,checkinTotalBalance.getText().length()-1));
        }
    }
    
    public void calculateCheckoutByRoomChange() {
        try {
            float pendingBalance = Float.valueOf(checkoutByRoomPendingBalance.getText());        
            float cash = 0;
            float change = 0;

                cash = Float.valueOf(checkoutByRoomCash.getText());

                change = cash - pendingBalance;

                checkoutByRoomChange.setText(String.valueOf(change));
        } catch (Exception e) {
            System.out.println(e.getMessage());//checkoutCash.setText(checkoutCash.getText().substring(0,checkoutCash.getText().length()-1));
        }
    }
    
    public void calculateCheckoutByGuestChange() {
        try {
            float pendingBalance = Float.valueOf(checkoutByGuestPendingBalance.getText());        
            float cash = 0;
            float change = 0;

                cash = Float.valueOf(checkoutByGuestCash.getText());

                change = cash - pendingBalance;

                checkoutByGuestChange.setText(String.valueOf(change));
        } catch (Exception e) {
            System.out.println(e.getMessage());//checkoutCash.setText(checkoutCash.getText().substring(0,checkoutCash.getText().length()-1));
        }
    }
    
    public void calculateFoodNewBillChange() {
        try {
            float foodAmount = Float.valueOf(foodNewBillAmount.getText());        
            float cash = 0;
            float change = 0;

                cash = Float.valueOf(foodNewBillCash.getText());

                change = cash - foodAmount;

                foodNewBillChange.setText(String.valueOf(change));
        } catch (Exception e) {
            System.out.println(e.getMessage());//checkoutCash.setText(checkoutCash.getText().substring(0,checkoutCash.getText().length()-1));
        }
    }
    
    public void viewCheckoutDetailsByGuest() {
        
        conn = obj.connect();
        
        editCheckoutId = null;
        
        checkoutByGuestGuestId.setText(null);
        checkoutByGuestRoomId.setText(null);
        checkoutByGuestAdvancePayment.setText(null);
        checkoutByGuestTotalBalance.setText(null);
        checkoutByGuestPendingBalance.setText(null);
        checkoutByGuestCash.setText(null);
        checkoutByGuestChange.setText(null);
        
        checkoutByGuestCash.setEditable(false);
        
        checkoutByGuestCheckOutBtn.setVisible(false);
        
        try {
                cs = conn.prepareCall("{CALL `viewCheckoutDetailsByGuest`()}");
                rs = cs.executeQuery();

                checkoutByGuestTable.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
                new ErrorMsg().showErr(e.getMessage());
                //JOptionPane.showMessageDialog(null, e.getMessage());
            }
        
        conn = null;
        
    }
    
    public void viewCheckoutDetailsByRoom() {
        
        conn = obj.connect();
        
        editCheckoutId = null;
        
        checkoutByRoomId.setText(null);
        checkoutByRoomRoomId.setText(null);
        checkoutByRoomGuestId.setText(null);
        checkoutByRoomCheckInDate.setText(null);
        checkoutByRoomCheckOutDate.setText(null);
        checkoutByRoomAdvancePayment.setText(null);
        checkoutByRoomTotalBalance.setText(null);
        checkoutByRoomPendingBalance.setText(null);
        checkoutByRoomCash.setText(null);
        checkoutByRoomChange.setText(null);
        
        checkoutByRoomCash.setEditable(false);
        
        checkoutByRoomCheckOutBtn.setVisible(false);
        checkoutByRoomDeleteBtn.setVisible(false);
        
        try {
                cs = conn.prepareCall("{CALL `viewCheckoutDetailsByRoom`()}");
                rs = cs.executeQuery();

                checkoutByRoomTable.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
                new ErrorMsg().showErr(e.getMessage());
                //JOptionPane.showMessageDialog(null, e.getMessage());
            }
        
        conn = null;
        
        /*comboBoxCheckOutRoomID();
        
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{CALL `viewCheckoutDetails`()}");
            rs = cs.executeQuery();
            
            while(rs.next()){
                if(checkoutRoomId.getSelectedItem().toString().equals(rs.getString("room_id"))){
                    checkoutId.setText(rs.getString("id"));
                    checkoutGuestId.setText(rs.getString("guest_id"));
                    checkoutCheckInDate.setText(rs.getString("checkin_date"));
                    checkoutCheckOutDate.setText(rs.getString("checkout_date"));
                    checkoutAdvancePayment.setText(rs.getString("advance_payment"));
                    checkoutTotalBalance.setText(rs.getString("total_balance"));
                    checkoutPendingBalance.setText(String.valueOf(Integer.valueOf(rs.getString("total_balance"))-Integer.valueOf(rs.getString("advance_payment"))));
                    
                    break;
                } else {
                    checkoutId.setText(null);
                    checkoutGuestId.setText(null);
                    checkoutCheckInDate.setText(null);
                    checkoutCheckOutDate.setText(null);
                    checkoutAdvancePayment.setText(null);
                    checkoutTotalBalance.setText(null);
                    checkoutPendingBalance.setText(null);
                    
                }
            }
            
        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
        }
        
        conn = null;*/
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CashierDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CashierDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CashierDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CashierDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CashierDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLayeredPane LayeredPane;
    private javax.swing.JPanel booking;
    private javax.swing.JButton bookingCancelBtn;
    private javax.swing.JButton bookingCheckInBtn;
    private javax.swing.JTextArea bookingMessage;
    private javax.swing.JPanel bookingPanel;
    private javax.swing.JTable bookingTable;
    private javax.swing.JPanel checkIn;
    private javax.swing.JPanel checkInPanel;
    private javax.swing.JPanel checkOutPanel;
    private javax.swing.JLabel checkedInIcon;
    private javax.swing.JLabel checkedInLabel;
    private javax.swing.JLabel checkedOutIcon;
    private javax.swing.JLabel checkedOutLabel;
    private javax.swing.JTextField checkinAdvancePayment;
    private javax.swing.JButton checkinCancelBtn;
    private javax.swing.JTextField checkinCheckInDate;
    private com.toedter.calendar.JDateChooser checkinCheckOutDate;
    private javax.swing.JTextField checkinDiscountRate;
    private javax.swing.JComboBox<String> checkinDiscountType;
    private javax.swing.JComboBox<String> checkinGuestId;
    private javax.swing.JTextField checkinNoOfDays;
    private javax.swing.JTextField checkinPendingBalance;
    private javax.swing.JComboBox<String> checkinRoomId;
    private javax.swing.JTextField checkinRoomRate;
    private javax.swing.JTextField checkinRoomType;
    private javax.swing.JButton checkinSaveBtn;
    private javax.swing.JTextField checkinSubTotal;
    private javax.swing.JTable checkinTable;
    private javax.swing.JTextField checkinTotalBalance;
    private javax.swing.JPanel checkout;
    private javax.swing.JPanel checkoutByGuest;
    private javax.swing.JTextField checkoutByGuestAdvancePayment;
    private javax.swing.JTextField checkoutByGuestCash;
    private javax.swing.JTextField checkoutByGuestChange;
    private javax.swing.JButton checkoutByGuestCheckOutBtn;
    private javax.swing.JTextField checkoutByGuestGuestId;
    private javax.swing.JTextField checkoutByGuestPendingBalance;
    private javax.swing.JTextField checkoutByGuestRoomId;
    private javax.swing.JTable checkoutByGuestTable;
    private javax.swing.JTextField checkoutByGuestTotalBalance;
    private javax.swing.JPanel checkoutByRoom;
    private javax.swing.JTextField checkoutByRoomAdvancePayment;
    private javax.swing.JTextField checkoutByRoomCash;
    private javax.swing.JTextField checkoutByRoomChange;
    private javax.swing.JTextField checkoutByRoomCheckInDate;
    private javax.swing.JButton checkoutByRoomCheckOutBtn;
    private javax.swing.JTextField checkoutByRoomCheckOutDate;
    private javax.swing.JButton checkoutByRoomDeleteBtn;
    private javax.swing.JTextField checkoutByRoomGuestId;
    private javax.swing.JTextField checkoutByRoomId;
    private javax.swing.JTextField checkoutByRoomPendingBalance;
    private javax.swing.JTextField checkoutByRoomRoomId;
    private javax.swing.JTable checkoutByRoomTable;
    private javax.swing.JTextField checkoutByRoomTotalBalance;
    private javax.swing.JTabbedPane checkoutTabbedPane;
    private javax.swing.JLabel closeBtn;
    private javax.swing.JLabel copyrights;
    private javax.swing.JPanel dashboarddPane;
    private static javax.swing.JLabel date;
    private javax.swing.JLabel discountIcon;
    private javax.swing.JLabel discountLabel;
    private javax.swing.JPanel food;
    private javax.swing.JTextField foodNewBillAmount;
    private javax.swing.JButton foodNewBillCancelBtn;
    private javax.swing.JTextField foodNewBillCash;
    private javax.swing.JTextField foodNewBillChange;
    private javax.swing.JButton foodNewBillSaveBtn;
    private javax.swing.JPanel foodPanel;
    private javax.swing.JComboBox<String> foodRoomId;
    private javax.swing.JLabel foodTopic;
    private javax.swing.JTextField foodUpdateBillAmount;
    private javax.swing.JButton foodUpdateBillCancelBtn;
    private javax.swing.JButton foodUpdateBillSaveBtn;
    private javax.swing.JPanel guest;
    private javax.swing.JTextField guestAddress;
    private javax.swing.JButton guestCancelBtn;
    private javax.swing.JButton guestDeleteBtn;
    private javax.swing.JTextField guestEmail;
    private javax.swing.JTextField guestFName;
    private javax.swing.JLabel guestIcon;
    private javax.swing.JTextField guestId;
    private javax.swing.JLabel guestLabel;
    private javax.swing.JPanel guestPanel;
    private javax.swing.JTextField guestPhone;
    private javax.swing.JButton guestSaveBtn;
    private javax.swing.JTable guestTable;
    private javax.swing.JButton guestUpdateBtn;
    private javax.swing.JPanel hrLine;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JLabel logoIcon;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JLabel logoutIcon;
    private javax.swing.JLabel logoutLabel;
    private javax.swing.JPanel logoutPanel;
    private javax.swing.JLabel minimizeBtn;
    private javax.swing.JPanel newBill;
    private javax.swing.JPanel pane;
    private javax.swing.JLabel pwdLabel;
    private javax.swing.JLabel pwdLabel1;
    private javax.swing.JLabel pwdLabel2;
    private javax.swing.JLabel reportIcon;
    private javax.swing.JLabel reportLabel;
    private javax.swing.JLabel reportTopic1;
    private javax.swing.JLabel reportTopic2;
    private javax.swing.JPanel room;
    private javax.swing.JLabel roomIcon;
    private javax.swing.JLabel roomLabel;
    private javax.swing.JPanel roomPanel;
    private javax.swing.JTable roomTable;
    private javax.swing.JPanel updateBill;
    private javax.swing.JPanel user;
    private javax.swing.JButton userCancelBtn;
    private javax.swing.JButton userChangePwdBtn;
    private javax.swing.JButton userDeleteBtn;
    private javax.swing.JTextField userEmail;
    private javax.swing.JLabel userIcon;
    private javax.swing.JTextField userId;
    private javax.swing.JLabel userLabel;
    private javax.swing.JTextField userName;
    private javax.swing.JPanel userPanel;
    private javax.swing.JTextField userPassword;
    private javax.swing.JTextField userPhone;
    private javax.swing.JButton userSaveBtn;
    private javax.swing.JTable userTable;
    private javax.swing.JLabel userTopic;
    private javax.swing.JLabel userTopic1;
    private javax.swing.JLabel userTopic2;
    private javax.swing.JLabel userTopic3;
    private javax.swing.JLabel userTopic4;
    private javax.swing.JLabel userTopic6;
    private javax.swing.JButton userUpdateBtn;
    private javax.swing.JLabel welcomeName;
    // End of variables declaration//GEN-END:variables
}
