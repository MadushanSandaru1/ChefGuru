/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chefguru;

import dbconnection.DBConnection;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author sanda
 */
public class CashierDashboard extends javax.swing.JFrame {

    /**
     * Creates new form CashierDashboard
     */
    //public static final String DATE_FORMAT_NOW = "dd MMM yyyy HH:mm:ss";
    public static String dateTime;
    public static String today;
    
    public static SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    
    public static String now() {
        Calendar cal = Calendar.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat("dd MMM yyyy");
        return sdf.format(cal.getTime());
    }
    
    public static String dateForUse() {
        Calendar cal = Calendar.getInstance();
        return dateFormat.format(cal.getTime());
    }
    
    public static String editUserId;
    public static String editDiscountId;
    public static String editRoomId;
    public static String editGuestId;
    
    Connection conn = null;
    PreparedStatement ps = null;
    CallableStatement cs = null;
    ResultSet rs = null;
    
    DBConnection obj = DBConnection.getDb();
    
    public CashierDashboard() {
        
        initComponents();
        
        today = CashierDashboard.dateForUse();
        
        dateTime = "Date: "+CashierDashboard.now();
        date.setText(dateTime);
        welcomeName.setText("Welcome, "+Login.fullname);
        
        viewCheckinDetails();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        dashboarddPane = new javax.swing.JPanel();
        pane = new javax.swing.JPanel();
        closeBtn = new javax.swing.JLabel();
        minimizeBtn = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        welcomeName = new javax.swing.JLabel();
        LayeredPane = new javax.swing.JLayeredPane();
        checkIn = new javax.swing.JPanel();
        userTopic4 = new javax.swing.JLabel();
        checkinId = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        checkinRoomRate = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        checkinSaveBtn = new javax.swing.JButton();
        checkinUpdateBtn = new javax.swing.JButton();
        checkinDeleteBtn = new javax.swing.JButton();
        checkinRoomId = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        checkinNoOfOccupancy = new javax.swing.JTextField();
        checkinRoomType = new javax.swing.JTextField();
        checkinCheckInDate = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        checkinNoOfDays = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        checkinDiscountRate = new javax.swing.JTextField();
        checkinDiscountType = new javax.swing.JComboBox<>();
        jLabel28 = new javax.swing.JLabel();
        checkinCheckOutDate = new com.toedter.calendar.JDateChooser();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        checkinAdvancePayment = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        checkinSubTotal = new javax.swing.JTextField();
        checkinTotalBalance = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        checkinPendingBalance = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        checkinGuestId = new javax.swing.JComboBox<>();
        checkout = new javax.swing.JPanel();
        checkOutTopic = new javax.swing.JLabel();
        guest = new javax.swing.JPanel();
        userTopic3 = new javax.swing.JLabel();
        guestId = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        guestAddress = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        guestEmail = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        guestFName = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        guestLName = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        guestSaveBtn = new javax.swing.JButton();
        guestUpdateBtn = new javax.swing.JButton();
        guestDeleteBtn = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        guestTable = new javax.swing.JTable();
        guestPhone = new javax.swing.JTextField();
        pwdLabel1 = new javax.swing.JLabel();
        room = new javax.swing.JPanel();
        userTopic2 = new javax.swing.JLabel();
        roomId = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        roomOccupancy = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        roomRate = new javax.swing.JTextField();
        roomSaveBtn = new javax.swing.JButton();
        roomUpdateBtn = new javax.swing.JButton();
        roomDeleteBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        roomTable = new javax.swing.JTable();
        roomType = new javax.swing.JComboBox<>();
        discount = new javax.swing.JPanel();
        userTopic1 = new javax.swing.JLabel();
        discountType = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        discountRate = new javax.swing.JTextField();
        discountSaveBtn = new javax.swing.JButton();
        discountUpdateBtn = new javax.swing.JButton();
        discountDeleteBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        discountTable = new javax.swing.JTable();
        discountId = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        report = new javax.swing.JPanel();
        reportTopic = new javax.swing.JLabel();
        user = new javax.swing.JPanel();
        userTopic = new javax.swing.JLabel();
        userId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        userEmail = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        userPhone = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        userFName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        userLName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        userSaveBtn = new javax.swing.JButton();
        userUpdateBtn = new javax.swing.JButton();
        userDeleteBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        userChangePwdBtn = new javax.swing.JButton();
        userPassword = new javax.swing.JTextField();
        pwdLabel = new javax.swing.JLabel();
        hrLine = new javax.swing.JPanel();
        logoIcon = new javax.swing.JLabel();
        logoLabel = new javax.swing.JLabel();
        copyrights = new javax.swing.JLabel();
        checkedInPanel = new javax.swing.JPanel();
        checkedInIcon = new javax.swing.JLabel();
        checkedInLabel = new javax.swing.JLabel();
        checkedOutPanel = new javax.swing.JPanel();
        checkedOutIcon = new javax.swing.JLabel();
        checkedOutLabel = new javax.swing.JLabel();
        guestPanel = new javax.swing.JPanel();
        guestIcon = new javax.swing.JLabel();
        guestLabel = new javax.swing.JLabel();
        roomPanel = new javax.swing.JPanel();
        roomLabel = new javax.swing.JLabel();
        roomIcon = new javax.swing.JLabel();
        discountPanel = new javax.swing.JPanel();
        discountLabel = new javax.swing.JLabel();
        discountIcon = new javax.swing.JLabel();
        reportPanel = new javax.swing.JPanel();
        reportLabel = new javax.swing.JLabel();
        reportIcon = new javax.swing.JLabel();
        userPanel = new javax.swing.JPanel();
        userLabel = new javax.swing.JLabel();
        userIcon = new javax.swing.JLabel();
        logoutPanel = new javax.swing.JPanel();
        logoutLabel = new javax.swing.JLabel();
        logoutIcon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        dashboarddPane.setBackground(new java.awt.Color(102, 0, 0));

        pane.setBackground(new java.awt.Color(255,255,255,200));

        closeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/close_b.png"))); // NOI18N
        closeBtn.setToolTipText("Close");
        closeBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        closeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeBtnMouseClicked(evt);
            }
        });

        minimizeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/minimize_b.png"))); // NOI18N
        minimizeBtn.setToolTipText("Minimize");
        minimizeBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimizeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeBtnMouseClicked(evt);
            }
        });

        date.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        date.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        welcomeName.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        welcomeName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        LayeredPane.setBackground(new java.awt.Color(255, 255, 255));
        LayeredPane.setLayout(new java.awt.CardLayout());

        checkIn.setBackground(new java.awt.Color(255, 255, 255));

        userTopic4.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        userTopic4.setForeground(new java.awt.Color(51, 51, 51));
        userTopic4.setText("Check In Information");

        checkinId.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkinId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinIdActionPerformed(evt);
            }
        });
        checkinId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkinIdKeyTyped(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("Transaction ID :");

        checkinRoomRate.setEditable(false);
        checkinRoomRate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkinRoomRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinRoomRateActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText("Guest ID :");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setText("Room ID :");

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel22.setText("Room Rate :");

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel23.setText("Check in Date :");

        checkinSaveBtn.setBackground(new java.awt.Color(0, 202, 78));
        checkinSaveBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkinSaveBtn.setForeground(new java.awt.Color(255, 255, 255));
        checkinSaveBtn.setText("Save");
        checkinSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinSaveBtnActionPerformed(evt);
            }
        });

        checkinUpdateBtn.setBackground(new java.awt.Color(255, 189, 68));
        checkinUpdateBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkinUpdateBtn.setForeground(new java.awt.Color(255, 255, 255));
        checkinUpdateBtn.setText("Update");
        checkinUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinUpdateBtnActionPerformed(evt);
            }
        });

        checkinDeleteBtn.setBackground(new java.awt.Color(255, 96, 92));
        checkinDeleteBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkinDeleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        checkinDeleteBtn.setText("Delete");
        checkinDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinDeleteBtnActionPerformed(evt);
            }
        });

        checkinRoomId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinRoomIdActionPerformed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel24.setText("Room Type :");

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel25.setText("No of Occupancy :");

        checkinNoOfOccupancy.setEditable(false);
        checkinNoOfOccupancy.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkinNoOfOccupancy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinNoOfOccupancyActionPerformed(evt);
            }
        });

        checkinRoomType.setEditable(false);
        checkinRoomType.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkinRoomType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinRoomTypeActionPerformed(evt);
            }
        });

        checkinCheckInDate.setEditable(false);
        checkinCheckInDate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkinCheckInDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinCheckInDateActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel26.setText("No of Days :");

        checkinNoOfDays.setEditable(false);
        checkinNoOfDays.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkinNoOfDays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinNoOfDaysActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel27.setText("Discount Type :");

        checkinDiscountRate.setEditable(false);
        checkinDiscountRate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkinDiscountRate.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        checkinDiscountRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinDiscountRateActionPerformed(evt);
            }
        });
        checkinDiscountRate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkinDiscountRateKeyTyped(evt);
            }
        });

        checkinDiscountType.setEnabled(false);
        checkinDiscountType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinDiscountTypeActionPerformed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel28.setText("Check out Date :");

        checkinCheckOutDate.setDateFormatString("yyyy-MM-dd");
        checkinCheckOutDate.setEnabled(false);
        checkinCheckOutDate.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                checkinCheckOutDatePropertyChange(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel29.setText("Discount Rate :");

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel30.setText("Advance Payment :");

        checkinAdvancePayment.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkinAdvancePayment.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        checkinAdvancePayment.setEnabled(false);
        checkinAdvancePayment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                checkinAdvancePaymentKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkinAdvancePaymentKeyTyped(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel31.setText("Sub Total :");

        checkinSubTotal.setEditable(false);
        checkinSubTotal.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkinSubTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        checkinSubTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinSubTotalActionPerformed(evt);
            }
        });

        checkinTotalBalance.setEditable(false);
        checkinTotalBalance.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkinTotalBalance.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        checkinTotalBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinTotalBalanceActionPerformed(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel32.setText("Total Balance :");

        checkinPendingBalance.setEditable(false);
        checkinPendingBalance.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkinPendingBalance.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        checkinPendingBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinPendingBalanceActionPerformed(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel33.setText("Pending Balance :");

        checkinGuestId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinGuestIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout checkInLayout = new javax.swing.GroupLayout(checkIn);
        checkIn.setLayout(checkInLayout);
        checkInLayout.setHorizontalGroup(
            checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkInLayout.createSequentialGroup()
                .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(checkInLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(userTopic4, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(checkInLayout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel22)
                            .addComponent(jLabel21)
                            .addComponent(jLabel20)
                            .addComponent(jLabel23)
                            .addComponent(jLabel26)
                            .addComponent(jLabel27)
                            .addComponent(jLabel30)
                            .addComponent(jLabel32)
                            .addComponent(jLabel33)
                            .addComponent(jLabel31))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkinId, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkinAdvancePayment, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(checkInLayout.createSequentialGroup()
                                .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(checkinGuestId, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(checkinDiscountType, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(checkinRoomRate)
                                            .addComponent(checkinRoomId, 0, 150, Short.MAX_VALUE)
                                            .addComponent(checkinCheckInDate))
                                        .addComponent(checkinNoOfDays, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(checkinSubTotal)
                                    .addComponent(checkinTotalBalance)
                                    .addComponent(checkinPendingBalance))
                                .addGap(39, 39, 39)
                                .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(checkInLayout.createSequentialGroup()
                                        .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(checkinNoOfOccupancy)
                                            .addComponent(checkinRoomType)
                                            .addComponent(checkinCheckOutDate, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                            .addComponent(checkinDiscountRate)))
                                    .addGroup(checkInLayout.createSequentialGroup()
                                        .addComponent(checkinSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(checkinUpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(checkinDeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(152, Short.MAX_VALUE))
        );
        checkInLayout.setVerticalGroup(
            checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkInLayout.createSequentialGroup()
                .addComponent(userTopic4)
                .addGap(30, 30, 30)
                .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkinId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(checkinGuestId, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(checkInLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(checkinRoomId, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(checkinRoomRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(checkinCheckInDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(checkinNoOfDays, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27)
                            .addComponent(checkinDiscountType, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(checkInLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(checkInLayout.createSequentialGroup()
                                .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkinRoomType, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel24))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel25)
                                    .addComponent(checkinNoOfOccupancy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel28))
                            .addComponent(checkinCheckOutDate, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29)
                            .addComponent(checkinDiscountRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkinSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31))
                .addGap(8, 8, 8)
                .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkinAdvancePayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkinTotalBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(checkinSaveBtn)
                        .addComponent(checkinUpdateBtn)
                        .addComponent(checkinDeleteBtn))
                    .addGroup(checkInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(checkinPendingBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel33)))
                .addGap(0, 187, Short.MAX_VALUE))
        );

        LayeredPane.add(checkIn, "card2");

        checkout.setBackground(new java.awt.Color(255, 255, 255));

        checkOutTopic.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        checkOutTopic.setForeground(new java.awt.Color(51, 51, 51));
        checkOutTopic.setText("Check out Information");

        javax.swing.GroupLayout checkoutLayout = new javax.swing.GroupLayout(checkout);
        checkout.setLayout(checkoutLayout);
        checkoutLayout.setHorizontalGroup(
            checkoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkoutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(checkOutTopic, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(415, Short.MAX_VALUE))
        );
        checkoutLayout.setVerticalGroup(
            checkoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkoutLayout.createSequentialGroup()
                .addComponent(checkOutTopic)
                .addGap(0, 542, Short.MAX_VALUE))
        );

        LayeredPane.add(checkout, "card2");

        guest.setBackground(new java.awt.Color(255, 255, 255));

        userTopic3.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        userTopic3.setForeground(new java.awt.Color(51, 51, 51));
        userTopic3.setText("Guest Information");

        guestId.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        guestId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guestIdActionPerformed(evt);
            }
        });
        guestId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                guestIdKeyTyped(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Id :");

        guestAddress.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        guestAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guestAddressActionPerformed(evt);
            }
        });
        guestAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                guestAddressKeyTyped(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("First Name :");

        guestEmail.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        guestEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                guestEmailFocusLost(evt);
            }
        });
        guestEmail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                guestEmailMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                guestEmailMouseReleased(evt);
            }
        });
        guestEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guestEmailActionPerformed(evt);
            }
        });
        guestEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                guestEmailKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                guestEmailKeyTyped(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Last Name :");

        guestFName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        guestFName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guestFNameActionPerformed(evt);
            }
        });
        guestFName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                guestFNameKeyTyped(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Address :");

        guestLName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        guestLName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guestLNameActionPerformed(evt);
            }
        });
        guestLName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                guestLNameKeyTyped(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("Email :");

        guestSaveBtn.setBackground(new java.awt.Color(0, 202, 78));
        guestSaveBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        guestSaveBtn.setForeground(new java.awt.Color(255, 255, 255));
        guestSaveBtn.setText("Save");
        guestSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guestSaveBtnActionPerformed(evt);
            }
        });

        guestUpdateBtn.setBackground(new java.awt.Color(255, 189, 68));
        guestUpdateBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        guestUpdateBtn.setForeground(new java.awt.Color(255, 255, 255));
        guestUpdateBtn.setText("Update");
        guestUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guestUpdateBtnActionPerformed(evt);
            }
        });

        guestDeleteBtn.setBackground(new java.awt.Color(255, 96, 92));
        guestDeleteBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        guestDeleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        guestDeleteBtn.setText("Delete");
        guestDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guestDeleteBtnActionPerformed(evt);
            }
        });

        guestTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        guestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "First Name", "Last Name", "Address", "Email", "Phone No"
            }
        ));
        guestTable.setRowHeight(20);
        guestTable.setSelectionBackground(new java.awt.Color(102, 0, 0));
        guestTable.setSelectionForeground(new java.awt.Color(255, 234, 231));
        guestTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guestTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(guestTable);

        guestPhone.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        guestPhone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                guestPhoneFocusLost(evt);
            }
        });
        guestPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guestPhoneActionPerformed(evt);
            }
        });
        guestPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                guestPhoneKeyTyped(evt);
            }
        });

        pwdLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pwdLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pwdLabel1.setText("Phone No :");

        javax.swing.GroupLayout guestLayout = new javax.swing.GroupLayout(guest);
        guest.setLayout(guestLayout);
        guestLayout.setHorizontalGroup(
            guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guestLayout.createSequentialGroup()
                .addGroup(guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(guestLayout.createSequentialGroup()
                        .addGroup(guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(guestLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(userTopic3, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(guestLayout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addGroup(guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel14)
                                        .addComponent(jLabel17)
                                        .addComponent(jLabel16)
                                        .addComponent(jLabel15)
                                        .addComponent(jLabel18))
                                    .addComponent(pwdLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(guestLayout.createSequentialGroup()
                                        .addComponent(guestPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)
                                        .addComponent(guestSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(guestUpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(guestDeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(guestEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(guestId, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(guestAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(guestLName, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(guestFName, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 177, Short.MAX_VALUE))
                    .addGroup(guestLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4)))
                .addContainerGap())
        );
        guestLayout.setVerticalGroup(
            guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guestLayout.createSequentialGroup()
                .addComponent(userTopic3)
                .addGap(30, 30, 30)
                .addGroup(guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guestId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guestFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guestLName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guestAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guestEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(guestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guestPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pwdLabel1)
                    .addComponent(guestSaveBtn)
                    .addComponent(guestUpdateBtn)
                    .addComponent(guestDeleteBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        LayeredPane.add(guest, "card2");

        room.setBackground(new java.awt.Color(255, 255, 255));

        userTopic2.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        userTopic2.setForeground(new java.awt.Color(51, 51, 51));
        userTopic2.setText("Room Information");

        roomId.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roomId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomIdActionPerformed(evt);
            }
        });
        roomId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                roomIdKeyTyped(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Room ID :");

        roomOccupancy.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roomOccupancy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomOccupancyActionPerformed(evt);
            }
        });
        roomOccupancy.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                roomOccupancyKeyTyped(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Room Type :");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Room Rate :");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("No of Occupancy :");

        roomRate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roomRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomRateActionPerformed(evt);
            }
        });
        roomRate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                roomRateKeyTyped(evt);
            }
        });

        roomSaveBtn.setBackground(new java.awt.Color(0, 202, 78));
        roomSaveBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roomSaveBtn.setForeground(new java.awt.Color(255, 255, 255));
        roomSaveBtn.setText("Save");
        roomSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomSaveBtnActionPerformed(evt);
            }
        });

        roomUpdateBtn.setBackground(new java.awt.Color(255, 189, 68));
        roomUpdateBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roomUpdateBtn.setForeground(new java.awt.Color(255, 255, 255));
        roomUpdateBtn.setText("Update");
        roomUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomUpdateBtnActionPerformed(evt);
            }
        });

        roomDeleteBtn.setBackground(new java.awt.Color(255, 96, 92));
        roomDeleteBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roomDeleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        roomDeleteBtn.setText("Delete");
        roomDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomDeleteBtnActionPerformed(evt);
            }
        });

        roomTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roomTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Room Type", "Room Rate", "No: of Occupancy", "Status"
            }
        ));
        roomTable.setRowHeight(20);
        roomTable.setSelectionBackground(new java.awt.Color(102, 0, 0));
        roomTable.setSelectionForeground(new java.awt.Color(255, 234, 231));
        roomTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roomTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(roomTable);

        roomType.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout roomLayout = new javax.swing.GroupLayout(room);
        room.setLayout(roomLayout);
        roomLayout.setHorizontalGroup(
            roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomLayout.createSequentialGroup()
                .addGroup(roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roomLayout.createSequentialGroup()
                        .addGroup(roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(roomLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(userTopic2, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(roomLayout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addGroup(roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(roomId, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(roomLayout.createSequentialGroup()
                                        .addGroup(roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(roomType, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(roomOccupancy, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                                            .addComponent(roomRate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                                        .addGap(29, 29, 29)
                                        .addComponent(roomSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(roomUpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(roomDeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 141, Short.MAX_VALUE))
                    .addGroup(roomLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3)))
                .addContainerGap())
        );
        roomLayout.setVerticalGroup(
            roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomLayout.createSequentialGroup()
                .addComponent(userTopic2)
                .addGap(30, 30, 30)
                .addGroup(roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(roomType, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(roomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomOccupancy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(roomSaveBtn)
                    .addComponent(roomUpdateBtn)
                    .addComponent(roomDeleteBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        LayeredPane.add(room, "card2");

        discount.setBackground(new java.awt.Color(255, 255, 255));

        userTopic1.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        userTopic1.setForeground(new java.awt.Color(51, 51, 51));
        userTopic1.setText("Discount Information");

        discountType.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        discountType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountTypeActionPerformed(evt);
            }
        });
        discountType.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                discountTypeKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Discount Type :");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Discount Rate (%) :");

        discountRate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        discountRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountRateActionPerformed(evt);
            }
        });
        discountRate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                discountRateKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                discountRateKeyTyped(evt);
            }
        });

        discountSaveBtn.setBackground(new java.awt.Color(0, 202, 78));
        discountSaveBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        discountSaveBtn.setForeground(new java.awt.Color(255, 255, 255));
        discountSaveBtn.setText("Save");
        discountSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountSaveBtnActionPerformed(evt);
            }
        });

        discountUpdateBtn.setBackground(new java.awt.Color(255, 189, 68));
        discountUpdateBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        discountUpdateBtn.setForeground(new java.awt.Color(255, 255, 255));
        discountUpdateBtn.setText("Update");
        discountUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountUpdateBtnActionPerformed(evt);
            }
        });

        discountDeleteBtn.setBackground(new java.awt.Color(255, 96, 92));
        discountDeleteBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        discountDeleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        discountDeleteBtn.setText("Delete");
        discountDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountDeleteBtnActionPerformed(evt);
            }
        });

        discountTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        discountTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Id", "Discount Type", "Discount Rate (%)"
            }
        ));
        discountTable.setRowHeight(20);
        discountTable.setSelectionBackground(new java.awt.Color(102, 0, 0));
        discountTable.setSelectionForeground(new java.awt.Color(255, 234, 231));
        discountTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                discountTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(discountTable);

        discountId.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        discountId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountIdActionPerformed(evt);
            }
        });
        discountId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                discountIdKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Id :");

        javax.swing.GroupLayout discountLayout = new javax.swing.GroupLayout(discount);
        discount.setLayout(discountLayout);
        discountLayout.setHorizontalGroup(
            discountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(discountLayout.createSequentialGroup()
                .addGroup(discountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(discountLayout.createSequentialGroup()
                        .addGroup(discountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(discountLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(userTopic1, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(discountLayout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addGroup(discountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(discountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(discountType, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(discountLayout.createSequentialGroup()
                                        .addComponent(discountRate, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)
                                        .addComponent(discountSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(discountUpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(discountDeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(discountId, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 131, Short.MAX_VALUE))
                    .addGroup(discountLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2)))
                .addContainerGap())
        );
        discountLayout.setVerticalGroup(
            discountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(discountLayout.createSequentialGroup()
                .addComponent(userTopic1)
                .addGap(30, 30, 30)
                .addGroup(discountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(discountId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(discountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(discountType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(discountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(discountRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(discountSaveBtn)
                    .addComponent(discountUpdateBtn)
                    .addComponent(discountDeleteBtn)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        LayeredPane.add(discount, "card2");

        report.setBackground(new java.awt.Color(255, 255, 255));

        reportTopic.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        reportTopic.setForeground(new java.awt.Color(51, 51, 51));
        reportTopic.setText("Report Information");

        javax.swing.GroupLayout reportLayout = new javax.swing.GroupLayout(report);
        report.setLayout(reportLayout);
        reportLayout.setHorizontalGroup(
            reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(reportTopic, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(415, Short.MAX_VALUE))
        );
        reportLayout.setVerticalGroup(
            reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportLayout.createSequentialGroup()
                .addComponent(reportTopic)
                .addGap(0, 542, Short.MAX_VALUE))
        );

        LayeredPane.add(report, "card2");

        user.setBackground(new java.awt.Color(255, 255, 255));

        userTopic.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        userTopic.setForeground(new java.awt.Color(51, 51, 51));
        userTopic.setText("User Information");

        userId.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userIdActionPerformed(evt);
            }
        });
        userId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                userIdKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("User Name :");

        userEmail.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                userEmailFocusLost(evt);
            }
        });
        userEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userEmailActionPerformed(evt);
            }
        });
        userEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                userEmailKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("First Name :");

        userPhone.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userPhoneActionPerformed(evt);
            }
        });
        userPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userPhoneKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                userPhoneKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Last Name :");

        userFName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userFName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userFNameActionPerformed(evt);
            }
        });
        userFName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                userFNameKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Email :");

        userLName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userLName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userLNameActionPerformed(evt);
            }
        });
        userLName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                userLNameKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Phone No :");

        userSaveBtn.setBackground(new java.awt.Color(0, 202, 78));
        userSaveBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userSaveBtn.setForeground(new java.awt.Color(255, 255, 255));
        userSaveBtn.setText("Save");
        userSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userSaveBtnActionPerformed(evt);
            }
        });

        userUpdateBtn.setBackground(new java.awt.Color(255, 189, 68));
        userUpdateBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userUpdateBtn.setForeground(new java.awt.Color(255, 255, 255));
        userUpdateBtn.setText("Update");
        userUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userUpdateBtnActionPerformed(evt);
            }
        });

        userDeleteBtn.setBackground(new java.awt.Color(255, 96, 92));
        userDeleteBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userDeleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        userDeleteBtn.setText("Delete");
        userDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userDeleteBtnActionPerformed(evt);
            }
        });

        userTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "First Name", "Last Name", "Email", "Phone No"
            }
        ));
        userTable.setRowHeight(20);
        userTable.setSelectionBackground(new java.awt.Color(102, 0, 0));
        userTable.setSelectionForeground(new java.awt.Color(255, 234, 231));
        userTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(userTable);

        userChangePwdBtn.setBackground(new java.awt.Color(255, 189, 68));
        userChangePwdBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userChangePwdBtn.setForeground(new java.awt.Color(255, 255, 255));
        userChangePwdBtn.setText("Change Password");
        userChangePwdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userChangePwdBtnActionPerformed(evt);
            }
        });

        userPassword.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userPasswordActionPerformed(evt);
            }
        });

        pwdLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pwdLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pwdLabel.setText("Password :");

        javax.swing.GroupLayout userLayout = new javax.swing.GroupLayout(user);
        user.setLayout(userLayout);
        userLayout.setHorizontalGroup(
            userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userLayout.createSequentialGroup()
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userLayout.createSequentialGroup()
                        .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(userLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(userTopic, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(userLayout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel6)
                                    .addComponent(pwdLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(userPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(userId, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(userLayout.createSequentialGroup()
                                        .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(userEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(userLName, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(userFName, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(31, 31, 31)
                                        .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(userChangePwdBtn)
                                            .addGroup(userLayout.createSequentialGroup()
                                                .addComponent(userSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(userUpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(userDeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(userLayout.createSequentialGroup()
                                .addGap(168, 168, 168)
                                .addComponent(userPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 174, Short.MAX_VALUE))
                    .addGroup(userLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        userLayout.setVerticalGroup(
            userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userLayout.createSequentialGroup()
                .addComponent(userTopic)
                .addGap(30, 30, 30)
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userLName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(userSaveBtn)
                    .addComponent(userUpdateBtn)
                    .addComponent(userDeleteBtn))
                .addGap(35, 35, 35)
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userChangePwdBtn)
                    .addComponent(userPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pwdLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        LayeredPane.add(user, "card2");

        javax.swing.GroupLayout paneLayout = new javax.swing.GroupLayout(pane);
        pane.setLayout(paneLayout);
        paneLayout.setHorizontalGroup(
            paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(welcomeName, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(minimizeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(LayeredPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        paneLayout.setVerticalGroup(
            paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneLayout.createSequentialGroup()
                .addGroup(paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(closeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(minimizeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(welcomeName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LayeredPane))
        );

        hrLine.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout hrLineLayout = new javax.swing.GroupLayout(hrLine);
        hrLine.setLayout(hrLineLayout);
        hrLineLayout.setHorizontalGroup(
            hrLineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        hrLineLayout.setVerticalGroup(
            hrLineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        logoIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logo_small.png"))); // NOI18N

        logoLabel.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 48)); // NOI18N
        logoLabel.setForeground(new java.awt.Color(255, 255, 255));
        logoLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        logoLabel.setText("HMS");

        copyrights.setForeground(new java.awt.Color(204, 204, 204));
        copyrights.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        copyrights.setText("©Team_DigiMart");

        checkedInPanel.setBackground(new java.awt.Color(102, 0, 0));
        checkedInPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkedInPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                checkedInPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                checkedInPanelMouseExited(evt);
            }
        });

        checkedInIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/checked.png"))); // NOI18N
        checkedInIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        checkedInLabel.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        checkedInLabel.setForeground(new java.awt.Color(255, 255, 255));
        checkedInLabel.setText("Check In");
        checkedInLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout checkedInPanelLayout = new javax.swing.GroupLayout(checkedInPanel);
        checkedInPanel.setLayout(checkedInPanelLayout);
        checkedInPanelLayout.setHorizontalGroup(
            checkedInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkedInPanelLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(checkedInIcon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkedInLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        checkedInPanelLayout.setVerticalGroup(
            checkedInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(checkedInIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(checkedInPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(checkedInLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        checkedOutPanel.setBackground(new java.awt.Color(102, 0, 0));
        checkedOutPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkedOutPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                checkedOutPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                checkedOutPanelMouseExited(evt);
            }
        });

        checkedOutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/checked.png"))); // NOI18N
        checkedOutIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        checkedOutLabel.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        checkedOutLabel.setForeground(new java.awt.Color(255, 255, 255));
        checkedOutLabel.setText("Check Out");
        checkedOutLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout checkedOutPanelLayout = new javax.swing.GroupLayout(checkedOutPanel);
        checkedOutPanel.setLayout(checkedOutPanelLayout);
        checkedOutPanelLayout.setHorizontalGroup(
            checkedOutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkedOutPanelLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(checkedOutIcon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkedOutLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                .addContainerGap())
        );
        checkedOutPanelLayout.setVerticalGroup(
            checkedOutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(checkedOutIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(checkedOutPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(checkedOutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        guestPanel.setBackground(new java.awt.Color(102, 0, 0));
        guestPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guestPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                guestPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                guestPanelMouseExited(evt);
            }
        });

        guestIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/guest.png"))); // NOI18N
        guestIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        guestLabel.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        guestLabel.setForeground(new java.awt.Color(255, 255, 255));
        guestLabel.setText("Guest");
        guestLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout guestPanelLayout = new javax.swing.GroupLayout(guestPanel);
        guestPanel.setLayout(guestPanelLayout);
        guestPanelLayout.setHorizontalGroup(
            guestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guestPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(guestIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(guestLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addContainerGap())
        );
        guestPanelLayout.setVerticalGroup(
            guestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guestPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(guestLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(guestIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        roomPanel.setBackground(new java.awt.Color(102, 0, 0));
        roomPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roomPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                roomPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                roomPanelMouseExited(evt);
            }
        });

        roomLabel.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        roomLabel.setForeground(new java.awt.Color(255, 255, 255));
        roomLabel.setText("Room");
        roomLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        roomIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/room.png"))); // NOI18N
        roomIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout roomPanelLayout = new javax.swing.GroupLayout(roomPanel);
        roomPanel.setLayout(roomPanelLayout);
        roomPanelLayout.setHorizontalGroup(
            roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(roomIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(roomLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addContainerGap())
        );
        roomPanelLayout.setVerticalGroup(
            roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(roomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(roomIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        discountPanel.setBackground(new java.awt.Color(102, 0, 0));
        discountPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                discountPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                discountPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                discountPanelMouseExited(evt);
            }
        });

        discountLabel.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        discountLabel.setForeground(new java.awt.Color(255, 255, 255));
        discountLabel.setText("Discount");
        discountLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        discountIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/discount.png"))); // NOI18N
        discountIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout discountPanelLayout = new javax.swing.GroupLayout(discountPanel);
        discountPanel.setLayout(discountPanelLayout);
        discountPanelLayout.setHorizontalGroup(
            discountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(discountPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(discountIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(discountLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addContainerGap())
        );
        discountPanelLayout.setVerticalGroup(
            discountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(discountPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(discountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(discountIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        reportPanel.setBackground(new java.awt.Color(102, 0, 0));
        reportPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reportPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                reportPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                reportPanelMouseExited(evt);
            }
        });

        reportLabel.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        reportLabel.setForeground(new java.awt.Color(255, 255, 255));
        reportLabel.setText("Report");
        reportLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        reportIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/report.png"))); // NOI18N
        reportIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout reportPanelLayout = new javax.swing.GroupLayout(reportPanel);
        reportPanel.setLayout(reportPanelLayout);
        reportPanelLayout.setHorizontalGroup(
            reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(reportIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(reportLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addContainerGap())
        );
        reportPanelLayout.setVerticalGroup(
            reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(reportLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(reportIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        userPanel.setBackground(new java.awt.Color(102, 0, 0));
        userPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                userPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                userPanelMouseExited(evt);
            }
        });

        userLabel.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        userLabel.setForeground(new java.awt.Color(255, 255, 255));
        userLabel.setText("User");
        userLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        userIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/setting.png"))); // NOI18N
        userIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout userPanelLayout = new javax.swing.GroupLayout(userPanel);
        userPanel.setLayout(userPanelLayout);
        userPanelLayout.setHorizontalGroup(
            userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(userIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(userLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addContainerGap())
        );
        userPanelLayout.setVerticalGroup(
            userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(userLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(userIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        logoutPanel.setBackground(new java.awt.Color(102, 0, 0));
        logoutPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logoutPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logoutPanelMouseExited(evt);
            }
        });

        logoutLabel.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        logoutLabel.setForeground(new java.awt.Color(255, 255, 255));
        logoutLabel.setText("Logout");
        logoutLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        logoutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logout.png"))); // NOI18N
        logoutIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout logoutPanelLayout = new javax.swing.GroupLayout(logoutPanel);
        logoutPanel.setLayout(logoutPanelLayout);
        logoutPanelLayout.setHorizontalGroup(
            logoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoutPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(logoutIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(logoutLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addContainerGap())
        );
        logoutPanelLayout.setVerticalGroup(
            logoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoutPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(logoutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(logoutIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout dashboarddPaneLayout = new javax.swing.GroupLayout(dashboarddPane);
        dashboarddPane.setLayout(dashboarddPaneLayout);
        dashboarddPaneLayout.setHorizontalGroup(
            dashboarddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashboarddPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dashboarddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hrLine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(copyrights, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(checkedInPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(dashboarddPaneLayout.createSequentialGroup()
                        .addGroup(dashboarddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(dashboarddPaneLayout.createSequentialGroup()
                                .addComponent(logoIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(logoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(checkedOutPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(guestPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(roomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(discountPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(reportPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(userPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(logoutPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );
        dashboarddPaneLayout.setVerticalGroup(
            dashboarddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashboarddPaneLayout.createSequentialGroup()
                .addGroup(dashboarddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(dashboarddPaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(dashboarddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(logoIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                            .addComponent(logoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hrLine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(checkedInPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkedOutPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guestPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(roomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(discountPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reportPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(userPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(logoutPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(copyrights))
                    .addGroup(dashboarddPaneLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dashboarddPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dashboarddPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void closeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeBtnMouseClicked
        new Logout().setVisible(true);
    }//GEN-LAST:event_closeBtnMouseClicked

    private void minimizeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeBtnMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minimizeBtnMouseClicked

    private void checkedInPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkedInPanelMouseEntered
        checkedInPanel.setBackground(new java.awt.Color(70, 0, 0));
        checkedInIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/checked_filled.png")));
    }//GEN-LAST:event_checkedInPanelMouseEntered

    private void checkedInPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkedInPanelMouseExited
        checkedInPanel.setBackground(new java.awt.Color(102, 0, 0));
        checkedInIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/checked.png")));
    }//GEN-LAST:event_checkedInPanelMouseExited

    private void reportPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportPanelMouseEntered
        reportPanel.setBackground(new java.awt.Color(70, 0, 0));
        reportIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/report_filled.png")));
    }//GEN-LAST:event_reportPanelMouseEntered

    private void reportPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportPanelMouseExited
        reportPanel.setBackground(new java.awt.Color(102, 0, 0));
        reportIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/report.png")));
    }//GEN-LAST:event_reportPanelMouseExited

    private void checkedOutPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkedOutPanelMouseEntered
        checkedOutPanel.setBackground(new java.awt.Color(70, 0, 0));
        checkedOutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/checked_filled.png")));
    }//GEN-LAST:event_checkedOutPanelMouseEntered

    private void checkedOutPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkedOutPanelMouseExited
        checkedOutPanel.setBackground(new java.awt.Color(102, 0, 0));
        checkedOutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/checked.png")));
    }//GEN-LAST:event_checkedOutPanelMouseExited

    private void guestPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guestPanelMouseEntered
        guestPanel.setBackground(new java.awt.Color(70, 0, 0));
        guestIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/guest_filled.png")));
    }//GEN-LAST:event_guestPanelMouseEntered

    private void guestPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guestPanelMouseExited
        guestPanel.setBackground(new java.awt.Color(102, 0, 0));
        guestIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/guest.png")));
    }//GEN-LAST:event_guestPanelMouseExited

    private void roomPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomPanelMouseEntered
        roomPanel.setBackground(new java.awt.Color(70, 0, 0));
        roomIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/room_filled.png")));
    }//GEN-LAST:event_roomPanelMouseEntered

    private void roomPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomPanelMouseExited
        roomPanel.setBackground(new java.awt.Color(102, 0, 0));
        roomIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/room.png")));
    }//GEN-LAST:event_roomPanelMouseExited

    private void discountPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_discountPanelMouseEntered
        discountPanel.setBackground(new java.awt.Color(70, 0, 0));
        discountIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/discount_filled.png")));
    }//GEN-LAST:event_discountPanelMouseEntered

    private void discountPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_discountPanelMouseExited
        discountPanel.setBackground(new java.awt.Color(102, 0, 0));
        discountIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/discount.png")));
    }//GEN-LAST:event_discountPanelMouseExited

    private void logoutPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutPanelMouseEntered
        logoutPanel.setBackground(new java.awt.Color(70, 0, 0));
        logoutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logout_filled.png")));
    }//GEN-LAST:event_logoutPanelMouseEntered

    private void logoutPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutPanelMouseExited
        logoutPanel.setBackground(new java.awt.Color(102, 0, 0));
        logoutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logout.png")));
    }//GEN-LAST:event_logoutPanelMouseExited

    private void userPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userPanelMouseEntered
        userPanel.setBackground(new java.awt.Color(70, 0, 0));
        userIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/setting_filled.png")));
    }//GEN-LAST:event_userPanelMouseEntered

    private void userPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userPanelMouseExited
        userPanel.setBackground(new java.awt.Color(102, 0, 0));
        userIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/setting.png")));
    }//GEN-LAST:event_userPanelMouseExited

    private void checkedInPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkedInPanelMouseClicked
        panelDefault();
        checkIn.setVisible(true);
                
        viewCheckinDetails();        
    }//GEN-LAST:event_checkedInPanelMouseClicked

    private void checkedOutPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkedOutPanelMouseClicked
        panelDefault();
        checkout.setVisible(true);
    }//GEN-LAST:event_checkedOutPanelMouseClicked

    private void guestPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guestPanelMouseClicked
        panelDefault();
        guest.setVisible(true);
        
        viewGuestDetails();
    }//GEN-LAST:event_guestPanelMouseClicked

    private void roomPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomPanelMouseClicked
        panelDefault();
        room.setVisible(true);
        
        viewRoomDetails();
    }//GEN-LAST:event_roomPanelMouseClicked

    private void discountPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_discountPanelMouseClicked
        panelDefault();
        discount.setVisible(true);
        
        viewDiscountDetails();
    }//GEN-LAST:event_discountPanelMouseClicked

    private void reportPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportPanelMouseClicked
        panelDefault();
        report.setVisible(true);
    }//GEN-LAST:event_reportPanelMouseClicked

    private void userPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userPanelMouseClicked
        panelDefault();
        user.setVisible(true);
        
        viewUserDetails();
    }//GEN-LAST:event_userPanelMouseClicked

    private void logoutPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutPanelMouseClicked
        new Logout().setVisible(true);
    }//GEN-LAST:event_logoutPanelMouseClicked

    private void userIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userIdActionPerformed

    private void userEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userEmailActionPerformed

    private void userPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userPhoneActionPerformed

    private void userFNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userFNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userFNameActionPerformed

    private void userLNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userLNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userLNameActionPerformed

    private void userPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userPasswordActionPerformed

    private void userUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userUpdateBtnActionPerformed
        User user = new User();
        
        String id = this.userId.getText().trim();
        String fName = this.userFName.getText().trim();
        String lName = this.userLName.getText().trim();
        String email = this.userEmail.getText().trim();
        String phone = this.userPhone.getText().trim();
        //String password = this.password.getText().trim();
        
        if(id.isEmpty() || fName.isEmpty() || lName.isEmpty() || email.isEmpty() || phone.isEmpty()){
            new ErrorMsg().showErr("Please fill all the fields...");
        } else {
            user.setId(id);
            user.setfName(fName);
            user.setlName(lName);
            user.setEmail(email);
            user.setPhone(phone);
            //user.setPassword(password);

            user.updateUser(editUserId);
            viewUserDetails();
        }
    }//GEN-LAST:event_userUpdateBtnActionPerformed

    private void userDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userDeleteBtnActionPerformed
        
        conn = obj.connect();
        
        try {
            if(editUserId.isEmpty()){
                new ErrorMsg().showErr("Please select record...");
            } else {
                int a = JOptionPane.showConfirmDialog(null, "Are you sure ?");
                if(a==0){
                    try {
                        cs = conn.prepareCall("{call deleteUserDetails(?)}");
                        cs.setString("username", editUserId);
                        
                        if(cs.executeUpdate()==2){
                            viewUserDetails();
                            new ErrorMsg().showErr("Record deleted successfully...");
                        }
                    } catch (SQLException e) {
                        new ErrorMsg().showErr(e.getMessage());
                    }
                    editUserId = null;
                }
            }
        } catch (HeadlessException e) {
            new ErrorMsg().showErr("Please select record...");
        }
        
        conn = null;
    }//GEN-LAST:event_userDeleteBtnActionPerformed

    private void userTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userTableMouseClicked
        DefaultTableModel model = (DefaultTableModel) userTable.getModel();
        int row = userTable.getSelectedRow();

        editUserId = userTable.getValueAt(row, 0).toString();

        userId.setText(editUserId);
        userFName.setText(userTable.getValueAt(row, 1).toString());
        userLName.setText(userTable.getValueAt(row, 2).toString());
        userEmail.setText(userTable.getValueAt(row, 3).toString());
        userPhone.setText(userTable.getValueAt(row, 4).toString());

        //self deleting disabled
        if(!editUserId.equalsIgnoreCase(Login.id)){
            if(editUserId.substring(0, 3).equalsIgnoreCase("ADM")){
                userUpdateBtn.setVisible(false);
                userDeleteBtn.setVisible(false);
            } else {
                userUpdateBtn.setVisible(true);
                userDeleteBtn.setVisible(true);
            }
            userSaveBtn.setVisible(false);
            pwdLabel.setEnabled(false);
            userPassword.setEnabled(false);
            userChangePwdBtn.setEnabled(false);
        } else {
            userSaveBtn.setVisible(false);
            userUpdateBtn.setVisible(true);
            userDeleteBtn.setVisible(false);
            pwdLabel.setEnabled(true);
            userPassword.setEnabled(true);
            userChangePwdBtn.setEnabled(true);
        }
    }//GEN-LAST:event_userTableMouseClicked

    private void userSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userSaveBtnActionPerformed
        User user = new User();
        
        String id = this.userId.getText().trim();
        String fName = this.userFName.getText().trim();
        String lName = this.userLName.getText().trim();
        String email = this.userEmail.getText().trim();
        String phone = this.userPhone.getText().trim();
        String password = "123";
        
        if(id.isEmpty() || fName.isEmpty() || lName.isEmpty() || email.isEmpty() || phone.isEmpty()){
            new ErrorMsg().showErr("Please fill all the fields...");
        } else {
            user.setId(id);
            user.setfName(fName);
            user.setlName(lName);
            user.setEmail(email);
            user.setPhone(phone);
            user.setPassword(password);

            user.createUser();
            viewUserDetails();
        }
    }//GEN-LAST:event_userSaveBtnActionPerformed

    private void userPhoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userPhoneKeyTyped
        char enter = evt.getKeyChar();
        
        if ((userPhone.getText().length() >= 10 ) || (!(Character.isDigit(enter)))){
            evt.consume();
        }
    }//GEN-LAST:event_userPhoneKeyTyped

    private void userPhoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userPhoneKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_userPhoneKeyPressed

    private void userIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userIdKeyTyped
        if ( userId.getText().length() >= 6 ){
            evt.consume();
        }
    }//GEN-LAST:event_userIdKeyTyped

    private void userChangePwdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userChangePwdBtnActionPerformed
        User user = new User();
        
        String password = this.userPassword.getText().trim();
        
        if(password.isEmpty()){
            new ErrorMsg().showErr("Please enter password...");
        } else {
            user.setPassword(password);

            user.changePassword(editUserId);
            viewUserDetails();
        }
    }//GEN-LAST:event_userChangePwdBtnActionPerformed

    private void discountTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_discountTypeActionPerformed

    private void discountTypeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountTypeKeyTyped
        if (discountType.getText().length() >= 20){
            evt.consume();
        }
    }//GEN-LAST:event_discountTypeKeyTyped

    private void discountRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_discountRateActionPerformed

    private void discountSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountSaveBtnActionPerformed
        Discount discount = new Discount();
        
        String id = this.discountId.getText().trim();
        String type = this.discountType.getText().trim();
        String rate = this.discountRate.getText().trim();
        
        if(id.isEmpty() || type.isEmpty() || rate.isEmpty()){
            new ErrorMsg().showErr("Please fill all the fields...");
        } else {
            discount.setId(id);
            discount.setType(type);
            discount.setRate(rate);

            discount.createDiscount();
            viewDiscountDetails();
        }
    }//GEN-LAST:event_discountSaveBtnActionPerformed

    private void discountUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountUpdateBtnActionPerformed
        Discount discount = new Discount();
        
        String id = this.discountId.getText().trim();
        String type = this.discountType.getText().trim();
        String rate = this.discountRate.getText().trim();
        
        if(id.isEmpty() || type.isEmpty() || rate.isEmpty()){
            new ErrorMsg().showErr("Please fill all the fields...");
        } else {
            discount.setId(id);
            discount.setType(type);
            discount.setRate(rate);

            discount.updateDiscount(editDiscountId);
            viewDiscountDetails();
        }
    }//GEN-LAST:event_discountUpdateBtnActionPerformed

    private void discountDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountDeleteBtnActionPerformed
        conn = obj.connect();
        
        try {
            if(editDiscountId.isEmpty()){
                new ErrorMsg().showErr("Please select record...");
            } else {
                int a = JOptionPane.showConfirmDialog(null, "Are you sure ?");
                if(a==0){
                    try {
                        cs = conn.prepareCall("{call deleteDiscountDetails(?)}");
                        cs.setString("dId", editDiscountId);
                        
                        if(cs.executeUpdate()==1){
                            viewDiscountDetails();
                            new ErrorMsg().showErr("Record deleted successfully...");
                        }
                    } catch (SQLException e) {
                        new ErrorMsg().showErr(e.getMessage());
                    }
                    editDiscountId = null;
                }
            }
        } catch (HeadlessException e) {
            new ErrorMsg().showErr("Please select record...");
        }
        
        conn = null;
    }//GEN-LAST:event_discountDeleteBtnActionPerformed

    private void discountTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_discountTableMouseClicked
        DefaultTableModel model = (DefaultTableModel) userTable.getModel();
        int row = discountTable.getSelectedRow();

        editDiscountId = discountTable.getValueAt(row, 0).toString();

        discountId.setText(editDiscountId);
        discountType.setText(discountTable.getValueAt(row, 1).toString());
        discountRate.setText(discountTable.getValueAt(row, 2).toString());

        discountSaveBtn.setVisible(false);
        discountUpdateBtn.setVisible(true);
        discountDeleteBtn.setVisible(true);
    }//GEN-LAST:event_discountTableMouseClicked

    private void discountIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_discountIdActionPerformed

    private void discountIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountIdKeyTyped
        char enter = evt.getKeyChar();
        
        if ((!(Character.isDigit(enter)))){
            evt.consume();
        }
    }//GEN-LAST:event_discountIdKeyTyped

    private void discountRateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountRateKeyTyped
        char enter = evt.getKeyChar();
        
        if ((discountRate.getText().length() >= 3 ) || (!(Character.isDigit(enter)))){
            evt.consume();
        }
    }//GEN-LAST:event_discountRateKeyTyped

    private void discountRateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountRateKeyPressed
        
    }//GEN-LAST:event_discountRateKeyPressed

    private void roomIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomIdActionPerformed

    private void roomIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_roomIdKeyTyped
        char enter = evt.getKeyChar();
        
        if ((!(Character.isDigit(enter)))){
            evt.consume();
        }
    }//GEN-LAST:event_roomIdKeyTyped

    private void roomOccupancyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomOccupancyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomOccupancyActionPerformed

    private void roomRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomRateActionPerformed

    private void roomSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomSaveBtnActionPerformed
        Room room = new Room();
        
        String roomId = this.roomId.getText().trim();
        String roomType = this.roomType.getSelectedItem().toString();
        
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{call `getRoomTypeId`(?)}");
            cs.setString("rType", roomType);
            rs = cs.executeQuery();

            while(rs.next()){
                roomType = rs.getString("id");
            }

        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
            //JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
        conn = null;
        
        String roomRate = this.roomRate.getText().trim();
        String roomOccupancy = this.roomOccupancy.getText().trim();
        
        if(roomId.isEmpty() || roomRate.isEmpty() || roomOccupancy.isEmpty()){
            new ErrorMsg().showErr("Please fill all the fields...");
        } else {
            room.setRoomId(roomId);
            room.setRoomType(roomType);
            room.setRoomRate(roomRate);
            room.setRoomOccupancy(roomOccupancy);

            room.createRoom();
            viewRoomDetails();
        }
    }//GEN-LAST:event_roomSaveBtnActionPerformed

    private void roomUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomUpdateBtnActionPerformed
        Room room = new Room();
        
        String roomId = this.roomId.getText().trim();
        String roomType = this.roomType.getSelectedItem().toString();
        
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{call `getRoomTypeId`(?)}");
            cs.setString("rType", roomType);
            rs = cs.executeQuery();

            while(rs.next()){
                roomType = rs.getString("id");
            }

        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
            //JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
        conn = null;
        
        String roomRate = this.roomRate.getText().trim();
        String roomOccupancy = this.roomOccupancy.getText().trim();
        
        if(roomId.isEmpty() || roomRate.isEmpty() || roomOccupancy.isEmpty()){
            new ErrorMsg().showErr("Please fill all the fields...");
        } else {
            room.setRoomId(roomId);
            room.setRoomType(roomType);
            room.setRoomRate(roomRate);
            room.setRoomOccupancy(roomOccupancy);

            room.updateRoom(editRoomId);
            viewRoomDetails();
        }
    }//GEN-LAST:event_roomUpdateBtnActionPerformed

    private void roomDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomDeleteBtnActionPerformed
        conn = obj.connect();
        
        try {
            if(editRoomId.isEmpty()){
                new ErrorMsg().showErr("Please select record...");
            } else {
                int a = JOptionPane.showConfirmDialog(null, "Are you sure ?");
                if(a==0){
                    try {
                        cs = conn.prepareCall("{call deleteRoomDetails(?)}");
                        cs.setString("rId", editRoomId);
                        
                        if(cs.executeUpdate()==1){
                            viewRoomDetails();
                            new ErrorMsg().showErr("Record deleted successfully...");
                        }
                    } catch (SQLException e) {
                        new ErrorMsg().showErr(e.getMessage());
                    }
                    editRoomId = null;
                }
            }
        } catch (HeadlessException e) {
            new ErrorMsg().showErr("Please select record...");
        }
        
        conn = null;
    }//GEN-LAST:event_roomDeleteBtnActionPerformed

    private void roomTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomTableMouseClicked
        int row = roomTable.getSelectedRow();

        editRoomId = roomTable.getValueAt(row, 0).toString();

        roomId.setText(editRoomId);
        roomType.setSelectedItem(roomTable.getValueAt(row, 1).toString());
        roomRate.setText(roomTable.getValueAt(row, 2).toString());
        roomOccupancy.setText(roomTable.getValueAt(row, 3).toString());

        roomSaveBtn.setVisible(false);
        roomUpdateBtn.setVisible(true);
        roomDeleteBtn.setVisible(true);
    }//GEN-LAST:event_roomTableMouseClicked

    private void roomRateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_roomRateKeyTyped
        char enter = evt.getKeyChar();
        
        if ((!(Character.isDigit(enter)))){
            evt.consume();
        }
    }//GEN-LAST:event_roomRateKeyTyped

    private void roomOccupancyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_roomOccupancyKeyTyped
        char enter = evt.getKeyChar();
        
        if ((!(Character.isDigit(enter)))){
            evt.consume();
        }
    }//GEN-LAST:event_roomOccupancyKeyTyped

    private void guestIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guestIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_guestIdActionPerformed

    private void guestIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_guestIdKeyTyped
        if (guestId.getText().length() >= 12){
            evt.consume();
        }
    }//GEN-LAST:event_guestIdKeyTyped

    private void guestAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guestAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_guestAddressActionPerformed

    private void guestEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guestEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_guestEmailActionPerformed

    private void guestEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_guestEmailKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_guestEmailKeyPressed

    private void guestEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_guestEmailKeyTyped
        if (guestEmail.getText().length() >= 100){
            evt.consume();
        }
    }//GEN-LAST:event_guestEmailKeyTyped

    private void guestFNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guestFNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_guestFNameActionPerformed

    private void guestLNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guestLNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_guestLNameActionPerformed

    private void guestSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guestSaveBtnActionPerformed
        Guest guest = new Guest();
        
        String id = this.guestId.getText().trim();
        String fName = this.guestFName.getText().trim();
        String lName = this.guestLName.getText().trim();
        String address = this.guestAddress.getText().trim();
        String email = this.guestEmail.getText().trim();
        String phone = this.guestPhone.getText().trim();
        
        if(id.isEmpty() || fName.isEmpty() || lName.isEmpty() || address.isEmpty() || email.isEmpty() || phone.isEmpty()){
            new ErrorMsg().showErr("Please fill all the fields...");
        } else {
            guest.setId(id);
            guest.setfName(fName);
            guest.setlName(lName);
            guest.setAddress(address);
            guest.setEmail(email);
            guest.setPhone(phone);

            guest.createGuest();
            viewGuestDetails();
        }
    }//GEN-LAST:event_guestSaveBtnActionPerformed

    private void guestUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guestUpdateBtnActionPerformed
        Guest guest = new Guest();
        
        String fName = this.guestFName.getText().trim();
        String lName = this.guestLName.getText().trim();
        String address = this.guestAddress.getText().trim();
        String email = this.guestEmail.getText().trim();
        String phone = this.guestPhone.getText().trim();
        
        if(fName.isEmpty() || lName.isEmpty() || address.isEmpty() || email.isEmpty() || phone.isEmpty()){
            new ErrorMsg().showErr("Please fill all the fields...");
        } else {
            guest.setId(editGuestId);
            guest.setfName(fName);
            guest.setlName(lName);
            guest.setAddress(address);
            guest.setEmail(email);
            guest.setPhone(phone);

            guest.updateGuest(editGuestId);
            viewGuestDetails();
        }
    }//GEN-LAST:event_guestUpdateBtnActionPerformed

    private void guestDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guestDeleteBtnActionPerformed
        conn = obj.connect();
        
        try {
            if(editGuestId.isEmpty()){
                new ErrorMsg().showErr("Please select record...");
            } else {
                int a = JOptionPane.showConfirmDialog(null, "Are you sure ?");
                if(a==0){
                    try {
                        cs = conn.prepareCall("{call deleteGuestDetails(?)}");
                        cs.setString("gId", editGuestId);
                        
                        if(cs.executeUpdate()==1){
                            viewGuestDetails();
                            new ErrorMsg().showErr("Record deleted successfully...");
                        }
                    } catch (SQLException e) {
                        new ErrorMsg().showErr(e.getMessage());
                    }
                    editGuestId = null;
                }
            }
        } catch (HeadlessException e) {
            new ErrorMsg().showErr("Please select record...");
        }
        
        conn = null;
    }//GEN-LAST:event_guestDeleteBtnActionPerformed

    private void guestTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guestTableMouseClicked
        DefaultTableModel model = (DefaultTableModel) guestTable.getModel();
        int row = guestTable.getSelectedRow();

        editGuestId = guestTable.getValueAt(row, 0).toString();

        guestId.setText(editGuestId);
        guestFName.setText(guestTable.getValueAt(row, 1).toString());
        guestLName.setText(guestTable.getValueAt(row, 2).toString());
        guestAddress.setText(guestTable.getValueAt(row, 3).toString());
        guestEmail.setText(guestTable.getValueAt(row, 4).toString());
        guestPhone.setText(guestTable.getValueAt(row, 5).toString());

        guestSaveBtn.setVisible(false);
        guestUpdateBtn.setVisible(true);
        guestDeleteBtn.setVisible(true);
    }//GEN-LAST:event_guestTableMouseClicked

    private void guestPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guestPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_guestPhoneActionPerformed

    private void checkinIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkinIdActionPerformed

    private void checkinIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkinIdKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_checkinIdKeyTyped

    private void checkinRoomRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinRoomRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkinRoomRateActionPerformed

    private void checkinSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinSaveBtnActionPerformed
        CheckIn checkIn = new CheckIn();
        
        String id = checkinId.getText().trim();
        String guestId = checkinGuestId.getSelectedItem().toString().trim();
        String roomId = checkinRoomId.getSelectedItem().toString().trim();
        String checkInDate = checkinCheckInDate.getText().trim().trim();
        String checkOutDate = dateFormat.format(checkinCheckOutDate.getDate()).toString().trim();
        String discountId = checkinDiscountType.getSelectedItem().toString().trim();
        
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{call `getDiscountTypeId`(?)}");
            cs.setString("dType", discountId);
            rs = cs.executeQuery();

            while(rs.next()){
                discountId = rs.getString("id");
            }

        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
            //JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
        conn = null;
        
        String advancePayment = checkinAdvancePayment.getText().trim();
        String totalBalance = checkinTotalBalance.getText().trim();
        
        if(id.isEmpty() || guestId.isEmpty() || roomId.isEmpty() || checkInDate.isEmpty() || checkOutDate.isEmpty() || advancePayment.isEmpty() || totalBalance.isEmpty()){
            new ErrorMsg().showErr("Please fill all the fields...");
        } else {
            checkIn.setId(id);
            checkIn.setGuestId(guestId);
            checkIn.setRoomId(roomId);
            checkIn.setCheckInDate(checkInDate);
            checkIn.setCheckOutDate(checkOutDate);
            checkIn.setDiscountId(discountId);
            checkIn.setAdvancePayment(advancePayment);
            checkIn.setTotalBalance(totalBalance);

            checkIn.createCheckIn();
            viewCheckinDetails();
        }
    }//GEN-LAST:event_checkinSaveBtnActionPerformed

    private void checkinUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinUpdateBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkinUpdateBtnActionPerformed

    private void checkinDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinDeleteBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkinDeleteBtnActionPerformed

    private void userFNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userFNameKeyTyped
        if (userFName.getText().length() >= 20){
            evt.consume();
        }
    }//GEN-LAST:event_userFNameKeyTyped

    private void userLNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userLNameKeyTyped
        if (userLName.getText().length() >= 20){
            evt.consume();
        }
    }//GEN-LAST:event_userLNameKeyTyped

    private void userEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userEmailKeyTyped
        if (userEmail.getText().length() >= 100){
            evt.consume();
        }
    }//GEN-LAST:event_userEmailKeyTyped

    private void guestFNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_guestFNameKeyTyped
        if (guestFName.getText().length() >= 20){
            evt.consume();
        }
    }//GEN-LAST:event_guestFNameKeyTyped

    private void guestLNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_guestLNameKeyTyped
        if (guestLName.getText().length() >= 20){
            evt.consume();
        }
    }//GEN-LAST:event_guestLNameKeyTyped

    private void guestAddressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_guestAddressKeyTyped
        if (guestAddress.getText().length() >= 200){
            evt.consume();
        }
    }//GEN-LAST:event_guestAddressKeyTyped

    private void guestPhoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_guestPhoneKeyTyped
        char enter = evt.getKeyChar();
        
        if ((guestPhone.getText().length() >= 10 ) || (!(Character.isDigit(enter)))){
            evt.consume();
        }
    }//GEN-LAST:event_guestPhoneKeyTyped

    private void guestEmailMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guestEmailMouseReleased
        
    }//GEN-LAST:event_guestEmailMouseReleased

    private void guestEmailMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guestEmailMouseExited
        
    }//GEN-LAST:event_guestEmailMouseExited

    private void guestEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_guestEmailFocusLost
        if (guestEmail.getText().length() != 0){
            if (!(Pattern.matches("^[a-zA-Z0-9]+[@]{1}+[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+$", guestEmail.getText()))) {
                JOptionPane.showMessageDialog(null, "Please enter a valid email", "Error", JOptionPane.ERROR_MESSAGE);
                guestEmail.requestFocus();
            }
        }
    }//GEN-LAST:event_guestEmailFocusLost

    private void userEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userEmailFocusLost
        if (userEmail.getText().length() != 0){
            if (!(Pattern.matches("^[a-zA-Z0-9]+[@]{1}+[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+$", userEmail.getText()))) {
                JOptionPane.showMessageDialog(null, "Please enter a valid email", "Error", JOptionPane.ERROR_MESSAGE);
                userEmail.requestFocus();
            }
        }
    }//GEN-LAST:event_userEmailFocusLost

    private void checkinNoOfOccupancyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinNoOfOccupancyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkinNoOfOccupancyActionPerformed

    private void checkinRoomTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinRoomTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkinRoomTypeActionPerformed

    private void checkinNoOfDaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinNoOfDaysActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkinNoOfDaysActionPerformed

    private void checkinDiscountRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinDiscountRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkinDiscountRateActionPerformed

    private void checkinSubTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinSubTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkinSubTotalActionPerformed

    private void checkinTotalBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinTotalBalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkinTotalBalanceActionPerformed

    private void checkinPendingBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinPendingBalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkinPendingBalanceActionPerformed

    private void checkinRoomIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinRoomIdActionPerformed
        
        viewCheckinRoomDetails();
    }//GEN-LAST:event_checkinRoomIdActionPerformed

    private void checkinCheckOutDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_checkinCheckOutDatePropertyChange
        
        try {
            Date startDate = dateFormat.parse(dateFormat.format(dateFormat.parse(today)));
            Date endDate = dateFormat.parse(dateFormat.format(checkinCheckOutDate.getDate()));
            
            long diff = endDate.getTime() - startDate.getTime();
            
            int diffDays = (int) (diff / (24 * 60 * 60 * 1000));
            
            if(diffDays > 0){
                checkinNoOfDays.setText(String.valueOf(diffDays));
                calculateBillStep1();
                
                checkinAdvancePayment.setEnabled(true);
                checkinDiscountType.setEnabled(true);
            } else {
                checkinCheckOutDate.setDate(null);
                checkinNoOfDays.setText(null);
                
                checkinAdvancePayment.setEnabled(false);
                checkinDiscountType.setEnabled(false);
                
                new ErrorMsg().showErr("Please enter a date after today...");
            }
            
        } catch (Exception e) {
        }

    }//GEN-LAST:event_checkinCheckOutDatePropertyChange

    private void checkinCheckInDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinCheckInDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkinCheckInDateActionPerformed

    private void checkinDiscountTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinDiscountTypeActionPerformed
        viewCheckinDiscountDetails();
    }//GEN-LAST:event_checkinDiscountTypeActionPerformed

    private void checkinAdvancePaymentKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkinAdvancePaymentKeyTyped
        char enter = evt.getKeyChar();

        if (!(Character.isDigit(enter))){
            evt.consume();
        }
    }//GEN-LAST:event_checkinAdvancePaymentKeyTyped

    private void checkinAdvancePaymentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkinAdvancePaymentKeyReleased
        try {
            if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
                if(checkinAdvancePayment.getText().length() != 0){
                    calculateBillStep2();
                } else {
                    checkinPendingBalance.setText(null);
                }
            } else {
                calculateBillStep2();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_checkinAdvancePaymentKeyReleased

    private void checkinDiscountRateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkinDiscountRateKeyTyped
        
    }//GEN-LAST:event_checkinDiscountRateKeyTyped

    private void guestPhoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_guestPhoneFocusLost
        
    }//GEN-LAST:event_guestPhoneFocusLost

    private void checkinGuestIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinGuestIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkinGuestIdActionPerformed

    private void panelDefault(){
        checkIn.setVisible(false);
        checkout.setVisible(false);
        guest.setVisible(false);
        room.setVisible(false);
        discount.setVisible(false);
        report.setVisible(false);
        user.setVisible(false);
    }
    
    public void viewUserDetails(){
        
        conn = obj.connect();
        
        //cashier no need next user id
        if(Login.role.equalsIgnoreCase("cashier")){
            userId.setText(null);
        } else {
            String lastId = "CSR000";

            try {
                String sql = "CALL `lastId`()";
                ps = conn.prepareCall(sql);
                rs = ps.executeQuery();

                while(rs.next()){
                    lastId = rs.getString("id");
                }

            } catch (SQLException e) {
                new ErrorMsg().showErr(e.getMessage());
                //JOptionPane.showMessageDialog(null, e.getMessage());
            }

            int nextId = Integer.valueOf(lastId.substring(3, 6))+1;

            userId.setText("CSR"+String.format("%03d", nextId));
        }
            
        userFName.setText(null);
        userLName.setText(null);
        userEmail.setText(null);
        userPhone.setText(null);
        userPassword.setText(null);
        
        //cashier cannot create user profile
        if(Login.role.equalsIgnoreCase("cashier")){
            userSaveBtn.setVisible(false);
        } else {
            userSaveBtn.setVisible(true);
        }
        
        userUpdateBtn.setVisible(false);
        userDeleteBtn.setVisible(false);
        
        pwdLabel.setEnabled(false);
        userPassword.setEnabled(false);
        userChangePwdBtn.setEnabled(false);
        
        if(Login.role.equalsIgnoreCase("admin")){
            try {
                cs = conn.prepareCall("{CALL `viewUserDetails`()}");
                rs = cs.executeQuery();

                userTable.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
                new ErrorMsg().showErr(e.getMessage());
                //JOptionPane.showMessageDialog(null, e.getMessage());
            }
        } else {
            try {
                cs = conn.prepareCall("{CALL `viewSelfDetails`(?)}");
                cs.setString("username", Login.id);
                rs = cs.executeQuery();

                userTable.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
                new ErrorMsg().showErr(e.getMessage());
                //JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
        
        conn = null;
        
    }
    
    public void viewDiscountDetails(){
        
        conn = obj.connect();
        
        String lastId = "0";

        try {
            String sql = "CALL `lastDiscountId`()";
            ps = conn.prepareCall(sql);
            rs = ps.executeQuery();

            while(rs.next()){
                lastId = rs.getString("id");
            }

        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
            //JOptionPane.showMessageDialog(null, e.getMessage());
        }

        int nextId = Integer.valueOf(lastId)+1;

        discountId.setText(String.format("%d", nextId));
        discountType.setText(null);
        discountRate.setText(null);
        
        discountSaveBtn.setVisible(true);
        discountUpdateBtn.setVisible(false);
        discountDeleteBtn.setVisible(false);
        
        try {
                cs = conn.prepareCall("{CALL `viewDiscountDetails`()}");
                rs = cs.executeQuery();

                discountTable.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
                new ErrorMsg().showErr(e.getMessage());
                //JOptionPane.showMessageDialog(null, e.getMessage());
            }
        
        conn = null;
        
    }
    
    public void viewRoomDetails(){
        
        comboBoxRoomType();
        
        conn = obj.connect();
        
        String lastId = "0";

        try {
            String sql = "CALL `lastRoomId`()";
            ps = conn.prepareCall(sql);
            rs = ps.executeQuery();

            while(rs.next()){
                lastId = rs.getString("id");
            }

        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
            //JOptionPane.showMessageDialog(null, e.getMessage());
        }

        int nextId = Integer.valueOf(lastId)+1;

        roomId.setText(String.format("%d", nextId));
        roomType.setSelectedIndex(0);
        roomRate.setText(null);
        roomOccupancy.setText(null);
        
        roomSaveBtn.setVisible(true);
        roomUpdateBtn.setVisible(false);
        roomDeleteBtn.setVisible(false);
        
        try {
                cs = conn.prepareCall("{CALL `viewRoomDetails`()}");
                rs = cs.executeQuery();

                roomTable.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
                new ErrorMsg().showErr(e.getMessage());
                //JOptionPane.showMessageDialog(null, e.getMessage());
            }
        
        conn = null;
        
    }
    
    public void viewGuestDetails(){
        
        conn = obj.connect();
        
        guestId.setText(null);
        guestFName.setText(null);
        guestLName.setText(null);
        guestAddress.setText(null);
        guestEmail.setText(null);
        guestPhone.setText(null);
        
        guestSaveBtn.setVisible(true);
        guestUpdateBtn.setVisible(false);
        guestDeleteBtn.setVisible(false);
        
        try {
                cs = conn.prepareCall("{CALL `viewGuestDetails`()}");
                rs = cs.executeQuery();

                guestTable.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
                new ErrorMsg().showErr(e.getMessage());
                //JOptionPane.showMessageDialog(null, e.getMessage());
            }
        
        conn = null;
        
    }
    
    public void viewCheckinDetails(){
        
        comboBoxCheckInRoomID();
        comboBoxCheckInGuestId();
        comboBoxCheckInDiscountType();
        
        conn = obj.connect();
        
        String lastId = "0";

        try {
            String sql = "CALL `lastTransactionId`()";
            ps = conn.prepareCall(sql);
            rs = ps.executeQuery();

            while(rs.next()){
                lastId = rs.getString("id");
            }

        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
            //JOptionPane.showMessageDialog(null, e.getMessage());
        }

        int nextId = Integer.valueOf(lastId)+1;

        checkinId.setText(String.format("%d", nextId));
        checkinGuestId.setSelectedIndex(0);
        checkinRoomId.setSelectedIndex(0);
        checkinRoomType.setText(null);
        checkinRoomRate.setText(null);
        checkinNoOfOccupancy.setText(null);
        checkinCheckInDate.setText(today);
        checkinCheckOutDate.setDate(null);
        checkinCheckOutDate.setEnabled(false);
        checkinNoOfDays.setText(null);
        checkinDiscountType.setSelectedIndex(0);
        checkinDiscountType.setEnabled(false);
        checkinDiscountRate.setText(null);
        checkinSubTotal.setText(null);
        checkinAdvancePayment.setText(null);
        checkinAdvancePayment.setEnabled(false);
        checkinTotalBalance.setText(null);
        checkinPendingBalance.setText(null);
        
        checkinSaveBtn.setVisible(true);
        checkinUpdateBtn.setVisible(false);
        checkinDeleteBtn.setVisible(false);
        
        /*try {
                cs = conn.prepareCall("{CALL `viewGuestDetails`()}");
                rs = cs.executeQuery();

                //guestTable.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
                new ErrorMsg().showErr(e.getMessage());
                //JOptionPane.showMessageDialog(null, e.getMessage());
            }*/
        
        conn = null;
        
    }
    
    public void comboBoxRoomType(){
        
        try {
            roomType.removeAllItems();
        } catch (Exception e) {
        }
        
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{CALL `roomTypeDetails`()}");
            rs = cs.executeQuery();
            
            while(rs.next()){
                roomType.addItem(rs.getString("type"));
            }
            
        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
        }
        
        conn = null;
    }
    
    public void comboBoxCheckInGuestId(){
        
        try {
            checkinGuestId.removeAllItems();
            checkinGuestId.addItem("");
        } catch (Exception e) {
        }
        
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{CALL `viewGuestDetails`()}");
            rs = cs.executeQuery();
            
            while(rs.next()){
                checkinGuestId.addItem(rs.getString("Id"));
            }
            
        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
        }
        
        conn = null;
    }
    
    public void comboBoxCheckInRoomID(){
        
        try {
            checkinRoomId.removeAllItems();
            checkinRoomId.addItem("");
        } catch (Exception e) {
        }
        
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{CALL `roomIdDetails`()}");
            rs = cs.executeQuery();
            
            while(rs.next()){
                checkinRoomId.addItem(rs.getString("id"));
                //checkinRoomId.addItem(rs.getString("id") + " - " + rs.getString("type"));
            }
            
        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
        }
        
        conn = null;
    }
    
    public void comboBoxCheckInDiscountType(){
        
        try {
            checkinDiscountType.removeAllItems();
            checkinDiscountType.addItem("");
        } catch (Exception e) {
        }
        
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{CALL `discountTypeDetails`()}");
            rs = cs.executeQuery();
            
            while(rs.next()){
                checkinDiscountType.addItem(rs.getString("type"));
            }
            
        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
        }
        
        conn = null;
    }
    
    public void viewCheckinRoomDetails() {
        
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{CALL `roomIdDetails`()}");
            rs = cs.executeQuery();
            
            while(rs.next()){
                if(checkinRoomId.getSelectedItem().toString().equals(rs.getString("id"))){
                    checkinRoomType.setText(rs.getString("type"));
                    checkinRoomRate.setText(rs.getString("rate"));
                    checkinNoOfOccupancy.setText(rs.getString("noOfOccupancy"));
                    
                    checkinCheckOutDate.setEnabled(true);
                    
                    break;
                } else {
                    checkinRoomType.setText(null);
                    checkinRoomRate.setText(null);
                    checkinNoOfOccupancy.setText(null);
                    
                    checkinCheckOutDate.setEnabled(false);
                }
            }
            
        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
        }
        
        conn = null;
        
    }
    
    public void viewCheckinDiscountDetails() {
                
        conn = obj.connect();
        
        try {
            cs = conn.prepareCall("{CALL `discountTypeDetails`()}");
            rs = cs.executeQuery();
            
            while(rs.next()){
                if(checkinDiscountType.getSelectedItem().toString().equals(rs.getString("type"))){
                    
                    int discountRate = Integer.valueOf(rs.getString("rate"));
                    int subTotal = Integer.valueOf(checkinSubTotal.getText());
        
                    discountRate = subTotal*discountRate/100;
                    
                    checkinDiscountRate.setText(String.valueOf(discountRate));
                    
                    subTotal = subTotal - discountRate;
                    
                    checkinTotalBalance.setText(String.valueOf(subTotal));
                    if(checkinPendingBalance.getText().length() > 0){
                        checkinPendingBalance.setText(String.valueOf(Integer.valueOf(checkinPendingBalance.getText())-discountRate));
                    }
                    
                    break;
                } else {
                    checkinDiscountRate.setText(null);
                    checkinTotalBalance.setText(checkinSubTotal.getText());
                }
            }
            
        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
        }
        
        conn = null;
        
    }
    
    public void calculateBillStep1() {
        
        int roomrate = Integer.parseInt(checkinRoomRate.getText());        
        int noOfDays = Integer.parseInt(checkinNoOfDays.getText());
        
        int subTotal = roomrate * noOfDays;
        int totalBalance = subTotal;
        
        checkinSubTotal.setText(String.valueOf(subTotal));
        checkinTotalBalance.setText(String.valueOf(totalBalance));
    }
    
    public void calculateBillStep2() {
        try {
            if (Integer.parseInt(checkinTotalBalance.getText()) < Integer.parseInt(checkinAdvancePayment.getText())){
                checkinAdvancePayment.setText(checkinAdvancePayment.getText().substring(0,checkinAdvancePayment.getText().length()-1));
            } else {
                int totalBalance = Integer.parseInt(checkinTotalBalance.getText());        
                int advancePayment;

                if(checkinAdvancePayment.getText().length() <= 0){
                    advancePayment = 0;
                } else {
                    advancePayment = Integer.parseInt(checkinAdvancePayment.getText());
                }

                int pendingBalance = totalBalance - advancePayment;

                checkinPendingBalance.setText(String.valueOf(pendingBalance));
            }
        } catch (Exception e) {
            checkinAdvancePayment.setText(checkinAdvancePayment.getText().substring(0,checkinTotalBalance.getText().length()-1));
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CashierDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CashierDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CashierDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CashierDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CashierDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLayeredPane LayeredPane;
    private javax.swing.JPanel checkIn;
    private javax.swing.JLabel checkOutTopic;
    private javax.swing.JLabel checkedInIcon;
    private javax.swing.JLabel checkedInLabel;
    private javax.swing.JPanel checkedInPanel;
    private javax.swing.JLabel checkedOutIcon;
    private javax.swing.JLabel checkedOutLabel;
    private javax.swing.JPanel checkedOutPanel;
    private javax.swing.JTextField checkinAdvancePayment;
    private javax.swing.JTextField checkinCheckInDate;
    private com.toedter.calendar.JDateChooser checkinCheckOutDate;
    private javax.swing.JButton checkinDeleteBtn;
    private javax.swing.JTextField checkinDiscountRate;
    private javax.swing.JComboBox<String> checkinDiscountType;
    private javax.swing.JComboBox<String> checkinGuestId;
    private javax.swing.JTextField checkinId;
    private javax.swing.JTextField checkinNoOfDays;
    private javax.swing.JTextField checkinNoOfOccupancy;
    private javax.swing.JTextField checkinPendingBalance;
    private javax.swing.JComboBox<String> checkinRoomId;
    private javax.swing.JTextField checkinRoomRate;
    private javax.swing.JTextField checkinRoomType;
    private javax.swing.JButton checkinSaveBtn;
    private javax.swing.JTextField checkinSubTotal;
    private javax.swing.JTextField checkinTotalBalance;
    private javax.swing.JButton checkinUpdateBtn;
    private javax.swing.JPanel checkout;
    private javax.swing.JLabel closeBtn;
    private javax.swing.JLabel copyrights;
    private javax.swing.JPanel dashboarddPane;
    private static javax.swing.JLabel date;
    private javax.swing.JPanel discount;
    private javax.swing.JButton discountDeleteBtn;
    private javax.swing.JLabel discountIcon;
    private javax.swing.JTextField discountId;
    private javax.swing.JLabel discountLabel;
    private javax.swing.JPanel discountPanel;
    private javax.swing.JTextField discountRate;
    private javax.swing.JButton discountSaveBtn;
    private javax.swing.JTable discountTable;
    private javax.swing.JTextField discountType;
    private javax.swing.JButton discountUpdateBtn;
    private javax.swing.JPanel guest;
    private javax.swing.JTextField guestAddress;
    private javax.swing.JButton guestDeleteBtn;
    private javax.swing.JTextField guestEmail;
    private javax.swing.JTextField guestFName;
    private javax.swing.JLabel guestIcon;
    private javax.swing.JTextField guestId;
    private javax.swing.JTextField guestLName;
    private javax.swing.JLabel guestLabel;
    private javax.swing.JPanel guestPanel;
    private javax.swing.JTextField guestPhone;
    private javax.swing.JButton guestSaveBtn;
    private javax.swing.JTable guestTable;
    private javax.swing.JButton guestUpdateBtn;
    private javax.swing.JPanel hrLine;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel logoIcon;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JLabel logoutIcon;
    private javax.swing.JLabel logoutLabel;
    private javax.swing.JPanel logoutPanel;
    private javax.swing.JLabel minimizeBtn;
    private javax.swing.JPanel pane;
    private javax.swing.JLabel pwdLabel;
    private javax.swing.JLabel pwdLabel1;
    private javax.swing.JPanel report;
    private javax.swing.JLabel reportIcon;
    private javax.swing.JLabel reportLabel;
    private javax.swing.JPanel reportPanel;
    private javax.swing.JLabel reportTopic;
    private javax.swing.JPanel room;
    private javax.swing.JButton roomDeleteBtn;
    private javax.swing.JLabel roomIcon;
    private javax.swing.JTextField roomId;
    private javax.swing.JLabel roomLabel;
    private javax.swing.JTextField roomOccupancy;
    private javax.swing.JPanel roomPanel;
    private javax.swing.JTextField roomRate;
    private javax.swing.JButton roomSaveBtn;
    private javax.swing.JTable roomTable;
    private javax.swing.JComboBox<String> roomType;
    private javax.swing.JButton roomUpdateBtn;
    private javax.swing.JPanel user;
    private javax.swing.JButton userChangePwdBtn;
    private javax.swing.JButton userDeleteBtn;
    private javax.swing.JTextField userEmail;
    private javax.swing.JTextField userFName;
    private javax.swing.JLabel userIcon;
    private javax.swing.JTextField userId;
    private javax.swing.JTextField userLName;
    private javax.swing.JLabel userLabel;
    private javax.swing.JPanel userPanel;
    private javax.swing.JTextField userPassword;
    private javax.swing.JTextField userPhone;
    private javax.swing.JButton userSaveBtn;
    private javax.swing.JTable userTable;
    private javax.swing.JLabel userTopic;
    private javax.swing.JLabel userTopic1;
    private javax.swing.JLabel userTopic2;
    private javax.swing.JLabel userTopic3;
    private javax.swing.JLabel userTopic4;
    private javax.swing.JButton userUpdateBtn;
    private javax.swing.JLabel welcomeName;
    // End of variables declaration//GEN-END:variables
}
