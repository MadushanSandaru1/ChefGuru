/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package reports_format;

import chefguru.AdminDashboard;
import chefguru.ErrorMsg;
import dbconnection.DBConnection;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author sanda
 */
public class Transaction_Report extends javax.swing.JFrame {

    /**
     * Creates new form Guest_Information_Report
     */
    
    Connection conn = null;
    PreparedStatement ps = null;
    CallableStatement cs = null;
    ResultSet rs = null;
    
    DBConnection obj = DBConnection.getDb();
    
    public Transaction_Report() {
        initComponents();
        
        this.setIconImage(new ImageIcon(getClass().getResource("/image/logo_small.png")).getImage());
        
        upper_date.setText(new AdminDashboard().dateForUse());
        
        filterMonth.setEnabled(false);
        filterDay.setEnabled(false);
        
        viewTransactionDetails();
        
        //comboBoxYear();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        report_scrollpane = new javax.swing.JScrollPane();
        report_pane = new javax.swing.JPanel();
        upper_line = new javax.swing.JPanel();
        middle_line = new javax.swing.JPanel();
        lower_line = new javax.swing.JPanel();
        logo = new javax.swing.JLabel();
        address = new javax.swing.JLabel();
        heading = new javax.swing.JLabel();
        date_label = new javax.swing.JLabel();
        upper_date = new javax.swing.JLabel();
        note = new javax.swing.JLabel();
        table_scrollpane = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        date_line = new javax.swing.JLabel();
        signature_line = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        signature = new javax.swing.JLabel();
        headingDate = new javax.swing.JLabel();
        close_btn = new javax.swing.JButton();
        print_btn = new javax.swing.JButton();
        filter_btn = new javax.swing.JButton();
        filterDay = new javax.swing.JComboBox<>();
        filterMonth = new javax.swing.JComboBox<>();
        filterYear = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        background.setBackground(new java.awt.Color(102, 0, 0));

        report_pane.setBackground(new java.awt.Color(255, 255, 255));
        report_pane.setPreferredSize(new java.awt.Dimension(570, 730));

        upper_line.setBackground(new java.awt.Color(102, 0, 0));

        javax.swing.GroupLayout upper_lineLayout = new javax.swing.GroupLayout(upper_line);
        upper_line.setLayout(upper_lineLayout);
        upper_lineLayout.setHorizontalGroup(
            upper_lineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        upper_lineLayout.setVerticalGroup(
            upper_lineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        middle_line.setBackground(new java.awt.Color(102, 0, 0));

        javax.swing.GroupLayout middle_lineLayout = new javax.swing.GroupLayout(middle_line);
        middle_line.setLayout(middle_lineLayout);
        middle_lineLayout.setHorizontalGroup(
            middle_lineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        middle_lineLayout.setVerticalGroup(
            middle_lineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );

        lower_line.setBackground(new java.awt.Color(102, 0, 0));

        javax.swing.GroupLayout lower_lineLayout = new javax.swing.GroupLayout(lower_line);
        lower_line.setLayout(lower_lineLayout);
        lower_lineLayout.setHorizontalGroup(
            lower_lineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        lower_lineLayout.setVerticalGroup(
            lower_lineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logo_small.png"))); // NOI18N

        address.setFont(new java.awt.Font("Cambria Math", 0, 11)); // NOI18N
        address.setText("<html>Sri Sangharaja Piriwena Road,<br>Lower Kahattewela,<br>Bandarawela 90100,<br>Sri Lanka<br>Tel: +94 57 22 30 500<br>Email: mevangurusinghe2@gmail.com<html>");

        heading.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        heading.setText("Transaction Report");

        date_label.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        date_label.setText("Date:");

        upper_date.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N

        note.setFont(new java.awt.Font("Cambria Math", 1, 12)); // NOI18N
        note.setText("Note");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Bill Id", "Type", "Date", "Amount (Rs.)"
            }
        ));
        table.setGridColor(new java.awt.Color(102, 0, 0));
        table.setRowHeight(20);
        table_scrollpane.setViewportView(table);

        date_line.setText("__________________");

        signature_line.setText("__________________");

        date.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        date.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        date.setText("Date");

        signature.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        signature.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        signature.setText("Signature");

        headingDate.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        headingDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headingDate.setText("2020");

        javax.swing.GroupLayout report_paneLayout = new javax.swing.GroupLayout(report_pane);
        report_pane.setLayout(report_paneLayout);
        report_paneLayout.setHorizontalGroup(
            report_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(report_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(report_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lower_line, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(middle_line, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(upper_line, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, report_paneLayout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(logo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83))
            .addGroup(report_paneLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(report_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(date_line, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(report_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(signature_line, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(signature, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(78, 78, 78))
            .addGroup(report_paneLayout.createSequentialGroup()
                .addGroup(report_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(report_paneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(note))
                    .addGroup(report_paneLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(report_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(table_scrollpane, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
                            .addComponent(heading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(headingDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(report_paneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(date_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(upper_date, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        report_paneLayout.setVerticalGroup(
            report_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(report_paneLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(upper_line, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(report_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(report_paneLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(report_paneLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(logo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(middle_line, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(report_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(date_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(upper_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(heading)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(headingDate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(table_scrollpane, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(report_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(date_line)
                    .addComponent(signature_line))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(report_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(date)
                    .addComponent(signature))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lower_line, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(note)
                .addGap(31, 31, 31))
        );

        report_scrollpane.setViewportView(report_pane);

        close_btn.setBackground(new java.awt.Color(255, 96, 92));
        close_btn.setForeground(new java.awt.Color(255, 255, 255));
        close_btn.setText("Close");
        close_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                close_btnActionPerformed(evt);
            }
        });

        print_btn.setBackground(new java.awt.Color(0, 202, 78));
        print_btn.setForeground(new java.awt.Color(255, 255, 255));
        print_btn.setText("Print");
        print_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                print_btnActionPerformed(evt);
            }
        });

        filter_btn.setBackground(new java.awt.Color(85, 85, 85));
        filter_btn.setForeground(new java.awt.Color(255, 255, 255));
        filter_btn.setText("Reset");
        filter_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filter_btnActionPerformed(evt);
            }
        });

        filterDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        filterDay.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                filterDayItemStateChanged(evt);
            }
        });

        filterMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        filterMonth.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                filterMonthItemStateChanged(evt);
            }
        });

        filterYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));
        filterYear.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                filterYearItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(print_btn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(close_btn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addComponent(filterYear, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(filterMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(filterDay, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(filter_btn)
                .addGap(102, 102, 102))
            .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(report_scrollpane, javax.swing.GroupLayout.DEFAULT_SIZE, 592, Short.MAX_VALUE))
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(print_btn)
                    .addComponent(close_btn)
                    .addComponent(filter_btn)
                    .addComponent(filterDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filterMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filterYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(541, Short.MAX_VALUE))
            .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundLayout.createSequentialGroup()
                    .addGap(0, 44, Short.MAX_VALUE)
                    .addComponent(report_scrollpane, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void print_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_print_btnActionPerformed
        printRecord(report_pane);
    }//GEN-LAST:event_print_btnActionPerformed

    private void close_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_close_btnActionPerformed
        this.dispose();
    }//GEN-LAST:event_close_btnActionPerformed

    private void filter_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filter_btnActionPerformed
        filterYear.setSelectedIndex(0);
        filterMonth.setSelectedIndex(0);
        filterDay.setSelectedIndex(0);
        
        filterMonth.setEnabled(false);
        filterDay.setEnabled(false);
        
        viewTransactionDetails();
    }//GEN-LAST:event_filter_btnActionPerformed

    private void filterYearItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_filterYearItemStateChanged
        if(filterYear.getSelectedItem().toString().equalsIgnoreCase("Year")){
            filterMonth.setSelectedIndex(0);
            filterDay.setSelectedIndex(0);
        } else {
            filterMonth.setEnabled(true);
        }
        
        viewTransactionDetails();
    }//GEN-LAST:event_filterYearItemStateChanged

    private void filterMonthItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_filterMonthItemStateChanged
        if(filterMonth.getSelectedItem().toString().equalsIgnoreCase("Month")){
            filterDay.setSelectedIndex(0);
        } else {
            filterDay.setEnabled(true);
        }
        
        viewTransactionDetails();
    }//GEN-LAST:event_filterMonthItemStateChanged

    private void filterDayItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_filterDayItemStateChanged
        
        viewTransactionDetails();
    }//GEN-LAST:event_filterDayItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transaction_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transaction_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transaction_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transaction_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Transaction_Report().setVisible(true);
            }
        });
    }
    
    private void printRecord(JPanel panel){
        // Create PrinterJob Here
        PrinterJob printerJob = PrinterJob.getPrinterJob();
        // Set Printer Job Name
        printerJob.setJobName("Print Record");
        // Set Printable
        printerJob.setPrintable(new Printable() {
            @Override
            public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
                // Check If No Printable Content
                if(pageIndex > 0){
                    return Printable.NO_SUCH_PAGE;
                }
                
                // Make 2D Graphics to map content
                Graphics2D graphics2D = (Graphics2D)graphics;
                // Set Graphics Translations
                // A Little Correction here Multiplication was not working so I replaced with addition
                graphics2D.translate(pageFormat.getImageableX()+10, pageFormat.getImageableY()+10);
                // This is a page scale. Default should be 0.3 I am using 0.5
                graphics2D.scale(1, 1);
                
                // Now paint panel as graphics2D
                panel.paint(graphics2D);
                
                // return if page exists
                return Printable.PAGE_EXISTS;
            }
        });
        // Store printerDialog as boolean
        boolean returningResult = printerJob.printDialog();
        // check if dilog is showing
        if(returningResult){
            // Use try catch exeption for failure
            try{
                // Now call print method inside printerJob to print
                printerJob.print();
            }catch (PrinterException printerException){
                JOptionPane.showMessageDialog(this, "Print Error: " + printerException.getMessage());
            }
        }
        
        this.dispose();
    }
    
    public void viewTransactionDetails(){
        
        String search_key = "%";
        
        upper_date.setText(new AdminDashboard().dateForUse());
        
        String year = filterYear.getSelectedItem().toString();
        String month = filterMonth.getSelectedItem().toString();
        String month_int = convertMonthToNumber(month);
        String day = filterDay.getSelectedItem().toString();
        
        if(year.equalsIgnoreCase("Year")) {
            headingDate.setText(null);
            search_key = null;
            search_key = "%";
        } else if(month.equalsIgnoreCase("Month")) {
            headingDate.setText(year);
            search_key = null;
            search_key = year+"%";
        } else if(day.equalsIgnoreCase("Day")) {
            headingDate.setText(year+" - "+month);
            search_key = null;
            search_key = year+"-"+month_int+"%";
        } else {
            headingDate.setText(year+" - "+month+" - "+day);
            search_key = null;
            search_key = year+"-"+month_int+"-"+day+"%";
        }
        
        conn = obj.connect();
        
        try {
                cs = conn.prepareCall("{CALL `filterTransactionDetails`(?)}");
                cs.setString("search_key", search_key);
                rs = cs.executeQuery();

                table.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
                new ErrorMsg().showErr(e.getMessage());
                //JOptionPane.showMessageDialog(null, e.getMessage());
            }
        
        conn = null;
        
    }
    
    public String convertMonthToNumber(String month_of_string){
        
        String month_of_int = null;
        
        switch (month_of_string) {
            case "January":
                month_of_int = "01";
                break;
                
            case "February":
                month_of_int = "02";
                break;
                
            case "March":
                month_of_int = "03";
                break;
                
            case "April":
                month_of_int = "04";
                break;
                
            case "May":
                month_of_int = "05";
                break;
                
            case "June":
                month_of_int = "06";
                break;
                
            case "July":
                month_of_int = "07";
                break;
                
            case "August":
                month_of_int = "08";
                break;
                
            case "September":
                month_of_int = "09";
                break;
                
            case "October":
                month_of_int = "10";
                break;
                
            case "November":
                month_of_int = "11";
                break;
                
            case "December":
                month_of_int = "12";
                break;
        }
        
        return month_of_int;
    }
    
    /*public void comboBoxYear(){
        
        try {
            filterYear.removeAllItems();
        } catch (Exception e) {
        }
        
        //filterYear.addItem("Year");
        conn = obj.connect();
        
        try {
        
            cs = conn.prepareCall("{CALL `getTransactionYears`()}");
            rs = cs.executeQuery();
        
            while(rs.next()){
                filterYear.addItem(rs.getString("year"));
            }
            
        } catch (SQLException e) {
            new ErrorMsg().showErr(e.getMessage());
        }
        
        conn = null;
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel address;
    private javax.swing.JPanel background;
    private javax.swing.JButton close_btn;
    private javax.swing.JLabel date;
    private javax.swing.JLabel date_label;
    private javax.swing.JLabel date_line;
    private javax.swing.JComboBox<String> filterDay;
    private javax.swing.JComboBox<String> filterMonth;
    private javax.swing.JComboBox<String> filterYear;
    private javax.swing.JButton filter_btn;
    private javax.swing.JLabel heading;
    private javax.swing.JLabel headingDate;
    private javax.swing.JLabel logo;
    private javax.swing.JPanel lower_line;
    private javax.swing.JPanel middle_line;
    private javax.swing.JLabel note;
    private javax.swing.JButton print_btn;
    private javax.swing.JPanel report_pane;
    private javax.swing.JScrollPane report_scrollpane;
    private javax.swing.JLabel signature;
    private javax.swing.JLabel signature_line;
    private javax.swing.JTable table;
    private javax.swing.JScrollPane table_scrollpane;
    private javax.swing.JLabel upper_date;
    private javax.swing.JPanel upper_line;
    // End of variables declaration//GEN-END:variables
}
